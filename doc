Add class template-{{ template.suffix }} to body tag to have unique class for each template.
_____________________________________________________________________________________________________________________________
We can get any attribute in after or before and display it as follow.
<span class="site-header-cart--count visible" data-header-cart-count="1"></span>
.site-header-cart--count:after {
    content: attr(data-header-cart-count);
}
____________________________________________________________________________________________
if we want to disable the liquid functionality for any js,css or html code in liquid file file, we can wrap that code in {% raw %} ... {% endraw %} tag as below.
it is useful when we have to fix the conflicts between shopify variables and javascript variables such as handlebars variables which has same variable syntax {{ variable }} as shopify. if we don't use raw tag wrapper on js script, then js variable {{ variable }} will be treated as liquid varialbe and js functionality will not work. 
{% raw %} 
Any js,css or html code 
{% endraw %}
____________________________________________________________________________________________
Toppest z index to be used is:-   z-index: 2147483646
Fix iphone shaking content issue in div with touch: just add "-webkit-overflow-scrolling: touch;" to parent div 
_______________________________________________________________________________________________
loading icon:
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="margin:auto;background:transparent;display:block;" width="30px" height="30px" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid"><circle cx="50" cy="50" r="32" stroke-width="8" stroke="#f1f1f2" stroke-dasharray="50.26548245743669 50.26548245743669" fill="none" stroke-linecap="round"><animateTransform attributeName="transform" type="rotate" repeatCount="indefinite" dur="1s" keyTimes="0;1" values="0 50 50;360 50 50"></animateTransform></circle></svg>
_______________________________________________________________________________________________
This is how we can get url data in Shopify liquid programming.
{% if request.path contains 'anystring' %}
do the stuff
{% endif %}
_________________________________________________________________________________________________
This is how to trim string in shopify. we can use dividewords[0], dividewords[1] variable to print before and after part of string.
{% assign producturl = item.url  %}
{% assign dividewords = producturl | split: '?' %}
{% assign finalhandle = dividewords[0] | remove: "/products/" %}
{% assign firstprice = all_products[finalhandle].price %}
_______________________________________________________________________________________________
CSS selector tricks: 
<div class="parent">
<div class="child1"></div>
<div class="child2"></div>
<div class="child4"></div>
</div>
Apply css on child2 if parent has other sibling immediately above child2 such as child1 ==> .child1+.child2
Apply css on child4 if parent has other sibling such as child1 anywhere above child4 ==> .child1 ~ .child4
________________________________________________________________________________________________
Array:
{% assign productsid = "6939017543762,4857845416018,194539,1721224986667,6948913250386,6816392970322" | split: ','%}
{% for productid in productsid %}
{{ productid }}
{% endfor %}
_______________________________________________________________________________________________________________
This is how filter url works:
https://xyz.com/collections/lightweight-travel-cases/akai+arturia+audient?sort_by=manual
_____________________________________________________________________________________________
To add a link of collection on product page.
 {% if collection.url %}
        {{ collection.title | link_to: collection.url }}
      {% endif %}
__________________________________________________________________________________________________________________
Theme layout:
if want to use different design of any page than website design. then we can create different layout for that page and call that layout in template of that page.
Such as in following page template code.
 
{% layout "theme.differnt-design" %}
{{ 'all.min.css' | asset_url | stylesheet_tag }}
custom header
{{ page.content }}
custom footer
__________________________________________________________________________________________________________________________________
use "Speed optimization mehtod: Lazyload2 and Critical2" method instead of it that is explained below.
Increase loading speed:
Just go in theme.liquid file and replace {{content_for_header}} with following code:

{% comment %} replace all below code with "{ {content_for_header} }" variable to restore back to default {% endcomment %}  
{% comment %}
  Need to output content_for_header here as theme.liquid wont save without it
  {{ content_for_header }}
{% endcomment %}
{% assign domcontentloadeda = "document.addEventListener('DOMContentLoaded'" %}
{% assign startasyncLoadinga= "document.addEventListener('StartAsyncLoading'" %} 
{% assign domcontentloaded = 'e.addEventListener("DOMContentLoaded"' %}
{% assign startasyncLoading= "e.addEventListener('StartAsyncLoading'" %}
 {% assign rapp = ", asyncLoad" %}{% assign napp= ", function(){}" %}
 {% assign rappload = "if(window.attachEvent)" %}
{% assign nappload= "document.addEventListener('StartAsyncLoading',function(event){asyncLoad();});if(window.attachEvent)" %}
{% assign rstorefrontload = "var customDocumentWrite = function(content)" %}
{% assign nstorefrontload= "document.addEventListener('StartKernelLoading', function() { document.dispatchEvent(new CustomEvent('StartShopifyLoading')); var customDocumentWrite = function(content)" %}
{% assign rstorefront = "document.getElementsByTagName('head')[0].appendChild(eventsListenerScript)" %}
{% assign nstorefront= "document.getElementsByTagName('head')[0].appendChild(eventsListenerScript);})" %}
{% if template == 'cart' %}{{ content_for_header | replace: 'src=', 'data-src=' | replace: domcontentloadeda, startasyncLoadinga  | replace: domcontentloaded, startasyncLoading | replace: rapp, napp  | replace: rappload, nappload | replace: "3035276143367222", "" | replace: "456059262237646", "" }}
{% else %} 
{{ content_for_header | replace: 'src=', 'data-src=' | replace: domcontentloadeda, startasyncLoadinga  | replace: domcontentloaded, startasyncLoading | replace: rapp, napp  | replace: rappload, nappload | replace: rstorefrontload, nstorefrontload | replace: rstorefront, nstorefront | replace: "3035276143367222", "" | replace: "456059262237646", "" }}{% endif %}        
{% comment %} replace all above code with "{ {content_for_header} }" variable to restore back to default {% endcomment %} 

----------------------------------------------------------------------------------------------------------
OR use the code below that used by sleepgalleria developer
{%- if request.host == "sleep-galleria.myshopify.com" or template contains 'product' or template contains 'cart' or template contains 'checkout' -%}
{{ content_for_header }}
{%- else -%}
{% capture content_for_header2 %}{{ content_for_header }}{% endcapture %}
{{ content_for_header2 | replace: ' defer="defer" ', ' type="lazyload2" ' | replace: " src=", " data-src=" | replace: "window.addEventListener('load', asyncLoad, false);", "window.addEventListener('wnw_load', asyncLoad, false);" | replace: "DOMContentLoaded", "DOMContentLoaded2" }}
{%- endif -%}
-------------------------------------------------------------------------------------------------------------
OR use the code below that used by sleepgalleria developer to reach its speed to 95 score on google speed for mobile devices.
{%comment%}{{ content_for_header }}{%endcomment%}{%include "cfh"%}

cfh.liquid code:
{% assign domcontentloadeda = "document.addEventListener('DOMContentLoaded'" %}
{% assign startasyncLoadinga= "document.addEventListener('StartAsyncLoading'" %} 
{% assign domcontentloaded = 'e.addEventListener("DOMContentLoaded"' %}
{% assign startasyncLoading= "e.addEventListener('StartAsyncLoading'" %}
{% assign rapp = ", asyncLoad" %}{% assign napp= ", function(){}" %}
{% assign rappload = "if(window.attachEvent)" %}
{% assign nappload= "document.addEventListener('StartAsyncLoading',function(event){asyncLoad();});if(window.attachEvent)" %}
{% assign rstorefrontload = "var customDocumentWrite = function(content)" %}
{% assign nstorefrontload= "document.addEventListener('StartKernelLoading', function() { document.dispatchEvent(new CustomEvent('StartShopifyLoading')); var customDocumentWrite = function(content)" %}
{% assign rstorefront = "document.getElementsByTagName('head')[0].appendChild(eventsListenerScript)" %}
{% assign nstorefront= "document.getElementsByTagName('head')[0].appendChild(eventsListenerScript);})" %}
{% if template == 'cart' %}{{ content_for_header | replace: 'src=', 'data-src=' | replace: domcontentloadeda, startasyncLoadinga  | replace: domcontentloaded, startasyncLoading | replace: rapp, napp  | replace: rappload, nappload }}
{% else %} 
{{ content_for_header | replace: 'src=', 'data-src=' | replace: domcontentloadeda, startasyncLoadinga  | replace: domcontentloaded, startasyncLoading | replace: rapp, napp  | replace: rappload, nappload | replace: rstorefrontload, nstorefrontload | replace: rstorefront, nstorefront }}{% endif %}


_____________________________________________________________________________________________________________________
Very important jquery use:
Jquery click event does not work if the selector we are clicking on made by previous jquery event. For example, we added a new button using jquery and again we want 
to run jquery event on clicking button created by previous event. 
Here normal click function of jquery will not work, 
$(".newcreatedbutton").click(function(){
alert();
});

so to make it work we need to use following way of click function.
$(document).on('click','.newcreatedbutton', function(e) {    
     alert();
});
____________________________________________________________
Cookie code to display popup only once in one day, hour etc. here is code to set popup to display once in one hour.
-----------
if (document.cookie.indexOf("popup_has_displayed") > -1 ) {
   //alert( "popup_has_displayed Text found" );
}else{
   //alert( "not found" );
getMobileOperatingSystem(); 
var value = "popup_has_displayed";   
var now = new Date();
var time = now.getTime(); 
time += 3600 * 1000;//one hour
now.setTime(time);
document.cookie = 'checkingpopup=' + value + '; expires=' + now.toUTCString() + '; path=/';
}
________________________________________________________________________________________________
How to pass the section values to snippet by using variables:
{% include 'product-template-snippet',
  description_style: section.settings.description_style,
  image_position: section.settings.image_position,
  image_container_width: section.settings.image_size,
  section_id: product.id,
  social: section.settings.social_enable,
  thumbnail_position: section.settings.thumbnail_position,
  thumbnail_arrows: section.settings.thumbnail_arrows
%}


Then using in snippet as
{{ description_style }}
{{ image_position }}
{{ image_container_width }}
____________________________________________________________________________________________________





Refresh cart icon and cart drawer values (Ajax values) automatically after 3 seconds. 
it is usable when we use any app that changes total price and total items in cart without refreshing page. such as Discount app and upsell app.
-----------------------------
setInterval(function(){ 
$.getJSON('/cart.js', function(cart) {
$(".item-count").html(cart.item_count);
}  
$(".carttotal").html("£"+cart.total_price/100+".00");   
})}, 3000);
_______________________________________________________________________________________________
SEO:
Fix duplicate content issue of product page url due to being same product in different collection and collection page pagination issue in SEO that comes on Google search console. (Google search console is also know as Google webmaster)
https://community.shopify.com/c/Shopify-Discussion/Duplicate-Content-Same-Page-with-different-url/td-p/392224
https://gist.github.com/willbroderick/b38852d7c87762cc4804cbef0cbdf45b
https://community.shopify.com/c/Shopify-Discussion/noindex-issues-with-tags-and-pagination/m-p/182061
------------------------------------------------------------------------------------
{% if template contains 'collection' and (current_tags or current_page != 1) %}
<meta name="robots" content="noindex" />
<link rel="canonical" href="{{ shop.url }}{{ collection.url }}" />
{% else %}
<meta name="robots" content="index,follow">
<link rel="canonical" href="{{ canonical_url }}" />
{% endif %}
--------------------------
<link rel="alternate" hreflang ="es" href="{{ canonical_url }}" />
{% if current_page > 1 %}
<meta name="robots" content="noindex">
{% endif %} 
_______________________________________________________
{% comment %} {% endcomment %}
{% include 'snippet-name' %}
{% section 'sectionname-name' %}
{{ 'custom-style.css' | asset_url | stylesheet_tag }}
{{ 'image.jpg' | asset_url | img_tag }}
{{ 'custom.js' | asset_url | script_tag }}

{% assign foo = 'pageslug' %}
{{ pages[foo].content }}
___________________________________________________________
Here is how to apply different templates according to tags on product.liquid page.
{% assign ispaused = false %}
{% for tag in product.tags %}
{% if tag contains 'pauseanorder' or tag contains 'Pauseanorder' %}
{% assign ispaused = true %}
{% endif %}
{% endfor %}

{% if ispaused == true %}
{% section 'product-template-pause-for-order' %} 
{% else %}
{% section 'product-template' %} 
{% endif %}
______________________________________________
 <div>
  <ul class="tabs">
    <li><a href="#tab-1">Info</a></li>
    <li><a href="#tab-2">Shipping</a></li>
    <li><a href="#tab-3">Returns</a></li>
  </ul>
  <div id="tab-1">
  {{ product.description }}
  </div>
  <div id="tab-2">
  {{ pages.shipping.content }}
  </div>
  <div id="tab-3">
  {{ pages.returns.content }}
  </div>
          
</div>
____________________________________________________
Navigation dropdown css:
.dropdown ul.submenu {
    display: none;
}
.dropdown:hover .submenu {
    display: block;
}
_________________________________________________________________
To add custom font:
Download ttf file i.e from https://www.wfonts.com/font/verdana
then genrate fontface by upload ttf file to https://transfonter.org/
Then download font zip file from https://transfonter.org/
Then upload its woff files on files folder of website and add font face in stylesheet as below having link to the uploaded files. then use font family in css such as below.

Stylesheet.css

@font-face {
    font-family: 'Roboto';
    src: url('https://cdn.shopify.com/s/files/1/2698/4416/files/Roboto-Bold.woff2') format('woff2'),
        url('https://cdn.shopify.com/s/files/1/2698/4416/files/Roboto-Bold.woff') format('woff');
    font-weight: bold;
    font-style: normal;
    font-display: swap;
}

.maincontainer,.maincontainer span,.maincontainer p,.maincontainer h2,.maincontainer li {
    font-family: 'Roboto'!important;
    font-weight: bold;
}

_____________________________________________________________________________________
Shofiy:-
Shopify provides trial account same as squarespace for 14 days.It is only used for shopping purpose. it provide very simple
interface for creating online store(shopping pages). It is mostly designed same as woocommerce of wordpress means the person who
knows the woocommerce can easity handle the settings of shopify.

Addtionaly we can import/export themes and products in it. we can also do a customization in theme files. like we can create
our own template as in wordpress. To customize the files just go to theme customization. then Go to Theme options on top right side.
then select 'edit html/css' and then it will show all the files of theme. To create a new template just click on create a new template
, then it will provide all option like template of page, aritlce, blog etc. then select page and create it. then it will create
ur template page. then Add a new page in dashbaord and select the currently created template for it. we can also add our own
html in newly created template. template code works similariy wordpress.

We can also put the custom css in css.liquid file.

Header and Footer:
To edit Header and footer. we will need to customize the theme.liquid file.

Note:-
theme.liquid file is a file that will run for all pages. we will put  header and footer in theme.liquid file and use the {{ content_for_layout }} in body area of page. 
 {{ content_for_layout }} will fetch the dynamic content of each page. Do'nt forget to add the  {{ content_for_header }} in <head> tag of header. it includes all the 
dynamic code,links etc.

index.liquid file is a file of Home page. we can customize it to customize the Home page. create template for the other pages.
---------------------------
Schema:- Schema is very Very useful feature of Shopify which is used under each section liquid files. it is used to create dynamic theme settings of pages. we can create custom schema, add more options to existing schema as well. We can create particular schema for each page, just we will have to create section liquid file for that page and need to include that file in page template file. The Schema for particular page will be only shown when we will open that page in "Customize" theme option settings. we can create common setting options for each page by calling schema in header or footer file. 
-------------------------------
used Apps:
Auto Currency Switcher (To add the currency switcher on  website, just follow the setting options it will automatically add the currency switcher dropdown on website)
Loyalty, rewards and referrals by LoyaltyLion (To show reward coupons)
Privy - Free email popups with exit intent(Great newsletter popup on website that will be integrated with further to all email CRM like mailchip,icontact,contstantcontact, infusionsoft etc)
Product Reviews(To show the Customer reviews on product page)
_______________________________________________________________________________________
Contact us page:
Put following hidden input fields in contact form template file of shopify to change the destination email and Subject of email.
--------------------------------
<input type="hidden" name="contact[subject]" value"My New subject line" />
<input type="hidden" name="contact[send-to]" value"ankpro29@gmail.com" />
--------------------------------
______________________________________________________________________________
Latest blog posts:
--------------------------------
<div class="bloghomepage inner">
<h2>Latest Posts</h2>
<ul>
{% for article in blogs.news.articles limit: 5 %}
<li>
<h3><a href="{{ article.url }}">{{ article.title }}</a></h3>
<span><img src="{{ article | img_url: 'large' }}"></span>
<p>{{ article.content | strip_html | truncatewords: 50 }}</p>
<p><a href="{{ article.url }}">{{ 'blogs.article.read_more' | t }} &rarr;</a></p>
</li>
{% endfor %}
</ul>
</div>
--------------------------------
________________________________________________________
Navigation:

If we want to add the sub pages under any page then just create a new page and give the name of page in Menu description under which you want 
to add the sub pages. Note put the correct slug in "Handle (what's this?)" field otherwise it would not work. Then all pages added in
that menu will be listed as a sub pages of mentioned page in description.
________________________________________________________________________________________
Pages:
Header and footer is in theme.liquid file
Home is in index.liquid file
create new file for css in assets and link it in theme.liquid file using {{ 'style.css' | asset_url | stylesheet_tag }} function.
collection pages are come from collection.liquid file.
__________________________________________________________________-
Search form:
--------------------------------
<form method="get" action="/search">
    <input type="text" name="q" />
    <input  type="submit" value="Search" />
</form>
--------------------------------
__________________________________________________________________
Schema:
--------------------------------
{% if section.settings.id_text %}
<iframe src="https://www.youtube.com/embed/{{section.settings.id_text}}?autohide=1&auto=1&rel=0&autoplay=1&iv_load_policy=3&modestbranding=1&controls=0&showinfo=0" width="640" height="480" frameborder="0" title="Funny Cat Videos For Kids" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen="" data-ready="true"></iframe>
{% endif %}

{% schema %}
  {
    "name": "Youtube Video",
    "settings": [
     {
        "type": "text",
        "id": "id_text",
        "label": "ID of Youtube Video",
        "default": "-WqeFWUr2qA"
      }
                ]
  }
{% endschema %}
--------------------------------
______________________________________________________________________________
Section:- Block schema to add multple blocks and fetch them, very useful code.
--------------------------------
{% for block in section.blocks %}
<h2>{{ block.settings.color_variable }}</h2>
<img src="{{ block.settings.image_variable | img_url: '800x' }}"/>
{% endfor %}

{% schema %}
{
    "name": "Color Images",
    "max_blocks": 40,
    "blocks": [
 {
      "type": "image",
      "name": {
        "en": "Image & Color"
      },
      "settings": [
        {
          "type": "image_picker",
          "id": "image_variable",
          "label": {
            "en": "Image"
          }
        },
        {
          "type": "text",
          "id": "color_variable",
          "label": {
            "en": "Color Name"
          }
        }
               ]
 }
         ]
}
{% endschema %}
-----------------------------------------------------------------------------
{% for block in section.blocks %}
{% if product.handle == block.settings.productid %}

   <div class="trending-block">
	<h4> {{ product_item.title }}</small></h4>
	<ul class="star">
		<li><i class="fas fa-star"></i></li>
		<li><i class="fas fa-star"></i></li>
		<li><i class="fas fa-star"></i></li>
		<li><i class="fas fa-star"></i></li>
		<li><i class="fas fa-star"></i></li>
	</ul>
	<img src="{{ product_item | img_url: 'master' }}">
	<span>${{ product_item.price }}</span>
	<a href="{{ product_item.url }}">Shop Now</a>
	</div>


{% endfor %}


{% schema %}
{
    "name": "Home page products",
    "max_blocks": 3,
    "blocks": [
 {
      "type": "product",
      "name": {
        "en": "Products"
      },
      "settings": [
        {
          "type": "product",
          "id": "productid",
          "label": {
            "en": "product"
          }
        }
               ]
 }
         ]
}
{% endschema %}
-----------------------------------------------------------------------------------------------------------------
Section to show dynamic offer text on different product page. just create empty div such as <span id="offerbox" class="offerbox"></span> where to show this offer on product page and include this section on product page.
Don't use following method (all_products[block.settings.productid]) to fetch product id as it has limit to fetch only 20 products.
{% assign product_item = all_products[block.settings.productid] %}
{% if product_item.id == product.id %}
.....................................
{% for block in section.blocks %}
{% if product.handle == block.settings.productofferid %}
{% if block.settings.offertext != blank %}
<script>
$(document).ready(function(){
var offerbox = document.getElementById("offerbox");
  offerbox.classList.add("offerboxcss");
  offerbox.innerHTML = "{{ block.settings.offertext }}";
});
</script>
{% endif %}
{% endif %}
{% endfor %}
<style>
.offerboxcss {
    background: red;
    border-radius: .1875rem;
    font-size: .75em;
    font-weight: 600;
    line-height: 1em;
    margin-bottom: .625rem;
    padding: .5em .75em;
    text-transform: uppercase;
    color: #ffffff;
    vertical-align: top;
    display: inline-block;
}
</style>


{% schema %}
{
    "name": "Display Offer on Products",
    "max_blocks": 100,
    "blocks": [
 {
      "type": "product",
      "name": {
        "en": "Products"
      },
      "settings": [
          {
          "type": "product",
          "id": "productofferid",
          "label": "Select Product to Show offer"
          },
          {
          "type": "text",
          "id": "offertext",
          "label": "Offer Text for this Product"
          }
]
 }
]
}
{% endschema %}
--------------------------------------------------------------------------------------------------------
we can use this function instead of document ready if we don't want to add jquery link.
<script>
document.addEventListener('DOMContentLoaded', function(event) {
var discountdiv = document.getElementById('discountdiv');
var discounttext = document.getElementById('discounttextline');
discountdiv.appendChild(discounttext);
discounttext.classList.remove("hidit");
});
</script>
------------------------------------------------------------------------------------------------------------------
Other way if needs to use for multiple products at once such as on collecton pages. then use this way:

{% for block in section.blocks %}
{% if block.settings.offertext != blank %}
<script>
$(document).ready(function(){
var offerbox = document.getElementById("{{ block.settings.productofferid | append: "-offer"}}");
  offerbox.classList.add("offerboxcss");
  offerbox.innerHTML = "{{ block.settings.offertext }}";
});
    
</script>
{% endif %}
{% endfor %}
<style>
.offerboxcss {
    background: red;
    border-radius: .1875rem;
    font-size: .75em;
    font-weight: 600;
    line-height: 1em;
    margin-bottom: .625rem;
    padding: .5em .75em;
    text-transform: uppercase;
    color: #ffffff;
    vertical-align: top;
    display: inline-block;
}
.fixedoffer {
    position: absolute;
    top: 8px;
    left: 5px;
    z-index: 99999;
}
.collection-product {
    position: relative;
}
@media only screen and (max-width: 450px) {
.offerboxcss {
    font-size: 8px;
    top: 6px;
}
.collection-product .badge.sale-sticker {
    font-size: 8px;
}  
}  
</style>


{% schema %}
{
    "name": "Display Offer on Products",
    "max_blocks": 100,
    "blocks": [
 {
      "type": "product",
      "name": {
        "en": "Products"
      },
      "settings": [
          {
          "type": "product",
          "id": "productofferid",
          "label": "Select Product to Show offer"
          },
          {
          "type": "text",
          "id": "offertext",
          "label": "Offer Text for this Product"
          }
]
 }
]
}
{% endschema %}
------------------------------------------------------------------------------------------------------------------
A complete section to have dynamic content for each product page.
.................
{% for block in section.blocks %}
{% if product.handle == block.settings.productid %}
<div id="whatweget" class="whatweget" style="display:none">
<h3>What You Get</h3>
<ul>
{% if block.settings.firsticon != blank %}<li>{{ block.settings.firsticon | asset_url | img_tag }}<span><b>{{ block.settings.firsticontext }}</b></span><span>{{ block.settings.firsticontext1 }}</span></li>{% endif %}
{% if block.settings.secondicon != blank %}<li>{{ block.settings.secondicon | asset_url | img_tag }}<span><b>{{ block.settings.secondicontext }}</b></span><span>{{ block.settings.secondicontext1 }}</span></li>{% endif %}
{% if block.settings.thirdicon != blank %}<li>{{ block.settings.thirdicon | asset_url | img_tag }}<span><b>{{ block.settings.thirdicontext }}</b></span><span>{{ block.settings.thirdicontext1 }}</span></li>{% endif %}
{% if block.settings.fourthicon != blank %}<li>{{ block.settings.fourthicon | asset_url | img_tag }}<span><b>{{ block.settings.fourthicontext }}</b></span><span>{{ block.settings.fourthicontext1 }}</span></li>{% endif %}
{% if block.settings.fifthicon != blank %}<li>{{ block.settings.fifthicon | asset_url | img_tag }}<span><b>{{ block.settings.fifthicontext }}</b></span><span>{{ block.settings.fifthicontext1 }}</span></li>{% endif %}
{% if block.settings.sixthicon != blank %}<li>{{ block.settings.sixthicon | asset_url | img_tag }}<span><b>{{ block.settings.sixthicontext }}</b></span><span>{{ block.settings.sixthicontext1 }}</span></li>{% endif %}
</ul>
</div>
<script>
$(document).ready(function(){
var d = document.getElementById('whatweget');
var p = document.getElementById('whatwegetparent');
p.appendChild(d); 
}); 
</script>

<style>
.whatwegetparent .whatweget {
    display: block!important;
}
</style>

{% endif %}
{% endfor %}



{% schema %}
{
    "name": "What You Get",
    "max_blocks": 100,
    "blocks": [
 {
      "type": "product",
      "name": {
        "en": "Products"
      },
      "settings": [
          {
          "type": "product",
          "id": "productid",
          "label": "Select Product"
          },
          {
          "type": "select",
          "id": "firsticon",
          "label": "Select First Icon",
          "options": [
           {
          "value": "",
          "label": "Select"
           },
           {
          "value": "checkenleggrey.png",
          "label": "Chicken Leg Grey"
           },
           {
          "value": "checkenlegred.png",
          "label": "Chicken Leg Red"
           },
           {
          "value": "meatgrey.png",
          "label": "Meat Grey"
           },
           {
          "value": "meatred.png",
          "label": "Meat Red"
           },
           {
          "value": "meatgrey1.png",
          "label": "Meat Grey 1"
           },
           {
          "value": "meatred1.png",
          "label": "Meat Red 1"
           }
           ],
          "default": ""
           },
           {
          "type": "text",
          "id": "firsticontext",
          "label": "First Icon Top Text"
          },
          {
          "type": "text",
          "id": "firsticontext1",
          "label": "First Icon Bottom Text"
          },
          {
          "type": "select",
          "id": "secondicon",
          "label": "Select Second Icon",
          "options": [
           {
          "value": "",
          "label": "Select"
           },
           {
          "value": "checkenleggrey.png",
          "label": "Chicken Leg Grey"
           },
           {
          "value": "checkenlegred.png",
          "label": "Chicken Leg Red"
           },
           {
          "value": "meatgrey.png",
          "label": "Meat Grey"
           },
           {
          "value": "meatred.png",
          "label": "Meat Red"
           },
           {
          "value": "meatgrey1.png",
          "label": "Meat Grey 1"
           },
           {
          "value": "meatred1.png",
          "label": "Meat Red 1"
           }
           ],
          "default": ""
           },
           {
          "type": "text",
          "id": "secondicontext",
          "label": "Second Icon Top Text"
          },
          {
          "type": "text",
          "id": "secondicontext1",
          "label": "Second Icon Bottom Text"
          },
          {
          "type": "select",
          "id": "thirdicon",
          "label": "Select Third Icon",
          "options": [
           {
          "value": "",
          "label": "Select"
           },
           {
          "value": "checkenleggrey.png",
          "label": "Chicken Leg Grey"
           },
           {
          "value": "checkenlegred.png",
          "label": "Chicken Leg Red"
           },
           {
          "value": "meatgrey.png",
          "label": "Meat Grey"
           },
           {
          "value": "meatred.png",
          "label": "Meat Red"
           },
           {
          "value": "meatgrey1.png",
          "label": "Meat Grey 1"
           },
           {
          "value": "meatred1.png",
          "label": "Meat Red 1"
           }
           ],
          "default": ""
           },
           {
          "type": "text",
          "id": "thirdicontext",
          "label": "Third Icon Top Text"
          },
          {
          "type": "text",
          "id": "thirdicontext1",
          "label": "Third Icon Bottom Text"
          },
          {
          "type": "select",
          "id": "fourthicon",
          "label": "Select Fourth Icon",
          "options": [
           {
          "value": "",
          "label": "Select"
           },
           {
          "value": "checkenleggrey.png",
          "label": "Chicken Leg Grey"
           },
           {
          "value": "checkenlegred.png",
          "label": "Chicken Leg Red"
           },
           {
          "value": "meatgrey.png",
          "label": "Meat Grey"
           },
           {
          "value": "meatred.png",
          "label": "Meat Red"
           },
           {
          "value": "meatgrey1.png",
          "label": "Meat Grey 1"
           },
           {
          "value": "meatred1.png",
          "label": "Meat Red 1"
           }
           ],
          "default": ""
           },
           {
          "type": "text",
          "id": "fourthicontext",
          "label": "Fourth Icon Top Text"
          },
          {
          "type": "text",
          "id": "fourthicontext1",
          "label": "Fourth Icon Bottom Text"
          },
          {
          "type": "select",
          "id": "fifthicon",
          "label": "Select Fifth Icon",
          "options": [
           {
          "value": "",
          "label": "Select"
           },
           {
          "value": "checkenleggrey.png",
          "label": "Chicken Leg Grey"
           },
           {
          "value": "checkenlegred.png",
          "label": "Chicken Leg Red"
           },
           {
          "value": "meatgrey.png",
          "label": "Meat Grey"
           },
           {
          "value": "meatred.png",
          "label": "Meat Red"
           },
           {
          "value": "meatgrey1.png",
          "label": "Meat Grey 1"
           },
           {
          "value": "meatred1.png",
          "label": "Meat Red 1"
           }
           ],
          "default": ""
           },
           {
          "type": "text",
          "id": "fifthicontext",
          "label": "Fifth Icon Top Text"
          },
          {
          "type": "text",
          "id": "fifthicontext1",
          "label": "Fifth Icon Bottom Text"
          },
          {
          "type": "select",
          "id": "sixthicon",
          "label": "Select Sixth Icon",
          "options": [
           {
          "value": "",
          "label": "Select"
           },
           {
          "value": "checkenleggrey.png",
          "label": "Chicken Leg Grey"
           },
           {
          "value": "checkenlegred.png",
          "label": "Chicken Leg Red"
           },
           {
          "value": "meatgrey.png",
          "label": "Meat Grey"
           },
           {
          "value": "meatred.png",
          "label": "Meat Red"
           },
           {
          "value": "meatgrey1.png",
          "label": "Meat Grey 1"
           },
           {
          "value": "meatred1.png",
          "label": "Meat Red 1"
           }
           ],
          "default": ""
           },
           {
          "type": "text",
          "id": "sixthicontext",
          "label": "Sixth Icon Top Text"
          },
          {
          "type": "text",
          "id": "sixthicontext1",
          "label": "Sixth Icon Bottom Text"
          }
]
 }
]
}
{% endschema %}
-------------------------------------------------------------------------------------------------------------------
To get page content by schema setting use following mehtod:


  {% if section.settings.product_tab3 %}
    <div class="dt-sc-tabs-content slideInDown">
      <p>{{ pages[section.settings.product_tab3_page].content }}</p>
    </div>
    {% endif %}
 
     {
        "type": "page",
        "id": "product_tab3_page",
        "label": "Select shipping info page"
      }
______________________________________________________________________________
Narrative theme: How to show all variant images with product image and make them to change the variant automatically on clicking. And show variant images in slider format for mobile view in place of product image.

Product page code:-
..................................
{% comment %}
  The contents of the product.liquid template can be found in /sections/product-template/
{% endcomment %}
<div class="desktopview">
{% for image in product.images %}
    {% for variant in image.variants %}
<img alt="{{ variant.title }}" src="{{ image | img_url: "small" }}" class="desktopimages"/>
{% endfor %}
{% endfor %}
</div> 

{% section 'product-template' %}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script>
$(document).ready(function(){
 var onloading = $('.single-option-selector').val();
 $("#"+onloading).css('background','red');
 $(".dots").click(function(){
    var dotid = $(this).attr("id");
   $('.single-option-selector').val(dotid).trigger('change');
 });
$('.single-option-selector').on('change', function() {
 $('.dots').css('background','white');
     $("#"+this.value).css('background','red');
});
 $(".desktopimages").click(function(){
     var alttext = $(this).attr("alt");
     $('.single-option-selector').val(alttext).trigger('change');
});
 $(".nextis").click(function(){
     var last = $('.dots:last-child').text();
    var currenttext = $('.single-option-selector').val()
     var checknext = $('.single-option-selector>option:selected').next().val();
     if(currenttext==last){}else{ 
       $('.single-option-selector').val(checknext).trigger('change');
     }
});
  $(".previousis").click(function(){
   var first = $('.dots:first-child').text();
    var currenttext = $('.single-option-selector').val()
     var previousis = $('.single-option-selector>option:selected').prev().val();
    if(currenttext==first){}else{ 
     $('.single-option-selector').val(previousis).trigger('change');
       }
});  
});

</script>
<style>
.mydotsare {
    text-align: center;
}
  .dots {
    padding: 5px!important;
    cursor:pointer;
   }
.desktopimages{
   cursor:pointer;
   }
</style>
......................................................
product-template:- Add this code under featured image code: this code will show dots under image under slider that will be work like a slider in mobile view.
......................................................
<span class="previousis" id="previousis">Previous</span> 
 {% unless product.variants.size == 1 and product.options.size == 1 and product.options.first == 'Title' and product.variants.first.title == 'Default Title' %}
    {% for option in product.options_with_values %}
      <div class="mydotsare">
 {% for value in option.values %}
            {% assign safeValue = value | replace: '"', '&quot;' %}
            <span class="dots" id="{{value}}">{{ value }}</span>
          {% endfor %}
        
      </div>
    {% endfor %}
  {% endunless %}  
<span class="nextis" id="nextis">Next</span>
 .........................................
____________________________________________________________________________________
Shopify App: follow this url:-  https://www.shopify.in/partners/blog/17056443-how-to-generate-a-shopify-api-token

Public App:- Shopify public apps are the apps that are hosted in any other cpanel(Not on shopify). They interact with shopify store, create access token and then use that access token to pull and push data. we can create shopify public app on our localhost. 

Following are the steps to create publci app.
Create account in shopify partner website.
Create a new app there, give any name to app and add url of our localhost install file suppose to be http://localhost/app/newapp/install.php
Then add http://localhost/app/newapp/generate_token.php url to Whitelisted redirection URL(s) fields, this url will generate access token.
Then download and paste the sample code of app from above url and paste it in newapp folder of localhost.
Then we need to copy the API key and Secret key of new created app and use them in install and generate_token.php file.

Then go to app in app listing store(make sure the partner account is logged in, otherwise the app will not be listed as it is not published for all), press get, then add shopify store url, then install it, then it will generate access token on http://localhost/app/newapp/generate_token.php page. That is the actual requirement of app. once we got it then We will use this access token to pull and push data to shopify from our localhost.
That's all in shopify app, 
________________________________________________________________________________
creating mini cart with ajax: Put following code in theme.js, create UL tag with class "cartupdating"
......................................................................................................................
 $.getJSON('/cart.js', function(cart) {
    // Update cart count
    theme.cache.$cartCount.text(cart.item_count);
   // $('.cart-count').text(cart.item_count);
  $('.totalmoneyis').text(cart.total_price);
    
  $(".cartupdating").empty();
 
 $.each(cart.items, function(index, cartItem) {
   $(".cartupdating").append('<li><a href="'+cartItem.url+'" class="dropdown-product-image"><img src="'+cartItem.image+'" alt="product image"/></a><p class="restrain-width"><a href="'+cartItem.url+'" class="small">'+cartItem.title+'</a><span class="money">'+(Shopify.formatMoney(cartItem.line_price, "{{ shop.money_format | remove: "'" | remove: '"' }}"))+'</span ><span class="quty">'+cartItem.quantity+' Qty</span></p></li>');
});});
......................................................................................................................
________________________________________________________________________________
script to create products on Shopify by reading csv file from any ftp account: its a running script just need to update accordingly.
...............................................................................................
<?php
//read the file from ftp (using ftp credentials) fttp://username:password@host/next-path-of-file-from-ftp-path
$filename = "ftp://username_of_ftp:password_of_ftp@hostname_of_ftp/testit/test.csv";

$row = 1;
if (($handle = fopen($filename, "r")) !== FALSE) {
    while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
////loop start for each product///////// 	
        $num = count($data);
		//print_r($data);
        echo "<p> $num fields in line $row: <br /></p>\n";
        $row++;
        /*for ($c=0; $c < $num; $c++) {
            echo $data[$c] . "<br />\n";
        }*/
		echo $data[1] . "<br />\n";
 /// update values dynamically as required
$products_array = array(
    "product"=> array(
        "title"=> $data[1],
        "body_html"=> "<strong>Good snowboard!</strong>",
        "vendor"=> "Burton",
        "product_type"=>"Snowboard",
        "variants"=> array(
            array(
                "option1"=> "First",
                "price"=> "10.00",
                "sku"=> "123",
                "inventory_quantity"=> 100,
                "images"=>array( array ("src"=>'http://clarks.scene7.com/is/image/clarks/26103666_A')),    
            ),
            array(
                "option1"=> "Second",
                "price"=> "20.00",
                "sku"=> "124",
                "inventory_quantity"=> 200,
                "images"=>array( array ("src"=>'http://clarks.scene7.com/is/image/clarks/26103666_A')),    
            )
        )
    ),
	
);
echo json_encode($products_array);
echo "<br />";
$url = "https://XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX@storename.myshopify.com/admin/products.json";
$curl = curl_init();
curl_setopt($curl, CURLOPT_URL, $url);
curl_setopt($curl, CURLOPT_HTTPHEADER, array('Content-Type: application/json; charset=utf-8'));
curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curl, CURLOPT_VERBOSE, 0);
curl_setopt($curl, CURLOPT_HEADER, 1);
curl_setopt($curl, CURLOPT_CUSTOMREQUEST, "POST");
curl_setopt($curl, CURLOPT_POSTFIELDS, json_encode($products_array));
curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);
$response = curl_exec ($curl);
curl_close ($curl);
////loop end for each product///////// 
   }
    fclose($handle);
}

echo "<pre>";
print_r($response); 
?>
..............................................................................................
We don't need to setup cron job for this script, just create a new "Order Creation" webhook and place the script url there. it will auotmatically refresh the page once any new order will be created.
______________________________________________________________________________________________
<?php
//Fetching shopify orders
$formatted = $days_ago = date('Y-m-d', strtotime('-1 days'));
 /*API Call to Shopify*/
$orderUrl ="https://XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX@storename.myshopify.com/admin/orders.json?limit=250&created_at_min=".$formatted;
  // Get cURL resource
	$curl = curl_init();
	// Set some options - we are passing in a useragent too here
	curl_setopt_array($curl, array(
	CURLOPT_RETURNTRANSFER => 1,
	CURLOPT_URL => 'https://XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX@storename.myshopify.com/admin/orders.json?limit=250&created_at_min='.$formatted,
	CURLOPT_USERAGENT => 'Codular Sample cURL Request'
	));
	// Send the request & save response to $defaultresponse
	$defaultresponse = curl_exec($curl);
$csv = "Date,Customer Name,Customer Email,Customer Phone,Products,Order ID,Amount,Currency\n";//Column headers

    
	$jsondecodedresponse = json_decode($defaultresponse);
	$new=array();
    foreach($jsondecodedresponse as $usableresponse){
    echo"<pre>";
	//print_r($usableresponse);
	echo"</pre>";
	foreach($usableresponse as $firstlevel){
	echo"<pre>";
	//print_r($firstlevel);
	echo"</pre>";
    $line_items=$firstlevel->line_items;
    $product_titles=array();
foreach($line_items as $line_items_data){
	array_push($product_titles,$line_items_data->title);
}
    $producttitles = implode("-", $product_titles);
    $customer=$firstlevel->customer;	
	foreach($customer as $customerdata){
	$customer_id = $customerdata->customer_id; 
	$customer_phone = $customerdata->phone; 
    $customer_name = $customerdata->first_name.' '.$customerdata->last_name;
}
$csv.= $firstlevel->created_at.','.$customer_name.','.$firstlevel->email.','.$customer_phone.','.$producttitles.','.$firstlevel->name.','.$firstlevel->total_price.','.$firstlevel->currency."\n";

 //Append data to csv
$file_name = date('m-d-Y').'-orders.csv';
$csv_handler = fopen ($file_name,'w');
fwrite ($csv_handler,$csv);
fclose ($csv_handler);
	 
		
	}
 }
 echo 'Done';
	exit;
?>
_______________________________________________________________________________________________________
Fetch products or orders from shopfy:
How to fetch products/orders from shopify using external php script and create their csv files.

Note:- We need to firstly create api key and password to make the url of following format. 
URL = https://apikey:password@storebackendaddress/admin/products.json
To create api key and password, we will have to login into shopify store, then create an app(private app), then grant access to that app for orders, products etc, then when we will save that app, it will provide us api key and password for that app, just copy them and use them for fetching the details of required data as used in following code.
.............................................
<?php
$orderUrl ="https://XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX@storename.myshopify.com/admin/products.json";

	// Get cURL resource
	$curl = curl_init();
	// Set some options - we are passing in a useragent too here
	curl_setopt_array($curl, array(
	CURLOPT_RETURNTRANSFER => 1,
	CURLOPT_URL => 'https://XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX@storename.myshopify.com/admin/products.json',
	CURLOPT_USERAGENT => 'Codular Sample cURL Request'
	));
	// Send the request & save response to $resp
	$resp = curl_exec($curl);
  $csv = "col1,col2 \n";//Column headers
	$response = json_decode($resp);
		$new=array();
		echo '<pre>';
		//print_r($response);
echo '</pre>';
 foreach($response as $res){
	 echo '<pre>';
	//print_r($res);
	echo '</pre>';
	 foreach($res as $ress){
		 echo '<pre>';
	//print_r($ress);
	echo '</pre>'; 
	echo $ress->id;
	echo $ress->title;

$csv.= $ress->id.','.$ress->title."\n"; //Append data to csv
$file_name = date('Y-m-d H-i-s').'-orders.csv';
$csv_handler = fopen ($file_name,'w');
fwrite ($csv_handler,$csv);
fclose ($csv_handler);
echo 'Data saved to csv file';
	}
	
 }
	exit;
?>
.............................................................................
another example:
........................................................  
<?php
//Fetching shopify orders

$from_unix_time = mktime(0, 0, 0, $month, $day, $year);
$day_before = strtotime("yesterday", $from_unix_time);
$formatted = $days_ago = date('Y-m-d', strtotime('-1 days'));
 /*API Call to Shopify*/
$orderUrl ="https://XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX@storename.myshopify.com/admin/orders.json?created_at_min=".$formatted;
  // Get cURL resource
	$curl = curl_init();
	// Set some options - we are passing in a useragent too here
	curl_setopt_array($curl, array(
	CURLOPT_RETURNTRANSFER => 1,
	CURLOPT_URL => 'https://XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX@storename.myshopify.com/admin/orders.json?created_at_min='.$formatted,
	CURLOPT_USERAGENT => 'Codular Sample cURL Request'
	));
	// Send the request & save response to $resp
	$resp = curl_exec($curl);

$csv = "Email,Name,Date,Description,Order Ref,Product Search Code,Customer Ref,Amount,Currency,Tags,Merchant Identifier \n";//Column headers
	
	$response = json_decode($resp);
		$new=array();
		echo '<pre>';
	//print_r($response);
echo '</pre>';
 foreach($response as $res){
	echo '<pre>';
	print_r($res);
	echo '</pre>';
	 foreach($res as $ress){
/* echo "<pre>";
print_r($ress->line_items);
echo "</pre>";
*/
$newarr=$ress->line_items;

 foreach($ress as $resss){
 $customer_id = $resss->id;
 $customer_name = $resss->first_name.' '.$resss->last_name;
 
}
/*echo "<pre>";
print_r($newarr);
echo "</pre>";
*/
$a=array();
foreach($newarr as $newrr){
	array_push($a,$newrr->title);
	//echo $tgs.=$newrr->title;	
	//$get_tags .= implode(",",$newrr->title);
	
}
echo $comma_separated = implode(" ", $a);
$val="lorem lorem";

"Email,Name,Date,Description,Order Ref,Product Search Code,Customer Ref,Amount,Currency,Tags,Merchant Identifier \n";
if($ress->shipping_address->country=="United States"){
$csv.= $ress->email.','.$customer_name.','.$ress->created_at.','.$comma_separated.','.$ress->name.','.$comma_separated.','.$customer_id.','.$ress->total_price.','.$ress->currency.','.$ress->tags.','."cycology-clothing-usa"."\n";
}
 //Append data to csv
$file_name = date('m-d-Y').'-orders.csv';

$csv_handler = fopen ($file_name,'w');
fwrite ($csv_handler,$csv);
fclose ($csv_handler);
 }
	
 }
 echo 'Data saved to csvfile.csv';
	exit;
?>
------------------------------------------------------
______________________________________________________________________________________________
Youtube Video
........
<script type="text/javascript">
  var tag = document.createElement('script');
  tag.id = 'iframe-demo';
  tag.src = 'https://www.youtube.com/iframe_api';
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  var player;
  function onYouTubeIframeAPIReady() {
    player = new YT.Player('existing-iframe-example', {
        events: {
          'onReady': onPlayerReady,
          'onStateChange': onPlayerStateChange
        }
    });
  }
  function onPlayerReady(event) {
    document.getElementById('existing-iframe-example').style.borderColor = '#FF6D00';
  }
  function changeBorderColor(playerStatus) {
    var color;
	var display;
	var opacity;
    if (playerStatus == -1) {
      color = "#37474F"; // unstarted = gray
    } else if (playerStatus == 0) {
      color = "#FFFF00"; // ended = yellow
	  display = "none";
	  opacity = "0";
    } else if (playerStatus == 1) {
      color = "#33691E"; // playing = green
	  display = "block";
	  opacity = "1";
    } else if (playerStatus == 2) {
      color = "#DD2C00"; // paused = red
    } else if (playerStatus == 3) {
      color = "#AA00FF"; // buffering = purple
      opacity = "0";
    } else if (playerStatus == 5) {
      color = "#FF6DOO"; // video cued = orange
    }
    if (color) {
      document.getElementById('existing-iframe-example').style.borderColor = color;
	   //document.getElementById('existing-iframe-example').style.display = display;
      
	   document.getElementById('its').style.opacity = opacity;
    }
  }
  function onPlayerStateChange(event) {
    changeBorderColor(event.data);
  }
</script>



<style>
.top iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}
.wrapper {
    position: relative;
    padding-bottom: 200%;
    transform: translateY(-35.95%);
}
.video_banner {
    position: relative;
    background-image: url(https://img.youtube.com/vi/-WqeFWUr2qA/sddefault.jpg);
    background-attachment: fixed;
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
}
.top {
    padding-bottom: 56.25%;
    height: 0;
    overflow: hidden;
    position: relative;
}
</style>
<div class="video_banner">
<div class="top" id="its" style="opacity:0">
    <div class="wrapper">
        <iframe id="existing-iframe-example"
        width="640" height="480"
        src="https://www.youtube.com/embed/-WqeFWUr2qA?enablejsapi=1&loop=1&playlist=-WqeFWUr2qA&autoplay=1&mute=1"
        frameborder="0"
        style="border: solid 4px #37474F"
></iframe>
    </div>
</div>   
   
</div>
.............
______________________________________________________________________________________________________________
We can add custom cart fields as well such as delivery date and time as follows on cart template in <form> tag. there values will be automatically shown on placed orders at backend in additional details section.
We can add as many custom fields as we need using name attribute as 'name="attributes[date]"' for cart fields.
 <ul><li>
    <label for="date">Pick a delivery date:</label>
    <input class="datepick" type="text" name="attributes[date]" placeholder="MM/DD/YYYY" value="{{ cart.attributes.date }}" />
   </li><li>
    <label for="date">Pick a delivery time:</label>
  <select id="delivery-time" name="attributes[Delivery-Time]" readonly="readonly">
	<option id="time_option_label" value="10-12pm">10-12pm</option>
    <option id="time_option_label" value="12-2pm">12-2pm</option>
    <option id="time_option_label" value="2-4pm">2-4pm</option>
    <option id="time_option_label" value="4-6pm">4-6pm</option>
    <option id="time_option_label" value="6-8pm">6-8pm</option>
	</select>   
   </li> </ul>
__________________________________________________________________________________________________________________________________
we can also add cusotm fields on product page in add to cart <form> tag as follow: main thing is name of field, we can add as many custom fields as we need by using name as 'name="properties[Phone no]"' for product fields.
<input type="hidden" name="properties[Phone no]" class="tb_property_val">

Product page, Include this in add to cart form
<input type="hidden" name="properties[customdata]" value="customvalue">

Cart page, put this code in cart item li list. (property.first = customdata and property.last = customvalue)
{% unless item.properties == empty %}
{% for property in item.properties %}
{% if property.first == 'customdata' %}
<p>{{ property.last }}</p>
{% endif %}
{% endfor %}
{% endunless %}
 
_________________________________________________________________________________________________________________________________
To create a ajax "Add to cart" to add products in cart without refreshing the page or redirecting to cart. follow the following link, I have tested this code, and it worked fine.

https://help.shopify.com/en/themes/customization/products/add-to-cart/stay-on-product-page-when-items-added-to-cart
_____________________________________________________________________________________________________________________________
Create custom quick view on collection page.
https://www.huratips.com/tech-tips/how-to-create-a-simple-quick-view-without-app-usage-to-your-shopify-store.html
_______________________________________________________________________________________________________________________
Schema markup: just create a snippet of it and call in in theme head tag.
-----------------
<script type="application/ld+json">
{%- if template == 'index' -%}
{
  "@context": "http://schema.org",
  "@type": "WebSite",
  "name": "{{ shop.name }}",
  "alternateName": "{{ shop.description }}",
  "url": "{{ shop.url }}"
}
{%- elsif template == 'product' %}
{
  "@context": "http://schema.org/",
  "@type": "Product",
  "name": "{{ product.title | strip_html | escape }}",
  "url": "{{ shop.url }}{{ product.url }}",
  {% if product.first_available_variant.sku != blank %}
    "sku": "{{ product.first_available_variant.sku }}",
  {% else %}
    "sku": "{{ product.first_available_variant.id }}",
  {% endif %}
  {% if product.first_available_variant.barcode.size == 12 %}
    "gtin12": {{ product.first_available_variant.barcode }},
  {% endif %}
  {% if product.first_available_variant.barcode.size == 13 %}
    "gtin13": {{ product.first_available_variant.barcode }},
  {% endif %}
  {% if product.first_available_variant.barcode.size == 14 %}
    "gtin14": {{ product.first_available_variant.barcode }},
  {% endif %}
  "brand": {
    "@type": "Thing",
    "name": "{{ product.vendor | escape }}"
  },
  "description": "{{ product.description | strip_html | escape | strip_newlines }}",
  "image": "https:{{ product.featured_image.src | img_url: 'grande' }}",
  {% if product.variants %}
    "offers": {% if product.variants.size > 1 %}[{% endif %}
      {
        "@type" : "Offer",
        "priceCurrency": "{{ shop.currency }}",
        "price": "{{ product.price | money_without_currency }}",
        "priceValidUntil" : "10-10-2020",
        "itemCondition" : "http://schema.org/NewCondition",
        "availability" : "http://schema.org/{% if product.available %}InStock{% else %}OutOfStock{% endif %}",
        "url" : "{{ shop.url }}{{ fa_current_variant.url }}",
        "itemOffered" :
        {
            "@type" : "Product",
            {% if fa_current_variant.image %}
              {% assign variant_image_size = fa_current_variant.image.width | append: 'x' %}
              "image": "http:{{ fa_current_variant.image.src | img_url: variant_image_size }}",
            {% endif %}
            {% if fa_current_variant.title != blank %}
              "name" : "{{ fa_current_variant.title | escape }}",
            {% endif %}
            {% if fa_current_variant.barcode.size == 12 %}
              "gtin12": {{ fa_current_variant.barcode }},
            {% endif %}
            {% if fa_current_variant.barcode.size == 13 %}
              "gtin13": {{ fa_current_variant.barcode }},
            {% endif %}
            {% if fa_current_variant.barcode.size == 14 %}
              "gtin14": {{ fa_current_variant.barcode }},
            {% endif %}
            {% if fa_current_variant.sku != blank %}
              "sku": "{{ fa_current_variant.sku }}",
            {% else %}
              "sku": "{{ fa_current_variant.id }}",
            {% endif %}
            "url": "{{ shop.url }}{{ fa_current_variant.url }}"
        }
      }{% if product.variants.size > 1 %},{% endif %}

      {% for variant in product.variants %}

      {% if variant != product.selected_or_first_available_variant %}
        {
          "@type" : "Offer",
          "priceCurrency": "{{ shop.currency }}",
          "price": "{{ variant.price | money_without_currency  | strip_html | remove: ',' }}",
          "itemCondition" : "http://schema.org/NewCondition",
          "availability" : "http://schema.org/{% if variant.available %}InStock{% else %}OutOfStock{% endif %}",
          "url" : "{{ shop.url }}{{ variant.url }}",
          "itemOffered" :
          {
              "@type" : "Product",
              {% if variant.image %}
                {% assign variant_image_size = variant.image.width | append: 'x' %}
                "image": "http:{{ variant.image.src | img_url: variant_image_size }}",
              {% endif %}
              {% if variant.title != blank %}
                "name" : "{{ variant.title | escape }}",
              {% endif %}
              {% if variant.barcode.size == 12 %}
                "gtin12": {{ variant.barcode }},
              {% endif %}
              {% if variant.barcode.size == 13 %}
                "gtin13": {{ variant.barcode }},
              {% endif %}
              {% if variant.barcode.size == 14 %}
                "gtin14": {{ variant.barcode }},
              {% endif %}
              {% if variant.sku != blank %}
                "sku": "{{ variant.sku }}",
              {% else %}
                "sku": "{{ variant.id }}",
              {% endif %}
              "url": "{{ shop.url }}{{ variant.url }}"
          }
        }
        {% unless forloop.last %},{% endunless %}
        {% endif %}
      {% endfor %}
    ,"review": [
    {
      "@type": "Review",
      "author": "Sonja",
      "datePublished": "Jul 03, 2019",
      "description": "The 'frombelo family' creates - I can´t say it in a different way - real litte masterpieces! The fabric they produce in the most sustainable way is soft and beautiful. The bags are manufactured in best craftsmanship - every single seam is worked out in detail. Especially in this handwoven CIDA BAG, you can see how much love has been put into during the manufacturing process. Maria and Char were so lovely and generous to give me this model as a gift as I won an instagram competition (thank you so much again!!!) and it has been an appreciated companion ever since. Not only was it the perfect picnic and swimming bag during my latest holidays, but it´s also a stylish and practical working bag, that radiates my social and environmental values. It makes me always happy to carry it!",
      "name": "AMAZING FABRIC AND CRAFTSMANSHIP",
      "reviewRating": {
        "@type": "Rating",
        "bestRating": "5",
        "ratingValue": "5",
        "worstRating": "0"
      }
    }  ]
    {% if product.variants.size > 1 %}]{% endif %}

    {% if product.metafields.spr.reviews %}
    ,"aggregateRating": {
     "@type": "AggregateRating",
     "ratingValue": {{ product.metafields.spr.reviews | split: 'ratingValue" content="' | last | split: '"' | first | plus: 0 }},
     "ratingCount": {{ product.metafields.spr.reviews | split: 'reviewCount" content="' | last | split: '"' | first | plus: 0 }}
    }
  
    {% endif %}
  {% endif %}
  ,
  "gtin8": "wetiohwer"
}
}
{%- elsif template == 'article' %}
{
  "@context": "http://schema.org",
  "@type": "NewsArticle",
  "image": {
    "@type": "imageObject",
    "url": "https:{{ article.image.src | img_url: 'original' }}",
    "width": "1024px",
    "height": "1024px"
  },
  "keywords": "{%- for tag in article.tags -%}{{ tag }}{%- unless forloop.last -%}, {%- endunless -%}{%- endfor -%}",
  "url": "{{ shop.url | append: article.url }}",
  "description": "{{ article.content | truncatewords: 100 | strip_html }}",
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": "https://google.com/article"
  },
  "headline": "{{ article.title }}",
  "datePublished": "{{ article.published_at }}",
  "dateModified": "{{ article.published_at }}",
  "author": {
    "@type": "Person",
    "name": "{{ article.author }}"
  },
  "publisher": {
    "@type": "Organization",
    "name": "{{ shop.name }}",
    "logo": {
      "@type": "ImageObject",
      "url": "{{ shop.url }}"
    }
  },
  "commentCount": "{{ article.comments_count }}"
}
{%- endif %}
</script>
----------------------------
__________________________________________________________________________________________________________________
Youtube video responsive without black bars on side for all media devices:
---------------------------------------------
<div class="video-container">
    <iframe class="video" src="https://www.youtube.com/embed/RcnksOUugcA" allowfullscreen></iframe>
</div>
<style>
.video-container {
  position: relative;
  width: 100%;
  padding-bottom: 56.25%;
}
.video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 0;
}
</style>
__________________________________________________________________________________________________________________________
Mobile side nav humburg menu idea:

----------
<style>
.sidenav {
  height: 100%;
  width: 0;
  position: fixed;
  top: 0;
  left: 0;
  background-color: #111;
  overflow-x: hidden;
  transition: 0.5s;
  padding-top: 60px;
  z-index:9999;
  color:#000000;
}
ul.secondul {
    float: left;
    width: 100%;
    padding: 0px 1px 15px 15px;
    display: none;
}  
.submenu .icon {
    width: 20%;
    float: revert;
    color: #ffffff;
    margin-top: 10px;
}
.submenu {
    width: 100%;
    float: left;
}
.submenu a {
    float: left;
    width: 80%;
}
.sidenav a {
  padding: 8px 8px 8px 32px;
  text-decoration: none;
  display: block;
  transition: 0.3s;
}
.firstula {
    font-size: 16px!important;
    color: #ffffff;
}
.secondula {
    font-size: 14px!important;
    color: #ffffff;
}
.thirdula a {
    font-size: 12px!important;
    color: #ffffff;
}
.sidenav a:hover {
  color: #f1f1f1;
}

.sidenav .closebtn {
  position: absolute;
  top: 0;
  right: 25px;
  font-size: 36px;
  margin-left: 50px;
}
.cross .icon{transform: rotate(45deg);}
@media screen and (max-height: 450px) {
  .sidenav {padding-top: 15px;}
  .sidenav a {font-size: 18px;}
}
</style>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
$(document).ready(function(){
  $(".iconplus").click(function(){
    if($(this).hasClass('cross')){
    $(this).closest('li').children('ul').hide();
    $(this).removeClass('cross');
    }else{
    $(this).addClass('cross'); 
    $(this).closest('li').children('ul').show();
    }
  });  
});
</script>
<div id="mySidenav" class="sidenav">
  <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">&times;</a>
<ul class="firstul">
        {% for link in linklists[section.settings.main_linklist].links %}
          {%- assign outerLoopIndex = forloop.index -%}

          <li class="firstulli">
            {% if link.links != blank %}
              {% capture child_list_handle %}{{ link.handle }}-{{ outerLoopIndex }}{% endcapture %}
              <div class="submenu"> <a class="firstula" href="{{ link.url }}"
               {% if link.current %} aria-current="page"{% endif %}>
                              <span>{{ link.title | escape }}</span>
                            </a>
                <div class="iconplus">{% include 'icon-plus' %}</div></div>
              <ul class="secondul" data-parent="{{ child_list_handle }}" data-level="2">
                {% for childlink in link.links %}
                  <li class="secondulli">
                    {% if childlink.links != blank %}
                      {% capture grandchild_list_handle %}{{ childlink.handle }}-{{ outerLoopIndex }}-{{ forloop.index }}{% endcapture %}
                      <a class="secondula submenu" href="{{ link.url }}"
                {% if childlink.current %} aria-current="page"{% endif %}>
                              <span>{{ childlink.title | escape }}</span>
                            </a>
                      <ul class="thirdul" data-parent="{{ grandchild_list_handle }}" data-level="3">
                       
                        {% for grandchildlink in childlink.links %}
                          <li class="thirdulli">
                            <a class="thirdula" href="{{ grandchildlink.url }}"
                              {% if grandchildlink.current %} aria-current="page"{% endif %}
                            >
                              <span>{{ grandchildlink.title | escape }}</span>
                            </a>
                          </li>
                        {% endfor %}
                      </ul>
                    {% else %}
                      <a class="secondula nosubmenu" href="{{ childlink.url }}"
                        {% if childlink.current %} aria-current="page"{% endif %}
                      >
                        <span >{{ childlink.title | escape }}</span>
                      </a>
                    {% endif %}
                  </li>
                {% endfor %}
              </ul>
            {% else %}
              <a class="firstula nosubmenu" href="{{ link.url }}"
                {% if link.current %} aria-current="page"{% endif %}
              >
                <span>{{ link.title | escape }}</span>
              </a>
            {% endif %}
          </li>
        {% endfor %}
      </ul>
</div>

<span style="font-size:30px;cursor:pointer" onclick="openNav()">&#9776;</span>

<script>
function openNav() {
  document.getElementById("mySidenav").style.width = "250px";
}

function closeNav() {
  document.getElementById("mySidenav").style.width = "0";
}
</script>
----------------------------------------------------------------------------------------------------------------
To add animation on any page, just use following library and initiate javascript function. reference link https://github.com/michalsnik/aos and http://michalsnik.github.io/aos/

<link rel="stylesheet" href="https://unpkg.com/aos@next/dist/aos.css" />
<script src="https://unpkg.com/aos@next/dist/aos.js"></script>
<script>
AOS.init();
</script>

Then just add its attributes to div as follows to trigger animation.
<div data-aos="fade-in" data-aos-id="super-duper"></div>
--------------------------------------------------------------------------
Following is an example of created section to show collection products at home page.
-----------
{{ 'aos.css' | asset_url | stylesheet_tag }}
{{ 'aos.js' | asset_url | script_tag }}
<script>
  AOS.init({once: true});
</script>
<script>
$(document).ready(function(){
var windowWidth = $(window).width();
if( windowWidth > 767 ){
$('.slideattribute').attr("data-aos","");
}else
{
$('.fadeattribute').attr("data-aos","");
$('.ihp2').remove();  
}
});

<div class="page-width">
  <div class="section-homeproducts">
    {% assign collection = collections[section.settings.collection] %}
    {% assign rows = section.settings.rows %}
{% assign product_limit = rows | times: 4 %}
{% assign mobile_product_limit = false %}
 {% case rows %}
        {% when 1 %}
          {% assign product_index_hide_on_mobile = 4 %}
        {% when 3 %}
          {% assign product_index_hide_on_mobile = 14 %}
      {% endcase %}
      <h2 class="collection_title" style="text-align: center">
          {{ section.settings.heading }}
        </h2>
      <div class="grid grid--no-gutters grid--uniform collection slideattribute" data-aos="slide-left" data-aos-offset="200" data-aos-delay="30" data-aos-duration="2000">
        {% assign count = 0 %}
        {% for product in collection.products limit: product_limit %}
          <div data-aos="fade" 
    data-aos-offset="100"
    data-aos-delay="{{ 50 | times: count }}"
    data-aos-duration="500" style="width:25%" class=" fadeattribute grid__item small--one-half medium-up--one-fourth{% if forloop.index == 1 %} collection__card--first{% endif %} {% if mobile_product_limit and forloop.index > 3 %}small--hide{% elsif rows == 1 or rows == 3 %}{% if forloop.index == product_index_hide_on_mobile %}small--hide{% endif %}{% endif %}">
            {% include 'product-card-homepage', product: product, collection: collection %}
          </div>
        {% assign count = count | plus: 2 %}
        {% endfor %}
      </div>
    <div class="allplink"><a class="btn" style="padding: 10px 30px;" href=" {% if section.settings.viewalllink != blank  %}{{ section.settings.viewalllink }}{% else %}{{ collection.url }}{% endif %}">View All</a></div>
  </div>
</div>



{% schema %}
{
  "name": {
    "de": "Featured Kategorie",
    "en": "Featured collection",
    "es": "Colección destacada",
    "fr": "Collection en vedette",
    "it": "Collezione in evidenza",
    "ja": "特集コレクション",
    "pt-BR": "Coleção em destaque"
  },
  "class": "index-section",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": {
        "en": "Heading Text"
      }
    },
    {
      "type": "collection",
      "id": "collection",
      "label": {
        "de": "Kategorie",
        "en": "Collection",
        "es": "Colección",
        "fr": "Collection",
        "it": "Collezione",
        "ja": "コレクション",
        "pt-BR": "Coleção"
      }
    },
    {
      "type": "range",
      "id": "rows",
      "label": {
        "en": "Products to show (4X)"
      },
      "min": 1,
      "max": 3,
      "step": 1,
      "default":2
    },
    {
      "type": "text",
      "label": "Custom link",
      "info": "Leave it blank to use default collection link",
      "id": "viewalllink"
    }
  ],
  "presets": [
    {
      "name": {
        "en": "Home Products"
      },
      "category": {
        "de": "Kategorie",
        "en": "Collection",
        "es": "Colección",
        "fr": "Collection",
        "it": "Collezione",
        "ja": "コレクション",
        "pt-BR": "Coleção"
      }
    }
  ]
}
{% endschema %}

_________________________________________________________________________________________________________________
split,remove,string,trim string
Here is how I have put two values in vendor field (rodrigomsdeus@hotmail.com,Rodrigo) of Product editor and used them in frontend code by spliting them using comma to show different name with email link and display photo. This is very use
<div style="min-height: 37px;" class="vendordata">
{% assign vendoremail = product.vendor | split: "," %}
{% for getvendordata in vendoremail %}
{% if forloop.first %}
{% assign vendoremail = getvendordata %}  
  {% endif %}  
{% if forloop.last %}
{% assign vendorname = getvendordata %}  
  {% endif %}
{% endfor %}
  
{% assign username = vendoremail | split: "@" %}
{% for getusername in username %}  
{% if forloop.first %}
{% assign imagename = getusername| append: ".jpg"  %}  
  {% endif %}
{% endfor %}  
  {{ imagename | asset_url | img_tag }}
<p class="vendorname"><a href="mailto:{{ vendoremail }}">{{ vendorname }}</a><p></div>
_____________________________________________________________________________________________
Product schema, structred data

{% assign current_variant = product.selected_or_first_available_variant %}

<script type="application/ld+json">
{
  "@context": "http://schema.org/",
  "@type": "Product",
  "name": "{{ product.title | escape }}",
  "url": "{{ shop.url }}{{ product.url }}",
  {%- if product.featured_image -%}
    {%- assign image_size = product.featured_image.width | append: 'x' -%}
    "image": [
      "https:{{ product.featured_image.src | img_url: image_size }}"
    ],
  {%- endif -%}
  {%- if current_variant.sku != blank -%}
    "sku": "{{ current_variant.sku }}",
  {%- endif -%}
  "brand": {
    "@type": "Thing",
    "name": "{{ product.vendor | escape }}"
  },
  "offers": [
    {%- for variant in product.variants -%}
      {
        "@type" : "Offer",
        {%- if variant.sku != blank -%}
          "sku": "{{ variant.sku }}",
        {%- endif -%}
        "availability" : "http://schema.org/{% if variant.available %}InStock{% else %}OutOfStock{% endif %}",
        "price" : "{{ variant.price | divided_by: 100.00 }}",
        "priceCurrency" : "{{ cart.currency.iso_code }}",
        "url" : "{{ shop.url }}{{ variant.url }}"
      }{% unless forloop.last %},{% endunless %}
    {%- endfor -%}
  ],
  "description": "{{ product.description | strip_html | escape }}"
}
</script>
------------------------------------------------------------------
<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Organization",
    "name": "{{ shop.name }}",
    {% if section.settings.logo %}
      {% assign image_size = section.settings.logo.width | append:'x' %}
      "logo": "https:{{ section.settings.logo | img_url: image_size }}",
    {% endif %}
    "sameAs": [
      "{{ settings.twitter_link }}",
      "{{ settings.facebook_link }}",
      "{{ settings.pinterest_link }}",
      "{{ settings.instagram_link }}",
      "{{ settings.tumblr_link }}",
      "{{ settings.snapchat_link }}",
      "{{ settings.youtube_link }}",
      "{{ settings.vimeo_link }}"
    ],
    "url": "{{ shop.url }}{{ page.url }}"
  }
</script>

{% if template.name == 'index' %}
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "WebSite",
      "name": "{{ shop.name }}",
      "potentialAction": {
        "@type": "SearchAction",
        "target": "{{ routes.search_url }}?q={search_term_string}",
        "query-input": "required name=search_term_string"
      },
      "url": "{{ shop.url }}{{ page.url }}"
    }
  </script>
{% endif %}
_______________________________________________________________________________________________________________
Ajaxify script to make add to cart button to add products in cart using ajax instead of redirecting to cart page.
just create snippet with following code and include it at last of theme.liquid file. that's all. we can customize it as required such as we can modify cart count classes.
We can remove jquery.min.js link if it already imported.

snippet:
----------------------------------
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script>
window.onload = function() {
/**
 * Module to ajaxify all add to cart forms on the page.
 *
 * Copyright (c) 2015 Caroline Schnapp (11heavens.com)
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 */
Shopify.AjaxifyCart = (function($) {
  
  // Some configuration options.
  // I have separated what you will never need to change from what
  // you might change.
  
  var _config = {
    
    // What you might want to change
    addToCartBtnLabel:             'Add to cart',
    addedToCartBtnLabel:           'Thank you!',
    addingToCartBtnLabel:          'Adding...',
    soldOutBtnLabel:               'Sold Out',
    howLongTillBtnReturnsToNormal: 1000, // in milliseconds.
    cartCountSelector:             '.cart-count, #cart-count a:first, #gocart p a, #cart .checkout em, .item-count',
    cartTotalSelector:             '#cart-price',
    // 'aboveForm' for top of add to cart form, 
    // 'belowForm' for below the add to cart form, and 
    // 'nextButton' for next to add to cart button.
    feedbackPosition:              'nextButton',
    
    // What you will never need to change
    addToCartBtnSelector:          '[type="submit"]',
    addToCartFormSelector:         'form[action="/cart/add"]',
    shopifyAjaxAddURL:             '/cart/add.js',
    shopifyAjaxCartURL:            '/cart.js'
  };
  // We need some feedback when adding an item to the cart.
  // Here it is.  
  var _showFeedback = function(success, html, $addToCartForm) {
    $('.ajaxified-cart-feedback').remove();
    var feedback = '<p class="ajaxified-cart-feedback ' + success + '">' + html + '</p>';
    switch (_config.feedbackPosition) {
      case 'aboveForm':
        $addToCartForm.before(feedback);
        break;
      case 'belowForm':
        $addToCartForm.after(feedback);
        break;
      case 'nextButton':
      default:
        $addToCartForm.find(_config.addToCartBtnSelector).after(feedback);
        break;   
    }
    // If you use animate.css
    // $('.ajaxified-cart-feedback').addClass('animated bounceInDown');
    $('.ajaxified-cart-feedback').slideDown();
  };
  var _setText = function($button, label) {
    if ($button.children().length) {
      $button.children().each(function() {
        if ($.trim($(this).text()) !== '') {
          $(this).text(label);
        }
      });
    }
    else {
      $button.val(label).text(label);
    }
  };
  
   
  var _init = function() {   
    $(document).ready(function() { 
      $(_config.addToCartFormSelector).submit(function(e) {
        e.preventDefault();
        var $addToCartForm = $(this);
        var $addToCartBtn = $addToCartForm.find(_config.addToCartBtnSelector);
        _setText($addToCartBtn, _config.addingToCartBtnLabel);
        $addToCartBtn.addClass('disabled').prop('disabled', true);
        // Add to cart.
        $.ajax({
          url: _config.shopifyAjaxAddURL,
          dataType: 'json',
          type: 'post',
          data: $addToCartForm.serialize(),
          success: function(itemData) {
            // Re-enable add to cart button.
            $addToCartBtn.addClass('inverted');
            _setText($addToCartBtn, _config.addedToCartBtnLabel);
            _showFeedback('success','<i class="fa fa-check"></i> Added to cart! <a href="/cart">View cart</a>.',$addToCartForm);
            window.setTimeout(function(){
              $addToCartBtn.prop('disabled', false).removeClass('disabled').removeClass('inverted');
              _setText($addToCartBtn,_config.addToCartBtnLabel);
            }, _config.howLongTillBtnReturnsToNormal);
            // Update cart count and show cart link.
            $.getJSON(_config.shopifyAjaxCartURL, function(cart) {
              $(".cart-count").html(cart.item_count);
              if (_config.cartCountSelector && $(_config.cartCountSelector).length()) {
                var value = $(_config.cartCountSelector).html() || '0';
                $(_config.cartCountSelector).html(value.replace(/[0-9]+/,cart.item_count)).removeClass('hidden-count');
              }
              if (_config.cartTotalSelector && $(_config.cartTotalSelector).length()) {
                if (typeof Currency !== 'undefined' && typeof Currency.moneyFormats !== 'undefined') {
                  var newCurrency = '';
                  if ($('[name="currencies"]').length()) {
                    newCurrency = $('[name="currencies"]').val();
                  }
                  else if ($('#currencies span.selected').length()) {
                    newCurrency = $('#currencies span.selected').attr('data-currency');
                  }
                  if (newCurrency) {
                    $(_config.cartTotalSelector).html('<span class=money>' + Shopify.formatMoney(Currency.convert(cart.total_price, "{{ shop.currency }}", newCurrency), Currency.money_format[newCurrency]) + '</span>');
                  } 
                  else {
                    $(_config.cartTotalSelector).html(Shopify.formatMoney(cart.total_price, "{{ shop.money_format | remove: "'" | remove: '"' }}"));
                  }
                }
                else {
                  $(_config.cartTotalSelector).html(Shopify.formatMoney(cart.total_price, "{{ shop.money_format | remove: "'" | remove: '"' }}"));
                }
              };
            });        
          }, 
          error: function(XMLHttpRequest) {
            var response = eval('(' + XMLHttpRequest.responseText + ')');
            response = response.description;
            if (response.slice(0,4) === 'All ') {
              _showFeedback('error', response.replace('All 1 ', 'All '), $addToCartForm);
              $addToCartBtn.prop('disabled', false);
              _setText($addToCartBtn, _config.soldOutBtnLabel);
              $addToCartBtn.prop('disabled',true);
            }
            else {
              _showFeedback('error', '<i class="fa fa-warning"></i> ' + response, $addToCartForm);
              $addToCartBtn.prop('disabled', false).removeClass('disabled');
              _setText($addToCartBtn, _config.addToCartBtnLabel);
            }
          }
        });   
        return false;    
      });
    });
  };
  return {
    init: function(params) {
        // Configuration
        params = params || {};
        // Merging with defaults.
        $.extend(_config, params);
        // Action
        $(function() {
          _init();
        });
    },    
    getConfig: function() {
      return _config;
    }
  }  
})(jQuery);
Shopify.AjaxifyCart.init();
}
</script>

{% comment %}
  If you want to animate your feedback message.
{% endcomment %}

{% comment %}
{{ '//cdnjs.cloudflare.com/ajax/libs/animate.css/3.1.0/animate.min.css' | stylesheet_tag }}
{% endcomment %}

{{ '//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.0.3/css/font-awesome.css' | stylesheet_tag }}

<style>
.ajaxified-cart-feedback {
  display: block;
  line-height: 36px;
  font-size: 90%;
  vertical-align: middle;
}
.ajaxified-cart-feedback.success {
    color: #3D9970;
    line-height: 20px;
    margin-top: 5px;
    font-size: 12px;
    text-align: center;
}
.ajaxified-cart-feedback.error {
    color: #FF4136;
    line-height: 20px;
    margin-top: 5px;
    font-size: 12px;
    text-align: center;
}
.ajaxified-cart-feedback a {
  border-bottom: 1px solid;
}  
</style>
-------------------------------------
____________________________________________________________________________________________________________________________
Ajaxify script with Cart Drawer: custom coded:very useful.
----------------------------------------------------
<script>
function openNav() {
    if ($(window).width() < 500) {
    document.getElementById("mySidebar").style.width = "100%";
}
else {
   document.getElementById("mySidebar").style.width = "450px";
}
    //document.getElementById("mySidebar").style.width = "450px";
    document.getElementById("overlaydiv").style.display = "initial";
  }

  function closeNav() {
    document.getElementById("mySidebar").style.width = "0";
    document.getElementById("overlaydiv").style.display = "none";
  }    
  window.onload = function() {



    /**
 * Module to ajaxify all add to cart forms on the page.
 *
 * Copyright (c) 2015 Caroline Schnapp (11heavens.com)
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 */
    Shopify.AjaxifyCart = (function($) {

      // Some configuration options.
      // I have separated what you will never need to change from what
      // you might change.

      var _config = {

        // What you might want to change
        addToCartBtnLabel:             'Add to cart',
        addedToCartBtnLabel:           'Thank you!',
        addingToCartBtnLabel:          'Adding...',
        soldOutBtnLabel:               'Sold Out',
        howLongTillBtnReturnsToNormal: 1000, // in milliseconds.
        cartCountSelector:             '.item-count',
        cartTotalSelector:             '#cart-price',
        changeit:             '.changeit',
        // 'aboveForm' for top of add to cart form, 
        // 'belowForm' for below the add to cart form, and 
        // 'nextButton' for next to add to cart button.
        feedbackPosition:              'nextButton',

        // What you will never need to change
        addToCartBtnSelector:          '[type="submit"]',
        addToCartFormSelector:         'form[action="/cart/add"]',
        shopifyAjaxAddURL:             '/cart/add.js',
        shopifyAjaxchangeURL:             '/cart/change.js',
        shopifyAjaxCartURL:            '/cart.js'
      };
      // We need some feedback when adding an item to the cart.
      // Here it is.  
      var _showFeedback = function(success, html, $addToCartForm) {
        $('.ajaxified-cart-feedback').remove();
        var feedback = '<p class="ajaxified-cart-feedback ' + success + '">' + html + '</p>';
        switch (_config.feedbackPosition) {
          case 'aboveForm':
            $addToCartForm.before(feedback);
            break;
          case 'belowForm':
            $addToCartForm.after(feedback);
            break;
          case 'nextButton':
          default:
            $addToCartForm.find(_config.addToCartBtnSelector).after(feedback);
            break;   
        }
        // If you use animate.css
        // $('.ajaxified-cart-feedback').addClass('animated bounceInDown');
        $('.ajaxified-cart-feedback').slideDown();
      };
      var _setText = function($button, label) {
        if ($button.children().length) {
          $button.children().each(function() {
            if ($.trim($(this).text()) !== '') {
              $(this).text(label);
            }
          });
        }
        else {
          $button.val(label).text(label);
        }
      };


      var _init = function() {   
        $(document).ready(function() { 

      $(".ajaxclick").click(function(e) {   
        e.preventDefault();
      openNav();
      });

          $(document).on('click', _config.changeit, function(e) {
            $(".minicartheader h4").text("Updating...");
            var getvariantid = $(this).attr("data-variant-id");
            if($(this).hasClass('plusit')){
            var getvariantquantity = parseInt($('.'+getvariantid).val())+1;
            }else if($(this).hasClass('minusit')){
            var getvariantquantity = parseInt($('.'+getvariantid).val())-1;
            }else if($(this).hasClass('removeit')){
            var getvariantquantity = 0;
            } 
            var data = 'quantity='+getvariantquantity+'&id='+getvariantid;
            $.ajax({
              url: _config.shopifyAjaxchangeURL,
              dataType: 'json',
              type: 'post',
              data: data,
              success: function(itemData) { 
                $.getJSON(_config.shopifyAjaxCartURL, function(cart) {
                  $(".item-count").html(cart.item_count);
                  if(cart.item_count > 0){
                    $(".item-count").removeClass('empty');
                  }
                  $(".item-count").html(cart.item_count);
                  
                  var getshippingpric = $(".freeshippigbar").attr("id");
                  var getprogressbarshipping = parseInt(getshippingpric);
                  var percentage = 100/getprogressbarshipping;
                  var widthprogressbar = cart.total_price/100*percentage;
                  if(widthprogressbar>100){
                  $(".cartprogressbar").css("width","100%");  
                  }else{
                   $(".cartprogressbar").css("width",widthprogressbar+"%");
                  }
                  
                  var minimumshippingprice = parseInt(getshippingpric)+'00';
                  if(cart.total_price == 0000){
                    $(".freeshippigbar h5").text("FREE SHIPPING FOR ORDERS OVER £70");
                    $(".progressbartext").text("FREE SHIPPING FOR ORDERS OVER £70");
                  } else if(cart.total_price < minimumshippingprice){
                    var moreneeded = minimumshippingprice - cart.total_price;
                    $(".freeshippigbar h5").html("ONLY <span>£"+moreneeded/100+"</span> AWAY FROM FREE SHIPPING");
                    $(".progressbartext").html("ONLY <span>£"+moreneeded/100+"</span> AWAY FROM FREE SHIPPING");
                  }else{
                    $(".freeshippigbar h5").html("CONGRATULATIONS! YOU'VE GOT FREE SHIPPING");
                    $(".progressbartext").html("CONGRATULATIONS! YOU'VE GOT FREE SHIPPING");
                  }

                  $(".carttotal").html("£"+cart.total_price/100+".00"); 

                  $(".minicartul").html('');
                  if(cart.item_count > 0){
                  
                  var row ="";
                  ref = cart.items;

                  for (index = j = 0, len = ref.length; j < len; index = ++j) { 
                    item = ref[index];
                    row = "<li>";
                    // item.image_url = Shopify.resizeImage(item.image, "400x");

                    row += '<div class="variant-id width--12" data-variant-id=' + item.variant_id + ">";
                    row += '<div class="imagearea">';
                    if (item.image_url === null) {
                      row += '<span class="imagediv"></span>';
                    } else {
                      row += '<span class="image imagediv"><a href="' + item.url + '"><img  style="width: 70px;" src="' + item.image + '" alt="' + item.title + '"></a></span>';
                    }
                    row += "</div>";
                    row += '<div class="right-column productinfo">';
                    row += '<div class="producttitleandprice">';
                    row += '<span class="title ptitle"><a href="' + item.url + '">' + item.title + "</a></span>";
                    row += '<span class="price spacing--3 pmoney">£' + item.quantity*item.price/100 + "</span>";
                    row += "</div>";
                    row += '<div class="quantitydiv">';
                    row += '<div class="plusminus">';
                    row += '<a tabindex="0"  class="changeit minusit updatequantity" data-variant-id="'+ item.variant_id +'">−</a>';
                    row += '<input type="type" readonly class="currentquantity '+ item.variant_id +'" value="' + item.quantity + '" min="1" pattern="[1-9]*" data-variant-id=' + item.variant_id + ">";
                    row += '<a tabindex="0" class="changeit plusit updatequantity" data-variant-id="'+ item.variant_id +'">+</a>';
                    row += "</div>";
                    row += '<span class="remove spacing--3">';
                    row += '<a role="button" class="changeit removeit cart--remove-button remove" data-variant-id="'+ item.variant_id +'">Remove</a>';
                    row += "</span>";
                    row += "</div>";
                    row += "</div>";
                    row += "</div>";
                    row += "</li>";
                    $(".minicartul").append(row);
                  }
                  $(".minicartheader h4").text("Your Cart is Updated");  
                    $(".checkouttotal").text("Subtotal: £"+cart.total_price/100+".00"); 
                    $(".isempty").show();  
                  }else{
                  $(".minicart").html("");  
                  $(".isempty").hide();    
                  $(".minicartheader h4").text("Your Cart is Empty");
                  $(".checkouttotal").text("Subtotal: £"+cart.total_price/100+".00");   
                  
                  }
                  
                  




                });}

            });   

          });    

          $('.ajaxbutton').prop('disabled', false);
          $('.ajaxbutton').removeClass('disabled');
          $(_config.addToCartFormSelector).submit(function(e) {
            e.preventDefault();
            var $addToCartForm = $(this);
            var $addToCartBtn = $addToCartForm.find(_config.addToCartBtnSelector);
            _setText($addToCartBtn, _config.addingToCartBtnLabel);
            $addToCartBtn.addClass('disabled').prop('disabled', true);
            // Add to cart.
            $.ajax({
              url: _config.shopifyAjaxAddURL,
              dataType: 'json',
              type: 'post',
              data: $addToCartForm.serialize(),
              success: function(itemData) {
                // Re-enable add to cart button.
                $addToCartBtn.addClass('inverted');
                _setText($addToCartBtn, _config.addedToCartBtnLabel);
                _showFeedback('success','<i class="fa fa-check"></i> Added to cart! <a href="/cart">View cart</a>.',$addToCartForm);
                window.setTimeout(function(){
                  $addToCartBtn.prop('disabled', false).removeClass('disabled').removeClass('inverted');
                  _setText($addToCartBtn,_config.addToCartBtnLabel);
                }, _config.howLongTillBtnReturnsToNormal);
                // Update cart count and show cart link.
                $.getJSON(_config.shopifyAjaxCartURL, function(cart) {
                  $(".item-count").html(cart.item_count);
                  if(cart.item_count > 0){
                    $(".item-count").removeClass('empty');
                  }
                  $(".item-count").html(cart.item_count);
                  
                  var getshippingpric = $(".freeshippigbar").attr("id");
                  var getprogressbarshipping = parseInt(getshippingpric);
                  var percentage = 100/getprogressbarshipping;
                  var widthprogressbar = cart.total_price/100*percentage;
                  if(widthprogressbar>100){
                  $(".cartprogressbar").css("width","100%");  
                  }else{
                   $(".cartprogressbar").css("width",widthprogressbar+"%");
                  }
                  
                  var minimumshippingprice = parseInt(getshippingpric)+'00';
                  if(cart.total_price == 0000){
                    $(".freeshippigbar h5").text("FREE SHIPPING FOR ORDERS OVER £70");
                    $(".progressbartext").text("FREE SHIPPING FOR ORDERS OVER £70");
                  } else if(cart.total_price < minimumshippingprice){
                    var moreneeded = minimumshippingprice - cart.total_price;
                    $(".freeshippigbar h5").html("ONLY <span>£"+moreneeded/100+"</span> AWAY FROM FREE SHIPPING");
                    $(".progressbartext").html("ONLY <span>£"+moreneeded/100+"</span> AWAY FROM FREE SHIPPING");
                  }else{
                    $(".freeshippigbar h5").html("CONGRATULATIONS! YOU'VE GOT FREE SHIPPING");
                    $(".progressbartext").html("CONGRATULATIONS! YOU'VE GOT FREE SHIPPING");
                  }

                  $(".carttotal").html("£"+cart.total_price/100+".00");
                  
                  


                  if(cart.item_count > 0){
                  $(".minicart").html('<ul class="minicartul"></ul> ');
                  var row ="";
                  ref = cart.items;

                  for (index = j = 0, len = ref.length; j < len; index = ++j) { 
                    item = ref[index];
                    row = "<li>";
                    // item.image_url = Shopify.resizeImage(item.image, "400x");

                    row += '<div class="variant-id width--12" data-variant-id=' + item.variant_id + ">";
                    row += '<div class="imagearea">';
                    if (item.image_url === null) {
                      row += '<span class="imagediv"></span>';
                    } else {
                      row += '<span class="image imagediv"><a href="' + item.url + '"><img  style="width: 70px;" src="' + item.image + '" alt="' + item.title + '"></a></span>';
                    }
                    row += "</div>";
                    row += '<div class="right-column productinfo">';
                    row += '<div class="producttitleandprice">';
                    row += '<span class="title ptitle"><a href="' + item.url + '">' + item.title + "</a></span>";
                    row += '<span class="price spacing--3 pmoney">£' + item.quantity*item.price/100 + "</span>";
                    row += "</div>";
                    row += '<div class="quantitydiv">';
                    row += '<div class="plusminus">';
                    row += '<a tabindex="0"  class="changeit minusit updatequantity" data-variant-id="'+ item.variant_id +'">−</a>';
                    row += '<input type="type" readonly class="currentquantity '+ item.variant_id +'" value="' + item.quantity + '" min="1" pattern="[1-9]*" data-variant-id=' + item.variant_id + ">";
                    row += '<a tabindex="0" class="changeit plusit updatequantity" data-variant-id="'+ item.variant_id +'">+</a>';
                    row += "</div>";
                    row += '<span class="remove spacing--3">';
                    row += '<a role="button" class="changeit removeit cart--remove-button remove" data-variant-id="'+ item.variant_id +'">Remove</a>';
                    row += "</span>";
                    row += "</div>";
                    row += "</div>";
                    row += "</div>";
                    row += "</li>";
                    $(".minicartul").append(row);
                  }
                  $(".minicartheader h4").text("Your Cart");  
                  $(".checkouttotal").text("Subtotal: £"+cart.total_price/100+".00"); 
                  $(".isempty").show(); 
                  }else{
                  $(".minicart").html("");  
                  $(".isempty").hide();  
                  $(".minicartheader h4").text("Your Cart is Empty");
                  }

                   openNav();



                  if (_config.cartCountSelector && $(_config.cartCountSelector).length()) {
                    var value = $(_config.cartCountSelector).html() || '0';
                    $(_config.cartCountSelector).html(value.replace(/[0-9]+/,cart.item_count)).removeClass('hidden-count');
                  }
                  if (_config.cartTotalSelector && $(_config.cartTotalSelector).length()) {
                    if (typeof Currency !== 'undefined' && typeof Currency.moneyFormats !== 'undefined') {
                      var newCurrency = '';
                      if ($('[name="currencies"]').length()) {
                        newCurrency = $('[name="currencies"]').val();
                      }
                      else if ($('#currencies span.selected').length()) {
                        newCurrency = $('#currencies span.selected').attr('data-currency');
                      }
                      if (newCurrency) {
                        $(_config.cartTotalSelector).html('<span class=money>' + Shopify.formatMoney(Currency.convert(cart.total_price, "{{ shop.currency }}", newCurrency), Currency.money_format[newCurrency]) + '</span>');
                                                                                                                      } 
                                                                                                                      else {
                                                                                                                      $(_config.cartTotalSelector).html(Shopify.formatMoney(cart.total_price, "{{ shop.money_format | remove: "'" | remove: '"' }}"));
                  }
                }
                else {
                  $(_config.cartTotalSelector).html(Shopify.formatMoney(cart.total_price, "{{ shop.money_format | remove: "'" | remove: '"' }}"));
                                                                        }
                                                                        };
                                                                        });        
                                                    }, 
                                                    error: function(XMLHttpRequest) {
            var response = eval('(' + XMLHttpRequest.responseText + ')');
                                                                                                     response = response.description;
                                                                                                     if (response.slice(0,4) === 'All ') {
                          _showFeedback('error', response.replace('All 1 ', 'All '), $addToCartForm);
                          $addToCartBtn.prop('disabled', false);
                          _setText($addToCartBtn, _config.soldOutBtnLabel);
                          $addToCartBtn.prop('disabled',true);
                        }
                        else {
                          _showFeedback('error', '<i class="fa fa-warning"></i> ' + response, $addToCartForm);
                          $addToCartBtn.prop('disabled', false).removeClass('disabled');
                          _setText($addToCartBtn, _config.addToCartBtnLabel);
                        }
                      }
                    });   
                    return false;    
                  });
                });//ready function
              };
              return {
              init: function(params) {
              // Configuration
              params = params || {};
                   // Merging with defaults.
                   $.extend(_config, params);
            // Action
            $(function() {
              _init();
            });
          },    
                                                  getConfig: function() {
            return _config;
          }
        } 




                          })(jQuery);
        Shopify.AjaxifyCart.init();
      }
</script>

{% comment %}
If you want to animate your feedback message.
{% endcomment %}

{% comment %}
{{ '//cdnjs.cloudflare.com/ajax/libs/animate.css/3.1.0/animate.min.css' | stylesheet_tag }}
{% endcomment %}

<link data-href="//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.0.3/css/font-awesome.css" rel="stylesheet" type="text/css" media="all" />

<style>
  .ajaxified-cart-feedback {
    display: block;
    line-height: 36px;
    font-size: 90%;
    vertical-align: middle;
  }
  .ajaxified-cart-feedback.success {
    color: #3D9970;
    line-height: 20px;
    margin-top: 5px;
    font-size: 12px;
    text-align: center;
  }
  .ajaxified-cart-feedback.error {
    color: #FF4136;
    line-height: 20px;
    margin-top: 5px;
    font-size: 12px;
    text-align: center;
  }
  .ajaxified-cart-feedback a {
    border-bottom: 1px solid;
  } 
  .sidebar2 {
    height: 100%;
    width: 0;
    position: fixed;
    z-index: 999999;
    top: 0;
    right: 0;
    background-color: #ffffff;
    overflow-x: hidden;
    transition: 0.5s;
  }
  .sidebar2 .closebtn {
    position: absolute;
    top: 10px;
    right: 25px;
    font-size: 36px;
    margin-left: 50px;
    color: #ffffff;
  }
  .input--number a {
    color: #ffffff;
  }
  .input--number a {
    color: #ffffff;
    cursor: pointer;
  }  
  .minicart {
    color: #ffffff;
  } 
 ul.minicartul {
    margin: 0;
    padding: 10px!important;
    float: left;
    width: 100%;
    list-style: none;
    height: 350px;
    overflow-y: scroll;
    border: 1px solid;
    padding-bottom: 0px!important;
    background: #ffffff;
} 
  .minicart span.remove.spacing--3 a {
    color: #000000;
    font-size: 12px;
    cursor: pointer;
}
  .minicart .title a {
    color: #000000;
    font-size: 14px;
  }
  .minicart .variant-id.width--12 {
    display: flex;
  }
.minicart li {
    border-bottom: 1px solid #eee;
    padding: 15px 0px;
    padding-bottom: 5px;
}
  span.remove.spacing--3 {
    float: right;
  }  
  .imagearea {
    width: 120px;
  } 
  .minicart .currentquantity {
    width: 30px;
    text-align: center;
    padding: 2px 0px;
    font-size: 14px;
    border: none;
  }
  .producttitleandprice {
    float: left;
    width: 100%;
  }
  span.price.spacing--3.pmoney {
    float: right;
    color: #000000;
  }  
  .quantitydiv {
    float: left;
    width: 100%;
  }
  .updatequantity {
    padding: 0 10px;
    line-height: 10px;
    height: 5px;
    cursor: pointer;
    width: 10px;
    color: #000000;
    font-size: 15px;
  }
  .updatequantity:focus {outline:none;}
 .plusminus {
    float: left;
    background-color: #ffffff;
    margin-top: 5px;
    border: 1px solid #000000;
} 
  .minicartheader {
    float: left;
    width: 100%;
    display: flex;
    padding: 12px 0px;
    background: #c85440;
    
  } 
  .minicartheader h4 {
    margin: 0 10px;
    width: 100%;
    text-align: center;
    color: #ffffff;
  } 
  .right-column.productinfo {
    width: 100%;
  }  
.minicart .h2 {
    color: #ffffff;
    text-align: center;
    margin-top: 20px;
    float: left;
    width: 100%;
}
.checkoutarea {
    float: left;
    width: 100%;
    text-align: center;
}
span.checkouttotal {
    text-align: center;
    margin: 25px 0px;
    float: left;
    width: 100%;
    font-size: 20px;
    font-weight: 600;
    text-transform: uppercase;
} 
.overlaydiv {
    display: none;
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 3333;
    background-color: rgba(0,0,0,0.6);
} 
span.progressbartext {
    font-size: 14px;
    text-transform: uppercase;
    text-align: center;
    color: #ffffff;
    font-weight: 600;
    margin-top: 10px;
    margin-bottom: 0px;
}
.progressbarparent {
    float: left;
    width: 100%;
    background: rgb(76, 76, 76);
    margin-bottom: 0px;
    text-align: center;
    padding-top: 10px;
} 
.progressbardiv {
    width: 92%;
    text-align: center;
    margin: 0 auto;
} 
span.cartprogressbar {
    height: 20px;
    text-align: center;
    float: left;
    background: #c85440;
    border-radius: 5px;
    transition: 0.3s;
}  
.cartprogressbardiv {
    float: left;
    width: 100%;
    text-align: center;
    background: #ffffff;
    margin: 10px 0px 20px 0px;
    border-radius: 6px;
} 
.imagearea img {
    width: 70px!important;
    margin: 0px!important;
} 
.checkoutbutton {
    float: left;
    width: 100%;
    text-align: center;
}
.checkoutbutton .button {
    width: 200px;
    margin: 0 auto;
}   
  /* On smaller screens, where height is less than 450px, change the style of the sidenav (less padding and a smaller font size) */
  @media screen and (max-height: 450px) {
    //.sidebar2 {padding-top: 0px;}
    //.sidebar2 a {font-size: 18px;}
  }
</style> 

{% comment %} Mini cart Ajaxify html code  {% endcomment %} 
{% if section.settings.cartdrawer %}
<div class="overlaydiv" id="overlaydiv"></div>
<div id="mySidebar" class="sidebar2">
  <a class="plusit" style="display:none">plusit</a> 
  <div class="minicartheader">
    <h4>Your Cart</h4>  
    <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">×</a>
  </div>

  <div class="progressbarparent">
{% assign fsc = section.settings.shipping_bar_price | times: 100 %}
{% if cart.total_price == 0000 %}
<span class="progressbartext">FREE SHIPPING FOR ORDERS OVER £{{ section.settings.shipping_bar_price }}</span>  
{% elsif cart.total_price < fsc %}
<span class="progressbartext">ONLY <span>{{ fsc | minus: cart.total_price | money }}</span> AWAY FROM FREE SHIPPING</span>    
{% else %}
<span class="progressbartext">CONGRATULATIONS! YOU'VE GOT FREE SHIPPING</span>    
{% endif %}
    
{% assign percentage = 100.000 | divided_by: section.settings.shipping_bar_price %}
{% assign widthprogressbar = cart.total_price | divided_by: 100 | times: percentage %}    
                  
<div class="progressbardiv">
{% if widthprogressbar > 100 %}
<div class="cartprogressbardiv"> <span style="width:100%" class="cartprogressbar"></span></div>
{% else %}
<div class="cartprogressbardiv"> <span style="width:{{widthprogressbar}}%" class="cartprogressbar"></span></div>
{% endif %}
  </div>
  </div>  
  <div class="minicart">
{% if cart.item_count > 0 %}    
  <ul class="minicartul"> 
 {% for item in cart.items %} 
 <li><div class="variant-id width--12" data-variant-id="{{ item.variant.id }}">
<div class="imagearea"><span class="image imagediv">
<a href="{{ item.url }}">
{% render 'image', image: item.image, image_widths: '70' %}
</a></span>
</div>
<div class="right-column productinfo">
<div class="producttitleandprice">
<span class="title ptitle">
<a href="{{ item.url }}">{{ item.product.title }}</a></span>
<span class="price spacing--3 pmoney">£{{ item.price | divided_by: 100 }}</span></div>
<div class="quantitydiv">
<div class="plusminus"><a tabindex="0" class="changeit minusit updatequantity" data-variant-id="{{ item.variant.id }}">−</a>
<input type="type" readonly="" class="currentquantity {{ item.variant.id }}" value="{{ item.quantity }}" min="1" pattern="[1-9]*" data-variant-id="33437099425891">
<a tabindex="0" class="changeit plusit updatequantity" data-variant-id="{{ item.variant.id }}">+</a></div>
<span class="remove spacing--3">
<a role="button" class="changeit removeit cart--remove-button remove" data-variant-id="{{ item.variant.id }}">Remove</a></span></div>
</div></div></li>
  
 {% endfor %}   
 </ul>  
 {% endif %}   
 </div> 
<div class="checkoutarea">
  <span class="checkouttotal isempty">Subtotal: {{ cart.total_price | money }}</span>
    <div class="checkoutbutton">
      <a class="button isempty" href="/checkout">Checkout</a>
  </div>
  </div>
</div>
{% endif %}    
{% comment %} Mini cart Ajaxify html code  {% endcomment %} 

_____________________________________________________________________________________________________________________________________________________________________________    
Countdown timer: very useful to use and can be customized, Best to use where offer expires in certian date such as offer expiring on Nov 30,2021. countdown wil not be reset after page refresing.
Just create 'countdown-timer' liquid snippet and call that snippet anywhere 
in theme using {% include 'countdown-timer',title: "Hurry Up! Products price may increase after",end_date: "Sep 30, 2021" %}
---------------------------------------
{% if end_date != blank %}
<div class="timer">
  {% if title != blank %}
    <h4 class="timer__title">{{ title }}</h4>
  {% endif %}
  <div class="timer-display">
    <div class="timer-block">
      <span class="timer-block__num js-timer-days">00</span>
      <span class="timer-block__unit">Days</span>
    </div>
    <div class="timer-block">
      <span class="timer-block__num js-timer-hours">00</span>
      <span class="timer-block__unit">Hours</span>
    </div>
    <div class="timer-block">
      <span class="timer-block__num js-timer-minutes">00</span>
      <span class="timer-block__unit">Minutes</span>
    </div>
    <div class="timer-block">
      <span class="timer-block__num js-timer-seconds">00</span>
      <span class="timer-block__unit">Seconds</span>
    </div>
  </div>
</div>
<style>
/* styles for timer */
.timer {
    background: rgb(76, 76, 76);
    padding: 15px 10px;
    margin: 0px 0;
    font-weight: 500;
    color: #ffffff;
}
  .timer--expired {
    display: none;
  }
  .timer__title {
    @extend .paragraph;
    text-align: center;
  }
  h4.timer__title {
    font-weight: 600;
    text-transform: uppercase;
    margin-bottom: 10px;
    width: 100%;
}
span.timer-block__num {
    font-size: 20px;
    font-weight: 600;
    border: 1px solid;
    margin: 10px auto;
    padding: 8px 5px;
    max-width: 60px;
    border-radius: 1px;
    background: #ffffff;
    color: #000000;
    margin-bottom: 2px;
}  
.timer-display {
    max-width: 500px;
    margin: 0 auto;
}  
  .timer-display {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    margin-top: 5px;
  }
  .timer-block {
    position: relative;
    width: 25%;
    &:not(:last-child):after {
      content: ':';
      position: absolute;
      right: 0;
      top: 3px;
    }
  }
  .timer-block__num,
  .timer-block__unit {
    display: block;
    text-align: center;
  }
</style>
<script type="text/javascript">
  var second = 1000,
      minute = second * 60,
      hour = minute * 60,
      day = hour * 24;
  var countDown = new Date('{{- end_date -}}').getTime(),
      x = setInterval(function() {
      var now = new Date().getTime(),
      distance = countDown - now;
      var td = Math.floor(distance / (day));
      var th =  Math.floor((distance % (day)) / (hour));
      if(th<10){
      var th = "0"+th;
      }
      var tm = Math.floor((distance % (hour)) / (minute));
      if(tm<10){
      var tm = "0"+tm;
      }
      var ts =  Math.floor((distance % (minute)) / second);
      if(ts<10){
      var ts = "0"+ts;
      }
    
      document.querySelector('.js-timer-days').innerText = td,
      document.querySelector('.js-timer-hours').innerText = th,
      document.querySelector('.js-timer-minutes').innerText = tm,
      document.querySelector('.js-timer-seconds').innerText = ts;
    }, second)
</script>
{% endif %}
=========================================================================================================================================================================
Same countdown timer with an option to expire at certain minutes after refreshing page each time. best to use in cart page and checkout page.
if we want to make the count down time expires in next certain minutes such as in 5 minutes, 7 minutes etc, then put following code in "countdown-timer.liquid" snippet. you can update the minutes to expie in code.
------------------------------------------------------------
{% if end_date != blank %}
<div class="timer">
  {% if title != blank %}
    <h4 class="timer__title">{{ title }}</h4>
  {% endif %}
  <div class="timer-display" id="timersection">
    <div class="timer-block">
      <span class="timer-block__num js-timer-days">00</span>
      <span class="timer-block__unit">Days</span>
    </div>
    <div class="timer-block">
      <span class="timer-block__num js-timer-hours">00</span>
      <span class="timer-block__unit">Hours</span>
    </div>
    <div class="timer-block">
      <span class="timer-block__num js-timer-minutes">00</span>
      <span class="timer-block__unit">Minutes</span>
    </div>
    <div class="timer-block">
      <span class="timer-block__num js-timer-seconds">00</span>
      <span class="timer-block__unit">Seconds</span>
    </div>
  </div>
</div>
<style>
/* styles for timer */
.timer {
    background: rgb(76, 76, 76);
    padding: 15px 10px;
    margin: 0px 0;
    font-weight: 500;
    color: #ffffff;
}
  .timer--expired {
    display: none;
  }
  .timer__title {
    @extend .paragraph;
    text-align: center;
  }
  h4.timer__title {
    font-weight: 600;
    text-transform: uppercase;
    margin-bottom: 10px;
    width: 100%;
}
span.timer-block__num {
    font-size: 20px;
    font-weight: 600;
    border: 1px solid;
    margin: 10px auto;
    padding: 8px 5px;
    max-width: 60px;
    border-radius: 1px;
    background: #ffffff;
    color: #000000;
    margin-bottom: 2px;
}  
.timer-display {
    max-width: 500px;
    margin: 0 auto;
}  
  .timer-display {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    margin-top: 5px;
  }
  .timer-block {
    position: relative;
    width: 25%;
    &:not(:last-child):after {
      content: ':';
      position: absolute;
      right: 0;
      top: 3px;
    }
  }
  .timer-block__num,
  .timer-block__unit {
    display: block;
    text-align: center;
  }
#timersection h3 {
    width: 100%;
    font-size: 22px;
    color: red;
    font-weight: 600;
    letter-spacing: 0px;
    text-align: center;
    text-transform: uppercase;
}  
</style>
<script type="text/javascript">
var minutestoexpire = 7 * 60 * 1000;// Here you can set minutes to expire
var date1 = new Date();
var threshold = new Date(date1.getTime() + minutestoexpire);
  
  var second = 1000,
      minute = second * 60,
      hour = minute * 60,
      day = hour * 24;
  var countDown = new Date('{{- end_date -}}').getTime(),
      x = setInterval(function() {
      var now = new Date().getTime(),
          //distance = countDown - now;
          distance = threshold - now;
     // If the count down is finished, write some text
  if (distance < 0) {
    clearInterval(x);
    document.getElementById("timersection").innerHTML = "<h3>Hurry! Prices can be increased at any time</h3>";
  }else{
      document.querySelector('.js-timer-days').innerText = Math.floor(distance / (day)),
        document.querySelector('.js-timer-hours').innerText = Math.floor((distance % (day)) / (hour)),
      document.querySelector('.js-timer-minutes').innerText = Math.floor((distance % (hour)) / (minute)),
      document.querySelector('.js-timer-seconds').innerText = Math.floor((distance % (minute)) / second);
    }}, second)
   
  
</script>
{% endif %}


__________________________________________________________________________________________________________________
Svg badges to add on product page: such as Free shipping, Value for money, Secure payments, 100% satisfaction
 <ul>
<li><span class="bm-badge"><svg viewBox="0 0 70 70"> <path fill="#373737" d="M55.7 48.5c0 9.4-9.2 8.8-20.7 8.8s-20.7.6-20.7-8.8S23.5 23.4 35 23.4s20.7 15.7 20.7 25.1z"></path> <path class="badges_main_color" d="M35 23.4c11.5 0 20.7 15.7 20.7 25.1s-9.2 8.7-20.7 8.7"></path> <path fill="#373737" d="M24.9 13.8c0-4.5 4.5-4.4 10.1-4.4s10.1-.2 10.1 4.3S40.5 25.9 35 25.9s-10.1-7.6-10.1-12.1z"></path> <path class="badges_main_color" d="M35 9.4c5.5 0 10.1-.2 10.1 4.3S40.5 25.9 35 25.9"></path> <circle class="badges_secondary_color" cx="35" cy="42" r="9.2"></circle> <g> <path class="badges_secondary_color" d="M42.4 25.7H27.5c-.8 0-1.4-.6-1.4-1.4v-.4c0-.8.6-1.4 1.4-1.4h15c.8 0 1.4.6 1.4 1.4v.4c0 .5-.3 1.4-1.5 1.4z"></path> </g><g> <path d="M38.7 46c-.8 1.1-1.9 1.6-3.1 1.6-1.1 0-2-.3-2.7-1-.8-.7-1.3-1.6-1.5-2.9h-1.1v-1.1l1-.1V42v-.5h-1v-1.1l1.1-.1c.2-1.3.8-2.3 1.6-3 .8-.7 1.7-1.1 2.9-1.1.5 0 1 .1 1.5.3.5.2.9.6 1.2 1L37.2 39c-.5-.5-1-.8-1.5-.8s-1 .2-1.3.6c-.3.4-.6.9-.7 1.6h3.8v1.2h-3.9v.9h3.2v1.2h-3c.1.7.4 1.2.7 1.6.3.4.8.6 1.3.6.3 0 .6-.1.9-.2.3-.2.5-.4.8-.7l1.2 1z" fill="#fff"></path> </g> </svg></span><div class="badges-text"> <span class="main-text">Best value for money</span> <span class="hover-text"><p>Best prices in the UK</p></span> </div></li>
<li> <span class="bm-badge"><svg viewBox="0 0 70 70"> <path class="white" d="M45 32.2h11.4v11.4H45z"></path> <g> <path class="badges_main_color" d="M33.5 58.9l.2-26.4 22.8-12.7.2 9.9-12.3 4.4 3.2 17.3"></path> <path class="badges_main_color" d="M56.4 19.8l-7.9-4.5-22.6 13.2 7.8 4.5"></path> <path class="badges_secondary_color" d="M46.7 47.6s0-.1 0 0" fill="#141414"></path> <path class="badges_secondary_color" d="M61.4 38.1c0 2.1-.8 4.5-1.8 6.7-1.8 3.9-4.2 7.4-6.8 10.6-.3.4-.7.8-.9 1.1-.7.7-.9.8-1.5 0-1.3-1.6-2.8-3.2-4-4.9-2.3-3.2-4.3-6.5-5.3-10.3-.9-3.6-.7-7 1.8-10.1 1.6-2.1 3.8-3.3 6.5-3.8 5.6-1.2 12 3.4 12 10.7zm-15-1.6c-.8 3.1 1.4 5.9 4.4 5.9 2.7 0 4.7-2 4.7-4.6 0-3-2.8-5.4-6-4.6-1.4.6-2.7 1.8-3.1 3.3z" fill="#4cbf64"></path> <path fill="#323232" d="M34.4 8l7.3 3.7L34.4 8zm0 0L11.3 20.2c2.2 1.2 5.6 3.2 7.7 4.4l22.9-12.9L34.4 8z"></path> <g> <path fill="#4b4b4b" d="M33.5 58.9c-6.1-3.2-3.2-1.7-4.8-2.6-5.6-3.1-11-6.4-16.5-9.5-.7-.4-1-.9-1-1.6 0-8.1.2-24.8.2-25 2.2 1.2 22.4 12.7 22.4 12.7" id=""></path> <g> <path class="white" d="M18.9 24.6V35c0 .7.3 1.1.9 1.4l4.8 2.8c.9.5 1.3.5 1.2-.7v-10l-6.9-3.9z"></path> <path fill="#f2f2f2" d="M18.9 24.6l7 3.9 22.6-13.1-6.7-3.7z"></path> </g> </g> </g></svg></span> <div class="badges-text"> <span class="main-text">DPD Delivery</span> <span class="hover-text"><p>Delivered through <br>out the UK</p></span> </div></li>
<li> <span class="bm-badge"><svg viewBox="0 0 70 70"> <path fill="#7e7e7e" d="M58.5 24.4c.2.1.3.3.4.4.1.1.4.5.5.8v.4l-7.1 4.9.1-2.3 6.1-4.2zm-46.5.2c-.2.1-.3.3-.4.4-.1.1-.4.5-.5.8v.4l7.1 4.9-.1-2.3-6.1-4.2z"></path> <path class="badges_main_color" d="M11.1 26.2s3.7 2.5 5.5 3.8c4.8 3.3 9.4 6.9 14.1 10.3 2.8 2 6 1.9 8.8-.1 4.6-3.3 9.1-6.6 13.7-9.9 2-1.5 6.2-4.3 6.2-4.3s.1 6.4.1 9.6v15.6c0 1.4-.4 1.8-1.8 1.8-9.6-.1-19.1 0-28.7 0H12.8c-1.3 0-1.7-.3-1.7-1.6"></path> <path class="badges_main_color" d="M58.5 24.4s-4 2.8-6.1 4.3v-4.9c0-.8-.3-1.2-1.2-1.2H19.4c-1.1 0-1.3.4-1.3 1.3v4.9L12 24.6s7.5-4.9 11.1-7.5c2.8-2 5.7-3.8 8.6-5.7 3.4-2.2 4.8-2.2 8.1.1 5.9 4 18.7 12.9 18.7 12.9z"></path> <path d="M52.2 30.2c0 .4-.2.8-.5 1-1.9 1.4-8.4 6.1-12.3 8.9-2.8 2-5.9 2.1-8.7.1-3.9-2.9-10.2-7.5-12-8.8-.3-.2-.5-.6-.5-1V24c0-1 .2-1.4 1.3-1.4H51c1.4 0 1.2 1.3 1.2 1.3v6.3z" fill="#fff" stroke="#d06d5c" stroke-width="1.5" stroke-miterlimit="10"></path> <path d="M41.1 33.4c.2 2.5-5.6 5.1-8.7 3.6-2.4-1-3.9-4.1-3.4-6.9.6-3.1 3-5.2 6.2-5.4 2-.1 3.8.3 4.9 2.1 1 1.7 1 3.6 0 5.4-1.1 2.1-2.8 2.6-4.9 1.5-.6-.3-.8.1-1.1.3-1.6.7-2.5.1-2.3-1.6.1-.9.3-1.7.8-2.5 1.2-2 3.3-2.7 5.4-1.8.3.1.3.6.2.9-.3 1.1-.6 2.1-.9 3.2-.1.4-.4 1 .1 1.4.4.2.8-.2 1.2-.4 1.5-1.1 2-2.6 1.7-4.4-.3-1.7-1.4-2.7-3-3.2-2.9-.8-6.2 1.1-7 4.2-.9 3.1.7 6 3.7 6.7 2.5.6 6-1.6 7.1-3.1zm-5.3-3.8c0-.4.1-.8-.3-.9-.5-.2-.7.2-.9.6-.5 1-1 2-1 3.1 0 .3-.1.6.3.7.3.1.5-.1.7-.3.7-1 1.1-2.1 1.2-3.2z" fill="#d06d5c"></path><path fill="#7e7e7e" d="M13 51.2s12.4-10.4 12.9-10.6 2 .7 1.9 1.2c-.1.5-13.7 9.2-14 9.4s-.8 0-.8 0zM57.6 50.9S45.2 40.5 44.7 40.3s-2 .7-1.9 1.2c.1.5 13.7 9.2 14 9.4.2.2.8 0 .8 0z"></path> </svg></span> <div class="badges-text"> <span class="main-text">Customer Service</span> <span class="hover-text"><p>We strive to provide our <br>customers the best experience</p></span> </div></li>
<li> <span class="bm-badge"><svg viewBox="0 0 70 70"> <path class="white" d="M23.6 53.3s-12.8-14.1-14-19.7l16.2.3v19.5h-2.2z"></path> <path fill="#3f3f3f" d="M33.9 22c-.4 2.2-.3 4.6-2.8 5.9-.2.1-.3.3-.4.5-.8 1.2-1.6 2.5-2.1 3.9-.4 1.2-1 2.5-1.8 3.6-1 1.1-2.4.6-3.6.6-.2-1-1-.7-1.6-.7h-9.9c-.7 0-1.3 0-1.7-.9-3.8-9.1 1.4-19.5 11-21.4 4.8-1 9.1.1 12.8 3.3 1 .9 1.6.9 2.6 0 5.2-4.5 13-4.8 18.6-.7 5.7 4.1 7.9 11.6 5.3 17.9-.6 0-1.2-.3-1.7-.6-4.2-2.5-8.3-5-12.5-7.4-2.6-1.5-5-3.3-7.8-4.4"></path> <path class="badges_secondary_color" d="M23.1 36.6c.1-.1.2-.2.3-.2 1.2 0 2.6.4 3.3-.7.8-1 3.1-6.3 3.9-7.5.1-.2 2.9-4.2 3.2-6.4.2-1-.2-2.1 1.2-2.4 1.1-.3 1.7.4 2.4 1.2.1.1.1.2.2.3.2.6.9 2.2.7 5.1v.1c-.4 1.5-1.4 2.8-2 4.2-.1.3 9.7 1.4 11.6 1.6.2 0 .3.2.3.3l.6 17c0 .2-.1.4-.3.4l-8.9 1.1s-5.5.8-6.6.1c-.1-.1-.2-.1-.2-.1-1.4.1-3.9-.4-5.9-.7-.9-.1-2-.6-3-.1-.1.1-.3.1-.4 0-1.3-1.1-1.6-2.7-1.8-4.3-.4-3-.7-6.2 1.4-9z"></path> <path class="badges_main_color" d="M39.6 50.7c.9-.8 2.1-.2 3.2-.7 1-.5 1.6-1.1 1.6-2.3 0-.4 0-.9.2-1.1 1.1-1.3 1.8-2.6.9-4.3 1.6-1.6 1.4-3.4.3-5.2-.1-.1.1-.5.2-.6 1.1-.9.9-2.1.4-3.2-.6-1.2-1.7-1.5-3-1.5h-6c-.7 0-1.1-.1-1.2-.4-.2-.3-.1-.7.1-1.2.5-1.3 1-1.9 1.4-2.6 1-2 .5-4.4.3-5.4-.1-.4-.2-.8-.3-1 2.8 1.1 5.8 3.1 8.3 4.6 4.2 2.4 13.5 7.4 14.3 8.2-6.2 12.7-14.9 21.3-22 26.7-3.6-1.4-6.4-2.8-8.4-4 0 0-1.3-.8-7.7-4.9l1.9-.3s-.3-.9-.4-1.4c1.1-.8 2.2-.3 3.2-.2 2 .3 4 .6 6 .7 2.2.5 4.5.6 6.7.1z" fill="#4b4b4b"></path> <path fill="#3f3f3f" d="M22.2 51.8c.6-.1 10.9 6.6 16.1 8.9 0 0-3 2.9-6.1.5-3.2-2.5-7.2-6.3-10-9.4z"></path> <path fill="#252525" d="M39.6 50.6c-2.2.5-4.5.5-6.7 0"></path></svg></span> <div class="badges-text"> <span class="main-text">100% satisfaction</span> <span class="hover-text"><p>100% satisfaction or money-back guarantee</p></span> </div></li>
<li> <span class="bm-badge"><svg viewBox="0 0 70 70"> <path fill="#4b4b4b" d="M54.4 19.4c-1.5 2.8.1 5.4 2.1 7.8.8.9.5 2-.3 2.9-.5.7-.9 1.2-1.5 1.9-.8.9-1.1 2.1-.7 3.3.2.5.2 1 .3 1.5.3 2 0 2.7-1.9 3.4-1.1.4-1 .8-.6 1.7 2 3.3 3.9 6.6 5.7 9.9 1.1 1.9.8 2.4-1.2 2.5-5.2-.3-6.7 1.6-8.4 4.9-1 1.9-1.7 1.8-2.7-.1-2-3.5-4-6.9-5.9-10.3-.5-.9-.9-1-1.8-.4-1 .8-2.3.8-3.2.1-1.1-.9-1.6-.5-2.2.6-1.8 3.2-3.6 6.3-5.5 9.5-.2.4-.4.8-.7 1-.1.1-.3.5-.8.6-.6.1-1.2-.2-1.4-.8-.3-.8-1.4-3.3-4.3-4.6-2-.9-3.9-.8-4.7-.8-1.6-.1-1.9-.6-1-2 2-3.5 4-6.9 5.9-10.3.6-.9.7-1.3-.6-1.8-2-.8-2.4-1.6-1.9-3.7.7-2.4.1-4.1-1.5-5.9-1.5-1.6-1.5-2.6 0-4.3 1.8-2 2.4-4.1 1.5-6.7-.5-1.5.1-2.7 1.6-3.1 2.7-.7 4.5-2.2 5.2-5.1.3-1.3 1.4-1.8 2.7-1.6.8.1 1.5.2 2.2.5 1.1.4 2.1.1 2.9-.7.6-.5 1.2-.8 1.8-1.3 2.1-1.3 2.5-1.4 4.3.2 1.8 1.7 3.7 2 5.9 1.3s3-.3 3.7 1.8c.8 2.6 2.4 4 4.9 4.6 1.5.8 2.2 1.6 2.1 3.5z"></path> <path class="badges_main_color" d="M46.6 57.5c-.6-1.1-1.2-2.1-1.8-3.2-1.3-2.2-2.5-4.3-3.7-6.5-.7-1.2-1.6-1.8-2.6-1.8-.8 0-1.5.4-2 .7h-.1l-.1.1c-.2.2-.4.2-.5.2-.1 0-.2 0-.3-.1-.7-.6-1.5-.9-2.2-.9-1.8 0-2.6 1.6-2.9 2.1-1.7 3-3.4 6-5.4 9.3-.8-1.4-2.2-3.3-4.8-4.4-1.6-.7-3.1-.9-4.2-1 .5-.9 1.1-1.9 1.6-2.8 1.3-2.2 2.5-4.3 3.7-6.4.4-.5 1-1.5.6-2.7-.4-1.3-1.7-1.8-2.2-2-.5-.2-.7-.4-.8-.4 0-.1 0-.4.1-1 .8-2.8.2-5.2-2-7.7-.5-.5-.6-.8-.6-.8s.1-.3.6-.8c2.4-2.6 3-5.5 1.9-8.7-.1-.2-.1-.4-.1-.4s.1-.1.3-.1c3.6-.9 5.8-3.1 6.6-6.6v-.1h.4c.7.1 1.3.2 1.7.4h.1c.5.2 1.1.3 1.6.3 1.2 0 2.3-.5 3.3-1.4.2-.2.4-.3.7-.5.3-.2.6-.4 1-.7.3-.2.8-.5 1-.6.1.1.4.3.8.6 1.5 1.4 3.2 2.2 5.2 2.2.9 0 1.7-.1 2.7-.4.5-.1.7-.2.9-.2.1.1.2.3.3.7 1 3.1 2.9 5 6.1 5.8.7.4.8.6.8 1.1-1.9 4.2 1.2 7.9 2.5 9.5 0 .1-.1.2-.2.3l-.1.1-.1.1c-.4.6-.8 1.1-1.4 1.8-1.3 1.4-1.7 3.4-1.1 5.2v.1c0 .1.1.3.1.5s.1.4.1.6c.1.5.1.7.1.8-.1.1-.3.2-.7.3-.6.2-1.6.7-2 1.7-.5 1.1 0 2.1.2 2.7l.1.1.1.1c1.9 3.1 3.7 6.2 5.4 9.3h-.2c-4.9.3-7 2.6-8.5 5.5z"></path> <path d="M35.8 44c-8.9-.2-15.4-6.9-15.4-15.5 0-9.8 7.9-15.5 15.4-15.5 7.7-.2 15.3 6 15.4 15.1.1 9.5-7 15.6-15.4 15.9z" fill="#fdfdfd"></path> <path class="badges_secondary_color" d="M48.8 28.4c0 7.1-5.8 13-12.9 13-7.2.1-13.1-5.9-13.1-13.1s5.9-13.1 13-13.1c7.2.1 13 6 13 13.2z"></path> <path d="M30.4 35.2V35c1.1-3.2.2-5.6-2.4-7.6-.9-.8-.6-1.4.6-1.7.4-.1.8-.2 1.1-.2 2.3-.1 4-1.1 4.7-3.4L35 21c.7-1.1 1.2-1.1 1.9 0 .2.3.4.7.5 1 .8 2.3 2.4 3.4 4.8 3.5.4 0 .8.1 1.1.2 1.3.3 1.5.8.7 1.9l-.8.8c-1.8 1.4-2.5 3.2-1.9 5.5.2.8.8 1.9-.2 2.5-.8.6-1.6-.3-2.3-.8-1.9-1.2-3.8-1.2-5.6.1-.4.3-.8.5-1.2.7-1.2.2-1.7-.1-1.6-1.2z" fill="#fefefe"></path></svg></span> <div class="badges-text"> <span class="main-text">Premium Quality</span> <span class="hover-text"><p>Been in business for 20 years</p></span> </div></li>
<li> <span class="bm-badge"><svg viewBox="0 0 70 70"> <path class="white" d="M41.9 44.6H12.1V17.8l10.7.1 1.5.1 1.8.4 3.5-.4h12.3zM47.5 32.6h8.4c1 0 1.9.8 1.9 1.9v6.3H47.5v-8.2z"></path> <path class="badges_secondary_color" d="M30.6 24.1h-6.4v20.5h6.4V24.1zM31.6 24.1v20.5h10.9V24.1H31.6zm-19 20.5h10.7V24.1H12.6v20.5z"></path> <path class="badges_main_color" d="M57.1 50.1c-.8 0-1.4-.2-1.9-1-1.5-2.1-4.5-1.9-6.2.1-.3.4-.7.7-1.2.7H22c-.4 0-.9-.3-1.2-.7-1.7-2.3-4.5-2.3-6.4 0-.2.3-.6.7-.8.7H9.9v-4.4h34.7V30.4h10.2c.8 0 1.4.3 1.8 1.1 1.2 2.2 2.6 4.3 3.8 6.6.2.3.3.7.3 1v11.1c.1-.1-3.6-.1-3.6-.1z"></path> <g> <path fill="#393939" d="M44.6 23.2V18H31.7v5.2h12.9zM23.3 17.9v4.8c0 .2-.1.4-.3.4H10.8c-.2 0-.4-.2-.4-.4V18c0-.2.1-.3.3-.3 4.4 0 7.5.1 11.7.1h.4"></path> <path fill="#393939" d="M36 12.2c-.5-.4-1.1-.7-1.7-.8-2.6-.5-5.4 1.1-6.3 3.6l-.2.7c-1.2-1.4-2.1-3.6-3.5-4.8-1.6-1.3-3.6-1.5-5.6-.8-1.3.4-2.2 1.3-2.3 2.7 0 .4 0 .9.2 1.3.3.9 1.2 1.2 1.6 1.4 2.4 1.1 5.4 2.2 6 2.4V23l.1.1h.2c4-.1 5.3 0 5.6 0h.2c.1 0 .2-.2.2-.3v-3.7c0-.8-.1-1.1 1.2-1.5 1.4-.4 2.8-1.1 3.5-1.5 1.2-.8 1.3-1.3 1.4-1.5.3-1 .1-1.8-.6-2.4zM26.2 18c-4.1-1.2-5.2-1.7-7.8-2.9-.7-.2-1.5-1-1.4-2 0-.9.9-1.7 1.6-2.1 1.7-.9 3.5-.5 5.1.5 1.8 1.3 2.6 3.6 2.9 6.1.1.3-.1.5-.4.4zm8.5-2.4c-.7.4-3.8 1.4-5.8 2.3-.2.1-.5 0-.5-.3 0-3.5 2.6-5.9 5.5-5.2.8.1 1.7.8 1.8 1.3.3.6-.3 1.6-1 1.9z"></path> </g> <g> <path fill="#f2f2f2" d="M54.7 33.6c.9 1.4 2.6 4.5 2.6 4.5s.3.5 0 .5h-5.2c-4.3 0-4.2-.1-4.1-4.7 0-.9.3-1.1 1.2-1.1h4.3s.8-.1 1.2.8z"></path> </g> <g> <path fill="#393939" d="M20.6 51.6c0-1.8-1.2-3-3-3s-3 1.2-3 2.9c0 1.8 1.3 3.1 3 3.1 1.6.2 3-1.1 3-3z" id="Calque_4"></path> <path fill="#393939" d="M49.3 51.6c0 1.7 1.3 3.1 3 3.1s3-1.4 3-3.1c0-1.6-1.4-3-3-3s-3 1.3-3 3z" id="Calque_3"></path></g></svg></span> <div class="badges-text"> <span class="main-text">Free shipping</span> <span class="hover-text"><p>over £70, otherwise only £6</p></span> </div></li>
<li> <span class="bm-badge"><svg viewBox="0 0 70 70"> <path class="white" d="M11.1 23.7h48.6v8.8l-48.6-.2z"></path> <path fill="#252525" d="M30.1 47.6c.5-1 1-2 1-3.2V33.1c0-.7-.1-1.3.6-1.3 8.7 0 18 .1 26.6.1 1 0 1.2-.4 1.2-1.2V25c0-.4-.2-1-.9-1-14 .2-30.1 0-44.1 0-.9 0-1.6 0-2.2.1-.5.2-.8.7-.9 1.2v3.8c-.3.1-.6.2-.9.4V22c0-2.2 1.8-4 4-4h39.6c1.4 0 2.6-.1 3.9 0 1.5.2 2.3 1.6 2.3 3v26.6c0 1.6-1 2.6-2.7 2.6-9.6 0-18.6-.1-28.9-.1"></path> <path fill="#d06d5c" d="M12 28c6-2.2 12.6-1.8 18.4.7 1 .4 1.7.8 1.7 2.2 0 4.2-.2 8.4-.2 12.6 0 1.2-.4 2.3-.9 3.3-.9 1.6-1.5 2.4-1.5 2.4s-4.3 4.5-6.8 6.4c-2.1 1.6-2 1.7-4 .2-3-2.4-5.7-5.1-7.9-8.3-1.1-1.6-1.7-3.3-1.7-5.3 0-3.4.1-6.8 0-10.2-.1-1.8.3-3.2 2.9-4z"></path> <path class="white" d="M12.9 19.8v-.4H58v.4"></path> <path class="white" d="M25.7 47c0 .6-.4 1-1 1H16c-.7 0-1-.3-1-1.1v-6.4c0-.8.2-1.1 1.4-1.1h8.3c.9 0 1.2.2 1.2.9-.1.8-.2 6.7-.2 6.7m-1.4-10.5v.9c0 .4 0 .7-.1.8s-.3.1-.4.1c-.1 0-.7 0-.8-.1-.1-.1-.1-.5-.1-.5v-.1-1.9c0-.2-.1-.9-.5-1.4-.1-.2-.9-1-2-1-1.5.1-2.3 1.5-2.5 2.8 0 .1-.1 2-.1 2.1 0 .1-.5.1-.7.1-.6 0-.6-.1-.6-.2v-.4-1c.1-.9.1-1.7.6-2.5.6-1 1.4-1.4 1.6-1.5.3-.2 1-.5 1.9-.5.3 0 1.3.1 2.2.8 1.7 1.2 1.5 3.3 1.5 3.5zm28 8.1c-2.3 0-4.1-1.8-4.1-4 0-2.4 1.8-4.1 4.3-4 2.3 0 4.1 1.9 4.1 4.1-.1 2.2-2 4-4.3 3.9z"></path> <path class="white" d="M48.8 37.6c-1.5 1.7-1.7 3.9.1 6.2-1.6 1.2-4 1.1-5.5-.3-1.5-1.4-1.7-3.4-.5-5.1 1.3-1.8 4-2.5 5.9-.8z"></path><radialGradient id="" cx="43.845" cy="47.98" r="14.819" fx="29.026" fy="47.97" gradientTransform="matrix(1 0 0 .9844 0 .746)" gradientUnits="userSpaceOnUse"> <stop offset="0" stop-color="#7e7e7e"></stop> <stop offset="1" stop-color="#585858"></stop> </radialGradient><path fill="url(#SVGID_1)" d="M30.8 47.2h27.1v1.6H29.8z"></path> </svg></span> <div class="badges-text"> <span class="main-text">Secure ordering</span> <span class="hover-text"><p>100% Secure online shopping</p></span> </div></li>
</ul>
 </div
__________________________________________________________________________________________________________________________________________
Bundle App custom Template: Created at fatbutcher.co.uk
--------------------------------
Jquery required:
 $(document).on('click','.bundleappmobilebutton', function(e) {    
      $(".bundlemain #sidebar").toggle();
        if ($(".arrowsign").text() === "Click to collapse") {
            $(".arrowsign").text("Click to Expand");
            } else {
           $(".arrowsign").text("Click to collapse");
          }
        
      });     
      
      $(window).scroll(function() { 
      var scroll = $(window).scrollTop();
        var documentheight = $(document).height()-1300;
        if (scroll >= 140 && scroll < documentheight) {
          //$("#sidebar").addClass("fixedclass");
          $("body").addClass("scrolled");
         }else if (scroll >= documentheight) {
           //$("#sidebar").removeClass("fixedclass");
           $("body").removeClass("scrolled");
        }else{
           //$("#sidebar").removeClass("fixedclass");
           $("body").removeClass("scrolled");
        }
        
       });

..................................
Template code:

<style type="text/css">
.fixedclass {
    position: fixed;
    top: 110px;
}
.buttondisabled {
    opacity: 0.4;
    cursor: not-allowed;
}
.buttondisabled:hover{
   background: #c85440!important;
}  
#sidebar li span {
    font-size: 17px;
    font-weight: 700;
    background: #ffffff;
    color: #000000;
    float: left;
    margin-bottom: 5px;
} 
form.bundle-builder--add-to-cart-form {
    text-align: center;
}
.bundle-builder--add-to-cart-form button {
    background: #c85440;
    color: #ffffff;
    padding: 15px;
    font-weight: 600;
    border: none;
    text-align: center;
}  
.bundleappmobilebutton.transparentbutton {
    background: transparent;
    padding: 48px;
}  
form.bundle-builder--remove-from-bundle-form {
    float: right;
    margin-right: 10px;
}
p.price {
    margin-left: 15px;
}
ul.ulone {
    height: 275px;
    overflow-y: auto;
    padding: 10px!important;
    border: 1px solid #f1f1f1;
}  
.ulone p.title, .ulone p.price{
    font-size: 14px;
}  
.ulone li {
    margin-bottom: 0px;
}  
#sidebar h2 {
    margin: 0;
    width: 100%;
    text-align: center;
    font-size: 24px;
    margin-bottom: 10px;
}
ul.ultwo {
    margin: 15px auto!important;
    padding: 0!important;
    margin: 0 auto;
}
p.title {
    min-width: 300px;
}  
.productdata li {
    width: 100%;
    float: left;
}  
.bundle-content table {
    text-align: left;
    width: 100%;
}
.bundle-content {
    float: left;
    width: 100%;
} 
.ultwo p {
    font-size: 18px;
    font-weight: 600;
}
p.dprice {
    float: right!important;
    font-size: 16px!important;
    color: #c85440!important;
} 
p.dhead {
    font-size: 16px!important;
    color: #c85440!important;
}   
p.tprice {
    float: right!important;
}  
#sidebar ul {
    list-style: none;
    margin: 0;
    text-align: left;
    width: 100%;
    float: left;
}
.product-list {
    width: 65%;
    float: left;
}
#stamped-main-widget {
    width: 60%;
    margin: 0!important;
    padding: 40px;
}  
.scrolled div#sidebar {
    top: 110px!important;
    position: fixed;
} 
form.bundle-builder--change-quantity-form {
    color: #ffffff;
}
.changebutton {
    float: left;
    width: 100%;
    padding: 0px 0px;
    font-size: .875rem;
    border-radius: 3px;
    text-align: center;
    overflow: hidden;
    display: flex;
    max-height: 50px;
}
.product form {
    min-height: 80px;
}  
.changebutton button {
    margin: 0px;
    padding: 10px 15px;
    font-size: 25px;
    border: none;
    width: 100%;
    border: 1px solid #c85440;
}
span.productaddd {
    padding: 12px 15px;
    background: #c85440;
    width: 100%;
    min-width: 85px;
}
 #sidebar {
    float: right;
    width: 33%;
    padding-right: 20px;
    right: 0;
    border: 1px solid #000000;
    min-height: 500px;
    color: #ffffff;
    padding: 20px;
    margin-top: 25px;
    height: 510px;
    position: relative;
    margin-right: 20px;
} 
.bundle-builder--remove-from-bundle-form button {
    font-size: 10px;
    color: #c85440;
    padding: 2px 5px;
    background: #ffffff;
    border: none;
    font-weight: 600;
    margin-bottom: 8px;
} 
div#bundle-builder-app--bundle--root {
    background: #ffffff!important;
    float: left;
}
span.variant-price {
    margin-bottom: 5px;
    font-weight: 600;
}  
.product {
    width: 33%;
    float: left;
    padding-top: 0;
    padding: 1%;
    min-height: 450px;
}
.product h2 {
    font-size: 1rem;
    font-weight: 600;
    text-align: center;
    margin: 3px 0;
}
span.stamped-product-reviews-badge.stamped-main-badge {
    width: 100%;
    text-align: center;
}
.stamped-fa::before {
    font-size: 14px!important;
}
span.stamped-badge-caption {
    font-size: 12px;
}
.product span.variant-price {
    width: 100%;
    float: left;
    text-align: center;
    color: #000;
}
.bbutton {
    width: 100%;
    font-size: .875rem;
    line-height: 1.125em;
    background-color: #c85440;
    border-color: #c85440;
    color: #ffffff;
    transition: color .1s,background .1s,border .1s;
    border-radius: .1875rem;
    border-style: solid;
    border-width: 2px;
    box-shadow: none;
    display: inline-block;
    margin: 0 auto;
    outline: 0;
    padding: 14px 26px;
    position: relative;
    text-align: center;
    text-decoration: none;
    vertical-align: middle;
} 
 .showonbundlepage{
   display:block!important;
  }  
.productdata p {
    color: #000000;
    float: left;
    margin-bottom: 0;
}
p.headtext {
    color: #c85440;
    font-weight: 600;
    font-size: 20px;
}  

.product .pformbutton:last-child {
    display: block!important;
}  
@media only screen and (max-width: 1000px) {
.product-list {
    width: 100%;
}
#stamped-main-widget {
    width: 100%;
}  
.bundleappmobilebutton {
    display: block!important;
    position: fixed;
    bottom: 0;
    right: 0;
    font-size: 25px;
    background: #c85440;
    padding: 10px 20px;
    color: #fff;
    cursor: pointer;
    font-weight: 600;
    width: 100%;
    z-index: 999999;
    text-align:center;
}  
.changebutton button {
    padding: 10px 0px;
}  
#sidebar {
    width: 100%;
    position: fixed;
    border: 1px solid #000;
    margin: 0 auto;
    height: 100vh;
    background:#ffffff;
    display: none;
    padding-right: 0px;
    padding: 0px;
    top: 0;
    z-index: 999;
    border: none;
}
.product {
    width: 33%;
    padding: 3%;
    min-height: auto;
    max-height: auto;
}
.bundleappmobilebutton p.tprice {
    float:none!important;
    margin-bottom: 5px;
}
span.arrowsign {
    font-size: 14px;
}  
span.variant-price {
    margin-bottom: 5px;
}  
.scrolled div#sidebar {
    top: 0px!important;
    position: fixed;
    padding: 10px;
}
span.productaddd {
    padding: 13px 0px;
} 
} 
@media only screen and (max-width: 750px) { 
.product {
    width: 50%;
    min-height: auto;
}  
.product h2 {
    min-height: 50px;
}  
p.title {
    min-width: 190px;
}
#stamped-main-widget {
    padding: 5px;
}    
}   
</style>

<script type="text/javascript">
const selectedVariants = new Map();

function setAddDisabled(form) {
    const variantId = form.querySelector('[name="variant"]').value;
    const sectionId = form.querySelector('[name="section"]').value;
    const canAdd = window.BundleBuilder.canAddVariant(variantId, sectionId);
    form.querySelector('[type="submit"]').disabled = !canAdd;
}
RE

/* Change variant price after variant change */
Array.prototype.forEach.call(
    document.querySelectorAll('.bundle-builder--add-to-bundle-form select[name="variant"]'),
    function (select) {
        select.addEventListener('change', function (e) {
            const variantId = e.target.value;
            selectedVariants.set(e.target.id, variantId);
            const price = e.target.querySelector('option[value="' + variantId + '"]').dataset.price;
            e.target.parentNode.querySelector('.variant-price').textContent = price;

           const form = e.target.parentElement;
           setAddDisabled(form);
        });
    }
);


function render() {
    selectedVariants.forEach(function (variantId, selectId) {
        const select = document.getElementById(selectId);
        if (select) {
            select.value = variantId;
        }
    });
    Array.prototype.forEach.call(
        document.querySelectorAll('.bundle-builder--add-to-bundle-form'),
        setAddDisabled,
    );
}
/* Change variant to what was selected last */
document.body.addEventListener('bundlebuilder:render', render);
render()
</script>


{% if bundle.published %}
<div class="bundlemain">
<div class="product-list">
    <h1>{{ bundle.current_section.name }}</h1>
	
    <div class="product-box">
        {% for product in bundle.current_section.products %}
            <div class="product">
             <img class="bpimage" src="{{ product.image.src }}" />
                <h2>{{ product.title }}</h2> 
              <div style="display:none" class="pformbutton">
{% add_to_bundle_form bundle.current_section %}
                    {% if product.available_variants.size > 1 %}
                        <select name="variant" id="select-{{ bundle.current_section.index }}-{{ product.id }}">
                            {% for variant in product.available_variants %}
                                <option value="{{ variant.id }}" data-price={{ variant.price | money }}>
                                    {{ variant.title }}{% if variant.available_count %} (available: {{ variant.available_count }}){% endif %}
                                </option>
                            {% endfor %}
                        </select>
                    {% else %}
                        <input type="hidden" name="variant" value="{{ product.available_variants[0].id }}" />
                    {% endif %}
                   
                    <span class="variant-price">{{ product.available_variants[0].price | money }}</span>
                   <button style="display:none" class="bbutton pformbutton" id="bbutton{{ product.id }}" type="submit">Add</button>
                {% end_add_to_bundle_form %}
              </div>
                {% for variant in product.variants_in_bundle %}
              <div style="display:none" class="pformbutton">
                {% change_quantity_form %}
                      <input type="hidden" name="variant" value="{{ variant.id }}" />
                      <input type="hidden" name="section" value="{{ bundle.current_section.index }}" />
                <span class="variant-price">{{ product.available_variants[0].price | money }}</span>
                      <div class="changebutton"><button type="submit" name="remove">-</button>
                        <span class="productaddd"> Added {{ variant.count }}</span>
                        <button type="submit" name="add">+</button></div>
                    {% end_change_quantity_form %}
              </div>
               {% endfor %}
            </div>
      {% endfor %}
    </div>
   </div>
   <div id="sidebar">
     <h2>Your Bundle</h2>
    {% if bundle.has_next_section %}
        {% section_switch_form %}
            <input type="hidden" name="section" value="{{ bundle.current_section.index | plus: 1 }}" />
            <button type="submit">Next</button>
        {% end_section_switch_form %}
    {% endif %}

    {% if bundle.has_prev_section %}
        {% section_switch_form %}
            <input type="hidden" name="section" value="{{ bundle.current_section.index | plus: -1 }}" />
            <button type="submit">Previous</button>
        {% end_section_switch_form %}
    {% endif %}

    {% if bundle.errors.size > 0 %}
        <ul>
            {% for error in bundle.errors %}
                <li>{{ error }}</li>
            {% endfor %}
        </ul>
    {% endif %}

    <div class="bundle-content">
        {% if bundle.content.items.size == 0 %}
            <span>Your bundle is empty</span>
        {% else %}
<div class="productdata">
<ul class="ulone">
<li>
<p class="headtext title">Products</p>
<p class="headtext price">Price</p> 
</li>  
{% for item in bundle.content.items %}
<li>
<p class="title">{{ item.variant.product.title }}</p>
<p class="price">{{ item.variant.price | money }}</p> 
{% unless item.is_required %}
{% remove_from_bundle_form item %}
<button type="submit">X</button>{% end_remove_from_bundle_form %}
{% endunless %}
</li>
{% endfor %}
</ul>
<ul class="ultwo">
{% if bundle.content.price < bundle.content.compare_at_price %}
<li>
<p class="dhead">Discount</p>
<p class="dprice">{{ bundle.content.price | minus: bundle.content.compare_at_price | money }}</p>
</li>
  {% endif %}
<li>
<p class="thead">Total</p>
<p class="tprice">{{ bundle.content.price | money }}</p>
</li>
</ul>
</div>

            {% if settings.note_enabled %}
                <div class="note-field--container">
                    <label>{{ settings.note_label }}{% if settings.note_required %} (required){% endif %}</label>
                    {% note_field %}{{ settings.note_text }}{% end_note_field %}
                </div>
                {% if settings.note_prompt_visible %}
                    <div class="note-field--error-message">
                        <p>Note required before adding to cart.</p>
                    </div>
                {% endif %}
            {% endif %}

            {% add_to_cart_form %}
                {% if bundle.subscription_type == 'optional' and bundle.subscription_frequencies.size > 0 %}
                    <label>
                        <input type="radio" name="subscription-enabled" value="0" />
                        One-time purchase
                    </label>
                    <label>
                        <input type="radio" name="subscription-enabled" value="1" />
                        Subscribe
                    </label>
                {% endif %}
                {% if bundle.subscription_type == 'required' or bundle.subscription_enabled %}
                    {% for frequency in bundle.subscription_frequencies %}
                        <ul>
                            <li>
                                <label>
                                    <input type="radio" name="subscription-frequency" value="{{ frequency.id }}" />
                                    {{ frequency.frequency }} {{ frequency.unit }}
                                </label>
                            </li>
                        </ul>
                    {% endfor %}
                    Email: <input type="email" required name="subscription-email" value="{{ settings.subscription_email }}" />
                {% endif %}
                <button class="button {% unless bundle.can_add_to_cart %}buttondisabled{% endunless %}" type="submit"{% unless bundle.can_add_to_cart %} disabled="disabled"{% endunless %}>
                    {% if bundle.adding_to_cart %}
                        Processing...
                    {% else %}
                        Add bundle to cart
                    {% endif %}
                </button>
            {% end_add_to_cart_form %}
        {% endif %}
    </div>
{% else %}
    <p>Sorry, this bundle is currently unavailable.</p>
{% endif %}
 </div>
   <div class="bundleappmobilebutton" style="display:none">
   <span class="arrowsign">Click to Expand</span>
   <p class="tprice">Your Bundle: {{ bundle.content.price | money }}
   </p></div>   

  </div>
________________________________________________________________________________________________________________________________________________
Very important Ruby code: Shopify plus plan: we can make changes in checkout page functionality using Ruby code as well such as Shipping, Discounts etc.
Here is link of examples of script code https://help.shopify.com/en/manual/checkout-settings/script-editor/examples/shipping-scripts
Note: These scripts only run in Shopify plus account and it needs to install Script Editor "Scripts and the Script Editor " app on store in which we can create new scripts according to use.

Here is an example of code that I customized to restrict the shipping for certain postcodes using this Ruby code. and it works very well. When we fill the address and postcode in shipping address at checkout. The output of this script is shown at next step when we contine to select shipping method.
we can also edit the message that shows like "Currently shipping is not available at your location." by going to Themes>select the developing theme>Action>Edit language
----------------------------------------------------------------------------------------------------------
# ================================ Customizable Settings ================================
# ================================================================
# Hide Rate(s) for Zip/Province/Country
#
# If the cart's shipping address country/province/zip match the
# entered settings, the entered rate(s) are hidden.
#
#   - 'country_code' is a 2-character abbreviation for the
#     applicable country or region
#   - 'province_code' is a list of 2-character abbreviations for
#     the applicable provinces or states
#   - 'zip_code_match_type' determines whether the below strings
#     should be an exact or partial match. Can be:
#       - ':exact' for an exact match
#       - ':partial' for a partial match
#   - 'zip_codes' is a list of strings to identify zip codes
#   - 'rate_match_type' determines whether the below strings
#     should be an exact or partial match. Can be:
#       - ':exact' for an exact match
#       - ':partial' for a partial match
#       - ':all' for all rates
#   - 'rate_names' is a list of strings to identify rates
#     - if using ':all' above, this can be set to 'nil'
# ================================================================
HIDE_RATES_FOR_ZIP_PROVINCE_COUNTRY = [
  {
    country_code: "GB",
    province_code_match_type: :all,
    zip_code_match_type: :partial,
    zip_codes: ["BT","IM","PO30","PO31","PO32","PO33","PO34","PO35","PO36","PO37","PO38","PO39","PO40","PO41","TR21","AB31","AB32","AB33","AB34","AB35","AB41","AB42","AB43","AB44","AB45","AB46","AB47","AB48","AB49","AB51","AB52","AB53","AB54","AB36","AB37","AB38","AB55","AB56","FK17","FK18","FK19","FK20","FK21","GY9","GY10","HS1","HS2","HS3","HS4","HS5","HS6","HS7","HS8","HS9","IV1","IV2","IV3","IV4","IV5","IV6","IV7","IV8","IV9","IV10","IV11","IV12","IV13","IV14","IV15","IV16","IV17","IV18","IV19","IV20","IV21","IV22","IV23","IV24","IV25","IV26","IV27","IV28","IV29","IV30","IV31","IV32","IV33","IV34","IV35","IV36","IV37","IV38","IV39","IV40","IV41","IV42","IV43","IV44","IV45","IV46","IV47","IV48","IV49","IV50","IV51","IV52","IV53","IV54","IV55","IV56","IV57","IV58","IV59","IV60","IV61","IV62","IV63","KA27","KA28","KW0","KW1","KW2","KW3","KW4","KW5","KW6","KW7","KW8","KW9","KW10","KW11","KW12","KW13","KW14","KW15","KW16","KW17","PA20","PA21","PA22","PA23","PA24","PA25","PA26","PA27","PA28","PA29","PA30","PA31","PA32","PA33","PA34","PA35","PA36","PA37","PA38","PA39","PA40","PA41","PA42","PA43","PA44","PA45","PA46","PA47","PA48","PA49","PA50","PA51","PA52","PA53","PA54","PA55","PA56","PA57","PA58","PA59","PA60","PA61","PA62","PA63","PA64","PA65","PA66","PA67","PA68","PA69","PA70","PA71","PA72","PA73","PA74","PA75","PA76","PA77","PA78","PH15","PH16","PH17","PH18","PH19","PH20","PH21","PH22","PH23","PH24","PH25","PH26","PH27","PH28","PH29","PH32","PH33","PH45","PH46","PH47","PH48","PH30","PH31","PH34","PH35","PH36","PH37","PH38","PH39","PH40","PH41","PH42","PH43","PH44","PH49","PH50","ZE1","ZE2","ZE3"],
    rate_match_type: :all,
  },
]
# ================================ Script Code (do not edit) ===============================
# ================================================================
# ProvinceSelector
#
# Finds whether the supplied province code matches the entered
# strings.
# ================================================================
class ProvinceSelector
  def initialize(match_type, provinces)
    @match_type = match_type
    @provinces = provinces.map { |province| province.upcase.strip }
  end

  def match?(province_code)
    if @match_type == :all
      true
    else
      (@match_type == :include) == @provinces.any? { |province| province_code.upcase.strip == province }
    end
  end
end
# ================================ Script Code (do not edit) ================================
# ================================================================
# ZipCodeSelector
#
# Finds whether the supplied zip code matches any of the entered
# strings.
# ================================================================
class ZipCodeSelector
  def initialize(match_type, zip_codes)
    @comparator = match_type == :exact ? '==' : 'include?'
    @zip_codes = zip_codes.map { |zip_code| zip_code.upcase.strip }
  end

  def match?(zip_code)
    @zip_codes.any? { |zip| zip_code.to_s.upcase.strip.send(@comparator, zip) }
  end
end

# ================================================================
# RateNameSelector
#
# Finds whether the supplied rate name matches any of the entered
# names.
# ================================================================
class RateNameSelector
  def initialize(match_type, rate_names)
    @match_type = match_type
    @comparator = match_type == :exact ? '==' : 'include?'
    @rate_names = rate_names&.map { |rate_name| rate_name.downcase.strip }
  end

  def match?(shipping_rate)
    if @match_type == :all
      true
    else
      @rate_names.any? { |name| shipping_rate.name.downcase.send(@comparator, name) }
    end
  end
end

# ================================================================
# HideRatesForZipProvinceCountryCampaign
#
# If the cart's shipping address zip/province/country match the
# entered settings, the entered rate(s) are hidden.
# ================================================================
class HideRatesForZipProvinceCountryCampaign
  def initialize(campaigns)
    @campaigns = campaigns
  end

  def run(cart, shipping_rates)
    address = cart.shipping_address

    return if address.nil?

    @campaigns.each do |campaign|
      zip_code_selector = ZipCodeSelector.new(campaign[:zip_code_match_type], campaign[:zip_codes])

      country_match =  address.country_code.upcase.strip == campaign[:country_code].upcase.strip
      zip_match = zip_code_selector.match?(address.zip)

      next unless zip_match

      rate_name_selector = RateNameSelector.new(campaign[:rate_match_type], campaign[:rate_names])

      shipping_rates.delete_if do |shipping_rate|
        rate_name_selector.match?(shipping_rate)
      end
    end
  end
end

CAMPAIGNS = [
  HideRatesForZipProvinceCountryCampaign.new(HIDE_RATES_FOR_ZIP_PROVINCE_COUNTRY),
]

CAMPAIGNS.each do |campaign|
  campaign.run(Input.cart, Input.shipping_rates)
end

Output.shipping_rates = Input.shipping_rates
-----------------------------------------------------------------------------
Change product variants by clicking product images on product page.
Just add following js code at the bottom of theme.js file or in product template.
I had added in product template as below and it was working fine there.
-------------------------
<script>
const selectVariantByClickingImage = {
  // Create variant images from productJson object
  _createVariantImage: function (product) {
    const variantImageObject = {};
    product.variants.forEach((variant) => {
      if (
        typeof variant.featured_image !== 'undefined' &&
        variant.featured_image !== null
      ) {
        const variantImage = variant.featured_image.src
          .split('?')[0]
          .replace(/http(s)?:/, '');
        variantImageObject[variantImage] =
          variantImageObject[variantImage] || {};
        product.options.forEach((option, index) => {
          const optionValue = variant.options[index];
          const optionKey = `option-${index}`;
          if (
            typeof variantImageObject[variantImage][optionKey] === 'undefined'
          ) {
            variantImageObject[variantImage][optionKey] = optionValue;
          } else {
            const oldValue = variantImageObject[variantImage][optionKey];
            if (oldValue !== null && oldValue !== optionValue) {
              variantImageObject[variantImage][optionKey] = null;
            }
          }
        });
      }
    });
    return variantImageObject;
  },
  _updateVariant: function (event, id, product, variantImages) {
    const arrImage = event.target.src
      .split('?')[0]
      .replace(/http(s)?:/, '')
      .split('.');
    const strExtention = arrImage.pop();
    const strRemaining = arrImage.pop().replace(/_[a-zA-Z0-9@]+$/, '');
    const strNewImage = `${arrImage.join('.')}.${strRemaining}.${strExtention}`;
    if (typeof variantImages[strNewImage] !== 'undefined') {
      product.variants.forEach((option, index) => {
        const optionValue = variantImages[strNewImage][`option-${index}`];
        if (optionValue !== null && optionValue !== undefined) {
          const selects = document.querySelectorAll('#'+ id + ' [class*=single-option-selector]');
          const options = selects[index].options;
          for (let option, n = 0; (option = options[n]); n += 1) {
            if (option.value === optionValue) {
              selects[index].selectedIndex = n;
              selects[index].dispatchEvent(new Event('change'));
              break;
            }
          }
        }
      });
    }
  },
  _selectVariant: function() {
    const productJson = document.querySelectorAll('[id^=ProductJson-');
    if (productJson.length > 0) {
      productJson.forEach((product) => {
        const sectionId = product.id.replace("ProductJson-", "shopify-section-");
        const thumbnails = document.querySelectorAll('#'+ sectionId + ' img[src*="/products/"]');
        if (thumbnails.length > 1) {
          const productObject = JSON.parse(product.innerHTML);
          const variantImages = this._createVariantImage(productObject);
          // need to check variants > 1
          if (productObject.variants.length > 1) {
            thumbnails.forEach((thumbnail) => {
              thumbnail.addEventListener('click', (e) =>
                this._updateVariant(e, sectionId, productObject, variantImages),
              );
            });
          }
        }
      });
    }
  },
};
if (document.readyState !== 'loading') {
  selectVariantByClickingImage._selectVariant();
} else {
  document.addEventListener(
    'DOMContentLoaded',
    selectVariantByClickingImage._selectVariant(),
  );
}
</script>
---------------------------------------------------
To change variants by swiping product images on mobile devices, I had used the following logic. it will automatically update variant in half second according to current image.
we can add varianttitle attribute to variant dropdown for easily selecting purpose.
------
$(document).ready(function(){
setInterval(function(){ 
var v = $(".is-active").attr('data-slick-index');
$('#SingleOptionSelector-0').prop("selectedIndex", v).change();
var option1 = $('#SingleOptionSelector-0 :selected').val();  
var option2 = $('#SingleOptionSelector-1 :selected').val();    
var combineoptons = option1+" / "+option2;
$("#ProductSelect-product-template").varianttitle(combineoptons).change();
}, 500);   
});
----------------



__________________________________________________________________________________________________________________________________________
Shopiyf orders to Googlesheet: Note, once one url of csv fetched, google creates cache of it, so Always try to fetch new url.
We can put orders directly to Googlesheet by creating custom script in Googlesheet. To do so, we need to create web page with script to create a CSV file of each day orders on any hosting server and make it trigger with Shopify Webhook.
Then we will import orders files each day using following script. we can automate importing by creating timer trigger in script editor of googlesheet. script editor can be find under tools menu in googlesheet.
------------------------------------------------------
function importCSVFromWeb(url) {
var dateY = new Date ();
dateY. setDate (dateY. getDate ()-1);
var yesterday = Utilities. formatDate (dateY, "GMT-1", "dd-MM-yyyy");
  var csvUrl = "https://37degs.com/fborders/data/"+yesterday+".csv";
  var csvContent = UrlFetchApp.fetch(csvUrl).getContentText();
  Logger.log(csvContent); // log for debugging, if used interactively
  var csvData = Utilities.parseCsv(csvContent);
  if (!csvData || !(csvData.length)) {
      MailApp.sendEmail('you', 'error report', 'could not parse data ' + csvContent); 
  }   // emailing bug report  
  var sheet = SpreadsheetApp.getActive();
 // var sheet = SpreadsheetApp.getActiveSheet().getSheetByName('Fatbutcher-orders-sheet');
 
 var ss = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
 var LR = ss.getLastRow();
 var rows = csvData.length;
 var columns = csvData[0].length;
ss.getRange(2, 1, rows, columns).insertCells(SpreadsheetApp.Dimension.ROWS).setValues(csvData);
}
----------------------------------------------------------------------------------------------------------------------------
Script for webpage to create csv file of each day in "data" folder:

<?php
//Fetching shopify orders
$upto  = date('Y-m-d', strtotime('+1 days'));
$formatted = $days_ago = date('Y-m-d');
 /*API Call to Shopify*/
$orderUrl ="https://375faddcf47a47244d21c517f306e87a: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@the-fat-butcher-delivery.myshopify.com/admin/orders.json?limit=250&created_at_min=".$formatted;
  // Get cURL resource
	$curl = curl_init();
	// Set some options - we are passing in a useragent too here
	curl_setopt_array($curl, array(
	CURLOPT_RETURNTRANSFER => 1,
	CURLOPT_URL => 'https://375faddcf47a47244d21c517f306e87a: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@the-fat-butcher-delivery.myshopify.com/admin/orders.json?limit=250&created_at_min='.$formatted,
	CURLOPT_USERAGENT => 'Codular Sample cURL Request'
	));
	// Send the request & save response to $defaultresponse
	$defaultresponse = curl_exec($curl);
//$csv = "Order ID,Date,Customer Name,Customer Email,Customer Phone,Products,Amount,Remark1,Remark2,Remark3,Remark4\n";//Column headers

    
	$jsondecodedresponse = json_decode($defaultresponse);
	$new=array();
    foreach($jsondecodedresponse as $usableresponse){
    echo"<pre>";
	//print_r($usableresponse);
	echo"</pre>";
	foreach($usableresponse as $firstlevel){
	echo"<pre>";
	print_r($firstlevel);
	echo"</pre>";
    $line_items=$firstlevel->line_items;
    $product_titles=array();
foreach($line_items as $line_items_data){
	array_push($product_titles,$line_items_data->title);
}
    $producttitles = implode("-", $product_titles);
    $customer=$firstlevel->customer;	
	foreach($customer as $customerdata){
	$customer_id = $customerdata->customer_id; 
	$customer_phone = $customerdata->phone; 
    $customer_name = $customerdata->first_name.' '.$customerdata->last_name;
}
$csv.= $firstlevel->name.','.$firstlevel->created_at.','.$customer_name.','.$firstlevel->email.','.$customer_phone.','.$producttitles.','.$firstlevel->total_price.",,,,\n";

 //Append data to csv
$file_name = 'data/'.date('d-m-Y').'.csv';
$csv_handler = fopen ($file_name,'w');
fwrite ($csv_handler,$csv);
fclose ($csv_handler);
	 
		
	}
 }
exit;
?>

___________________________________________________________________________________________
Vimeo video embed code: Without any controls, we can play sound by making "muted:0" but it will not then auto play in iphone. we can use background image to display untill video not loads.

<div class="innerwidth">
<div class="vimeowrapper">
<iframe src="https://player.vimeo.com/video/554551894?autoplay=1&loop=1&color=f47920&title=0&byline=0&portrait=0&background=1&muted=1" style="position:absolute;top:0;left:0;width:100%;height:100%;" frameborder="0" allow="autoplay; fullscreen; picture-in-picture" allowfullscreen></iframe></div></div>
<script src="https://player.vimeo.com/api/player.js"></script>
<style>
.vimeowrapper {
    padding: 56.25% 0 0 0;
    position: relative;
    float: left;
    width: 100%;
    margin-top: 30px;
    background-image: url(https://cdn.shopify.com/s/files/1/0505/0145/1925/files/ecoxgear.jpg?v=1623401332);
    background-position: center center;
    background-size: contain;
}
</style>
__________________________________________________________________________________________________________________
Custom popup to display iphone app download link for iphone and android app download link on android phone. 
Also jquery is added to show it once in one hour. cookie's expiry date is set to one hour.
section code:
-----------
<script>
$(document).ready(function () {
$('.close-popup').click(function(){
    $('#popupcontainer').hide();
}); 
/**
 * Determine the mobile operating system.
 * This function returns one of 'iOS', 'Android', 'Windows Phone', or 'unknown'.
 *
 * @returns {String}
 */
function getMobileOperatingSystem() {
    var userAgent = navigator.userAgent || navigator.vendor || window.opera;
    if (/android/i.test(userAgent)) {
      $('.androidapp').show();
      $('#popupcontainer').show();
    }

    // iOS detection from: http://stackoverflow.com/a/9039885/177710
    if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {
        $('.iphoneapp').show();
        $('#popupcontainer').show();
    }

    return "unknown";
} 
//Cookie code to display popup only once in one hour
if (document.cookie.indexOf("popup_is_displayed") > -1 ) {
   //alert( "popup_is_on Text found" );
}else{
   //alert( "not found" );
getMobileOperatingSystem(); 
var now = new Date();
var time = now.getTime();
var value = "popup_is_displayed";  
time += 3600 * 1000;
now.setTime(time);
document.cookie = 'checkpopup=' + value + '; expires=' + now.toUTCString() + '; path=/';
}          
});
<script>
<style>
#popupcontainer{position:fixed;top:50%;left:50%;transform:translate(-50%,-50%);width:320px;z-index:999;text-align:center;color:#fff}.crosssign{position:absolute;top:20px;right:15px;color:#c85440;cursor:pointer;background:#fff;width:30px;border-radius:20px;height:30px;font-size:25px;line-height:27px}.bottompopup{position:relative}.box{background:#fff;width:220px;height:120px;margin:0 auto;position:absolute;top:0;left:50%;transform:translate(-50%,-50%);box-shadow:rgb(14 30 37 / 12%) 0 2px 4px 0,rgb(14 30 37 / 32%) 0 2px 16px 0;border-radius:5px}p.text3{bottom:105px;position:absolute;font-size:12px;line-height:18px;font-weight:700;left:0;right:0;margin:0 10px}p.toptext{margin:0;font-size:18px;width:275px;text-align:left;text-transform:uppercase;font-weight:700}.box img{width:90px;margin-top:10px}.upperpopup{background-image:url(https://cdn.shopify.com/s/files/1/0299/3350/2563/files/popupimage.jpg?v=1625295677);height:300px;background-size:contain;background-position:bottom;position:relative;background-repeat:no-repeat;padding:20px}.bottompopup{position:relative;color:#c85440;height:100px;padding:10px;background:rgba(0,0,0,.7)}p.centertext{position:absolute;bottom:102px;text-align:center;width:86%;background:#fff;color:#c85440;left:0;right:0;margin:auto;font-weight:700;font-size:14px}img.bottomimg{width:160px;position:absolute;bottom:45px;left:0;right:0;margin:auto}p.nothanks{position:absolute;bottom:10px;left:0;right:0;margin:auto;font-size:10px;font-weight:700;cursor:pointer}.halfis{width:50%;float:left}p.available{font-size:12px;margin-top:10px}  
</style>
{% if section.settings.ispopup %}
<div id="popupcontainer" style="display:none">
<div id="exampleModal" class="reveal-modal">
<div class="upperpopup">
<p class="toptext">Want more seamless experience</p>  
<p class="centertext">THE APP-EXCLUSIVE OFFERS</p>   
  </div>
<div class="bottompopup">
<div class="box"><img src="https://cdn.shopify.com/s/files/1/0299/3350/2563/files/fatbutcherlogo_47fc8ae5-9343-4630-bbae-1dc15ce199c6.png?v=1625295694">
<div class="innerbox">
  <p class="available halfis">AVAILABLE ON</p>
<a href="https://play.google.com/store/apps/details?id=co.shopney.thefatbutcher" style="display:none" class="androidapp"><img class="boximg halfis" src="https://cdn.shopify.com/s/files/1/0299/3350/2563/files/Layer_4.png?v=1625301289"></a> 
<a href="https://apps.apple.com/gb/app/the-fat-butcher/id1573780515" style="display:none" class="iphoneapp"><img class="boximg halfis" src="https://cdn.shopify.com/s/files/1/0299/3350/2563/files/Layer_2.png?v=1625306088"></a> 
  </div>  
   </div> 
 </div>
<span class="crosssign close-popup">×</span>
</div>
</div>
{% endif %}

{% schema %}
  {
    "name": "Download Mobile App",
    "settings": [
{
"type": "checkbox",
"id": "ispopup",
"label": "Display Popup",
"default": false
}
]
  }
{% endschema %}
----------------------
__________________________________________________________________________________________________________________________________________________________________________
SSL:
To add SSL, we need it to purchase from server such as from Godaddy, SSL are purchased either single domain only or for multiple domains. once we purchased SSL, A SSL option will start displaying under My products option of Godaddy.
Then we will have to click on it, then next, we need to select the domain for which we want to generate SSL certificate, then generate the certificate. After that we will have to go to cpanel of hosting, where we will need to open SSL/TLS setttings. Then under these setting we will have connect the certificate (Already genrated certificate will show there) with that hosting domain. thats all.
Actually we will have to generate the certificate first and then upload/install it to hosting SSL settings.

__________________________________________________________________________________________________________________________________________________________________________
Running Ajax code:
------------
<div id="form-msg">
    
</div>

<script>
    jQuery('#mySub').click(function() {
       jQuery.ajax({
      type: 'POST',
      url: "https://app.picsflow.com/auth/web_register_account",
      data: {email:jQuery('#form-field-email').val(),
	         password:jQuery('#form-field-password').val(),
			 first_name:jQuery('#form-field-first_name').val(),
			 last_name:jQuery('#form-field-last_name').val()
	  
	  
	  },
      dataType: "json",
      success: function(resultData) {
       if(resultData.status)
          {
             window.location.href  = 'https://picsflow.com/thank-you'
          }
          else
          {
             var msgColor = (resultData.status)?'green':'red';
      
      jQuery('#form-msg').html(resultData.response);
      jQuery('#form-msg p').css('color',msgColor);  
          }
          
          
      }
});  
    });
</script>
__________________________________________________________________________________________________________
metafields:

{% if product.metafields.my_fields.product_banner_image != blank %}
<div class="landscapesection">
<div class="fullwidthimage bottomimage"><img alt="" src="{{ product.metafields.my_fields.product_banner_image | file_url }}"></div>
</div>
{% endif %}

{% if product.metafields.my_fields.product_youtube_video_id != blank %}
<div class="landscapesection">
<div class="iframecontainer">
<iframe src="//www.youtube.com/embed/{{ product.metafields.my_fields.product_youtube_video_id }}?rel=0" frameborder="0" allowfullscreen class="video"></iframe>
</div>
</div>
{% endif %}
__________________________________________________________________________________________________________
Use this css to remove the default css styling of iphone devices and browsers to select box.
.styled-select select {
    -moz-appearance:none; /* Firefox */
    -webkit-appearance:none; /* Safari and Chrome */
    appearance:none;
}
_________________________________________________________________________________________________________________________
Sometime when we use float left css. then the below div becomes misplaced. To fix it. just create a blank div under the div we applied float left. that will fix the issue.
<div style="clear:both;width:100%;display:block;"></div>

_________________________________________________________________________________________________________
useful css for collection page images.
img.snize-item-image {
    max-height: 145px !important;
    width: 100% !important;
    object-fit: fill;
    object-position: top center;
    vertical-align: bottom!important;
    height: auto;
}
_________________________________________________________________________________________________________
Speed optimization mehtod: Lazyload2 and Critical2. I found this method from a theme that was optimized by other Develper. This method lazy loads all the script files and make the css files to laod differnently for mobile and desktop devices.

In this method we can get speed over 90 easily. All we have to include a wnw-optimization js file at bottom(under </html>) of theme.liquid file. 
Then we will have to update script and style tags as follows.

we will have to add type="lazyload2" to all script tags and type="lazyload2" data-src="" to all script links. examples are as follow.
Script Link: use type='lazyload2' and data-src attributes in script links as below.
<script type="lazyload2" data-src="https://www.googleoptimize.com/optimize.js?XXXXXXXXXX"></script>

Script tag:
<script type="lazyload2">
//code
</script>

For style we will have to create a snippet such as "theme-style.liquid". Then open the style.css file of theme from frontend of theme by inspecting browser. Don't minify the style.css file by copying it from assets folder of theme as it contains dynamic code that will not be minified properly. Then copy all that css and minfiy it using website to minfiy css. Then put all minified css to "theme-style.liquid" snippet and enclose it in style tag with critical2 class. 
Example of snippet file code:- <style class="critical2">#shopify-section-static-header a.navmenu-link,#shopify-section-static-header summary.navmenu-link {font-weight: bold!important;}.price--varies span.price--label {display: none;}#shopify-section-static-header .site-navigation .navmenu-depth-2 .navmenu-link {padding: 0.4375rem 1rem 0.4375rem 1.5625rem;}</style>

Note, if style.css file is too long, then shopify will not let us all css in one snippet file as there is a size limit for snippet. To figure it out we can create two snippets and divide the style.css minified code in both.
Then following is a theme.liquid example of how data will be organised to increase speed. Use lazyload2 type to all App scripts and third party scripts in theme.liquid file.

Note, if you are doing speed optimization on unpublished theme, then don't copy the direct link of preview theme from shopify backend and paste it in google insight. it will not work, infact it will display the result of live theme.
so to test the duplicate theme, go to front end preview of unpublished theme and copy the share view link from bottom bar. that link will display the result of that unpublished theme.
..............................................................
==========start of theme.liquid file ========
<!doctype html>
<html class="no-js" lang="{{ shop.locale }}">
<head>
{%- render 'theme-style.liquid' -%}
<link rel="stylesheet" data-href="{{ 'theme.scss.css' | asset_url }}">  
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <meta name="theme-color" content="{{ settings.color_button }}">
  <link rel="canonical" href="{{ canonical_url }}">

  {%- if settings.favicon != blank -%}
    <link rel="shortcut icon" href="{{ settings.favicon | img_url: '32x32' }}" type="image/png">
  {%- endif -%}

  <title>{{ seo_title | strip }}</title>

  {%- if page_description -%}
    <meta name="description" content="{{ page_description | escape }}">
  {%- endif -%}

  {% include 'social-meta-tags' %}

  <script type="lazyload2">
    var theme = {
      strings: {
        addToCart: {{ 'products.product.add_to_cart' | t | json }},
        soldOut: {{ 'products.product.sold_out' | t | json }},
        unavailable: {{ 'products.product.unavailable' | t | json }},
        regularPrice: {{ 'products.product.regular_price' | t | json }},
        sale: {{ 'products.product.on_sale' | t | json }},
        showMore: {{ 'general.filters.show_more' | t | json }},
        showLess: {{ 'general.filters.show_less' | t | json }},
        addressError: {{ 'sections.map.address_error' | t | json }},
        addressNoResults: {{ 'sections.map.address_no_results' | t | json }},
        addressQueryLimit: {{ 'sections.map.address_query_limit_html' | t | json }},
        authError: {{ 'sections.map.auth_error_html' | t | json }},
        newWindow: {{ 'general.accessibility.link_messages.new_window' | t | json }},
        external: {{ 'general.accessibility.link_messages.external' | t | json }},
        newWindowExternal: {{ 'general.accessibility.link_messages.new_window_and_external' | t | json }}
      },
      moneyFormat: {{ shop.money_format | json }}
    }

    document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
  </script>


  {%- if template.directory == 'customers' -%}
    <script type="lazyload2" data-src="{{ 'shopify_common.js' | shopify_asset_url }}" defer="defer"></script>
  {%- endif -%}

  <script type="lazyload2" data-src="{{ 'lazysizes.js' | asset_url }}" async="async"></script>
  <script type="lazyload2" data-src="{{ 'vendor.js' | asset_url }}" defer="defer"></script>
  <script type="lazyload2" data-src="{{ 'theme.js' | asset_url }}" defer="defer"></script>

{%- if request.host == "sleep-galleria.myshopify.com" or template contains 'product' or template contains 'cart' or template contains 'checkout' -%}
{{ content_for_header }}
{%- else -%}
{% capture content_for_header2 %}{{ content_for_header }}{% endcapture %}
{{ content_for_header2 | replace: ' defer="defer" ', ' type="lazyload2" ' | replace: " src=", " data-src=" | replace: "window.addEventListener('load', asyncLoad, false);", "window.addEventListener('wnw_load', asyncLoad, false);" | replace: "DOMContentLoaded", "DOMContentLoaded2" }}
{%- endif -%}
  
</head>

<body class="template-{{ template | split: '.' | first }}">

  <a class="in-page-link visually-hidden skip-link" href="#MainContent">{{ 'general.accessibility.skip_to_content' | t }}</a>

  <div id="SearchDrawer" class="search-bar drawer drawer--top" role="dialog" aria-modal="true" aria-label="{{ 'general.search.placeholder' | t }}">
    <div class="search-bar__table">
      <div class="search-bar__table-cell search-bar__form-wrapper">
        <form class="search search-bar__form" action="/search" method="get" role="search">
          <input class="search__input search-bar__input" type="search" name="q" value="{{ search.terms | escape }}" placeholder="{{ 'general.search.placeholder' | t }}" aria-label="{{ 'general.search.placeholder' | t }}">
          <button class="search-bar__submit search__submit btn--link" type="submit">
            {% include 'icon-search' %}
            <span class="icon__fallback-text">{{ 'general.search.submit' | t }}</span>
          </button>
        </form>
      </div>
      <div class="search-bar__table-cell text-right">
        <button type="button" class="btn--link search-bar__close js-drawer-close">
          {% include 'icon-close' %}
          <span class="icon__fallback-text">{{ 'general.search.close' | t }}</span>
        </button>
      </div>
    </div>
  </div>

  {% section 'header' %}
{% section 'main-search' %}{% section 'predictive-search' %}
  <div class="page-container" id="PageContainer">

    <main class="main-content js-focus-hidden" id="MainContent" role="main" tabindex="-1">
      {{ content_for_layout }}
    </main>

    {% section 'footer' %}

    <div id="slideshow-info" class="visually-hidden" aria-hidden="true">
      {{- 'sections.slideshow.navigation_instructions' | t -}}
    </div>

  </div>

  <ul hidden>
    <li id="a11y-refresh-page-message">{{ 'general.accessibility.refresh_page' | t }}</li>
  </ul>


</body>
</html>
<script type="lazyload2">
  gtag('event', 'page_view', {
    'send_to': 'xxxxxxxxxx',
	'ecomm_pagetype': '{% if template contains 'collection' %}category{% elsif template contains 'product' %}product{% elsif template contains 'search' %}{% elsif template contains 'index' %}home{% endif %}',
	{% if template contains 'product' %}
	'ecomm_prodid': 'shopify_US_{{ product.id }}_{% if product.variants.first.id %}{{ product.variants.first.id }}',{% else %}{{ product.variants.id }}',{% endif %}
	{% endif %}
	{% if template contains 'product' %}'ecomm_totalvalue': {{ product.price_min | money_without_currency | remove:',' }}{% endif %}
  });
</script>  
<script type="lazyload2" data-src="https://www.googleoptimize.com/optimize.js?id=xxxxxxxxxx"></script>

<!-- Affirm -->
<script type="lazyload2">
 _affirm_config = {
   public_api_key:  "xxxxxxxxxxxxx",
   script:          "https://cdn1.affirm.com/js/v2/affirm.js",
   session_id:      "YOUR_VISITOR_SESSION_ID"
};
(function(l,g,m,e,a,f,b){var d,c=l[m]||{},h=document.createElement(f),n=document.getElementsByTagName(f)[0],k=function(a,b,c){return function(){a[b]._.push([c,arguments])}};c[e]=k(c,e,"set");d=c[e];c[a]={};c[a]._=[];d._=[];c[a][b]=k(c,a,b);a=0;for(b="set add save post open empty reset on off trigger ready setProduct".split(" ");a<b.length;a++)d[b[a]]=k(c,e,b[a]);a=0;for(b=["get","token","url","items"];a<b.length;a++)d[b[a]]=function(){};h.async=!0;h.src=g[f];n.parentNode.insertBefore(h,n);delete g[f];d(g);l[m]=c})(window,_affirm_config,"affirm","checkout","ui","script","ready");
// Use your live public API Key and https://cdn1.affirm.com/js/v2/affirm.js script to point to Affirm production environment.
 </script>
<!-- End Affirm -->
<script  type="lazyload2" data-src="https://node1.itoris.com/dpo/storefront/include.js?shop=xxxxxxxxxx"></script>

{{ 'wnw-optimization.js' | asset_url | script_tag }}
==========end of theme.liquid file ========
...........................................................................................................
Here is a code of "wnw-optimization.js" file. copy it and create a file in asset, put this code and add it at bottom of theme.liquid page.

==========start of wnw-optimization.js file ========
var _0x27db89=_0x318f;!function(t,e){for(var n=_0x318f,i=_0x21bd();;)try{if(723622===parseInt(n(179))/1+parseInt(n(188))/2+-parseInt(n(199))/3+parseInt(n(206))/4+-parseInt(n(165))/5*(-parseInt(n(204))/6)+-parseInt(n(163))/7+-parseInt(n(148))/8*(-parseInt(n(190))/9))break;i.push(i.shift())}catch(t){i.push(i.shift())}}();var src,srcset,windowWidth,windowHeight,critical2,lazyBackground,lazyIframe,lazybg,s,i,flag=1,external_single_loaded=1;function wnw_init(){var t=_0x318f;lazyLoadImg(),lazyLoadBackground(),lazyLoadStyle(),lazyLoadCss(),lazyLoadIframe(),flag&&(flag=0,document[t(184)].classList.add(t(158)),load_all_js())}function insertAfter(t,e){var n=_0x318f;e[n(185)][n(156)](t,e.nextSibling)}function lazyLoadImg(){var t=_0x318f,e=document[t(153)](t(193));for(i=0;i<e[t(160)];i++)src=windowWidth<600?void 0===e[i][t(139)][t(152)]?e[i][t(139)][t(149)]:e[i][t(139)].mobsrc:void 0===e[i][t(139)].src?e[i].src:e[i][t(139)].src,srcset=e[i][t(200)](t(182))?e[i][t(200)](t(182)):"",null!=src&&""!=src&&(e[i][t(149)]=src),null!=srcset&&""!=srcset&&(e[i][t(147)]=srcset),e[i][t(162)][t(171)](t(178))}function lazyLoadImg2(){var t=_0x318f,e=document[t(153)](t(193));for(i=0;i<e[t(160)];i++){var n=e[i].getBoundingClientRect();0!=n.top&&n[t(166)]-windowHeight&&(src=windowWidth<600?void 0===e[i][t(139)][t(152)]?e[i][t(139)][t(149)]:e[i][t(139)][t(152)]:void 0===e[i][t(139)][t(149)]?e[i][t(149)]:e[i][t(139)][t(149)],srcset=e[i][t(200)]("data-srcset")?e[i][t(200)]("data-srcset"):"",null!=src&&""!=src&&(e[i][t(149)]=src),null!=srcset&&""!=srcset&&(e[i].srcset=srcset),e[i][t(162)][t(171)](t(178)))}}function lazyLoadBackground(){var t=_0x318f;(lazyBackground=document.querySelectorAll(t(145)))[t(138)](function(e){var n=t;null!=(lazybg=windowWidth<600?void 0===e.dataset.mobstyle?e[n(139)][n(155)]:e.dataset[n(196)]:void 0===e[n(139)][n(155)]?e.style:e.dataset.style)&&""!=lazybg&&(e[n(155)]=lazybg),e[n(162)][n(171)](n(194))})}function lazyLoadBackground2(){var t=_0x318f;(lazyBackground=document[t(153)](t(145))).forEach(function(e){var n=t,i=e.getBoundingClientRect();0!=i[n(166)]&&i.top-windowHeight&&(null!=(lazybg=windowWidth<600?void 0===e[n(139)][n(196)]?e[n(139)][n(155)]:e[n(139)][n(196)]:void 0===e.dataset[n(155)]?e.style:e[n(139)][n(155)])&&""!=lazybg&&(e[n(155)]=lazybg),e[n(162)].remove("lazybg"))})}function lazyLoadCss(){var t=_0x318f,e=document.querySelectorAll("link[data-href]");for(i=0;i<e.length;i++){var n=document.createElement(t(161));n.href=e[i][t(200)](t(205)),n[t(173)]=t(168),e[i][t(185)][t(156)](n,e[i]),delete e[i][t(139)][t(191)],e[i].parentNode[t(183)](e[i])}}function lazyLoadStyle(){var t=_0x318f,e=document[t(153)](t(157));for(i=0;i<e[t(160)];i++){var n=document[t(151)](t(155));n[t(172)]=e[i].innerHTML,e[i][t(185)].insertBefore(n,e[i]),e[i][t(185)][t(183)](e[i])}}function _0x21bd(){var t=["data-srcset","removeChild","body","parentNode","nodeValue","onerror","455510GyeiWD","touchstart","2232XbZYxX","href","DOMContentLoaded2","img.lazy2","lazybg","scroll","mobstyle","width","dispatchEvent","2341053VZggxg","getAttribute","platform","onload","Yes-optimization","9654WUusfC","data-href","2322864kHwNGZ","forEach","dataset","data-src","addEventListener",".critical2","Linux x86_64","indexOf",".lazybg","location","srcset","29928UuPUTS","src","iframe","createElement","mobsrc","querySelectorAll","Event","style","insertBefore","style[type=lazyload2]","wnw_loaded","wnw_load","length","link","classList","9554167Halbon","log","2330IjGYYf","top","DOMContentLoaded","stylesheet","checkout","mousemove","remove","innerHTML","rel","name","attributes","sleep-galleria.myshopify.com","initEvent","lazy2","382821TVfpNG","type","nodeName"];return(_0x21bd=function(){return t})()}function lazyLoadIframe(){var t=_0x318f;(lazyIframe=document[t(153)](t(150)))[t(138)](function(e){var n=t;null!=e[n(139)].src&&""!=e.dataset.src&&(e[n(149)]=e[n(139)][n(149)],delete e[n(139)].src)})}function w3_load_js_uri(t){var e=_0x318f,n=document.createElement("script");if(void 0!==t[e(175)])for(var i,a=0,o=t[e(175)],r=o[e(160)];a<r;a++)e(140)!=(i=o[a])[e(181)]&&"type"!=i[e(181)]&&n.setAttribute(i[e(181)],i[e(186)]);return n[e(149)]=t[e(200)](e(140)),insertAfter(n,t),delete t[e(139)][e(149)],delete t[e(180)],t.parentNode[e(183)](t),n}function w3_load_inline_js_single(t){var e=_0x318f;if(!external_single_loaded)return setTimeout(function(){w3_load_inline_js_single(t)},200),!1;s=document[e(151)]("script");for(var n=0;n<t[e(175)].length;n++){var i=t[e(175)][n];"type"!=i[e(174)]&&s.setAttribute(i.name,i.value)}s.innerHTML=t.innerHTML,insertAfter(s,t),t[e(185)][e(183)](t)}function lazyLoadScripts(){var t=_0x318f,e=document[t(153)]("script[type=lazyload2]");if(!(e[t(160)]<1))if(null!==e[0][t(200)]("data-src")){var n=w3_load_js_uri(e[0]);n[t(202)]=function(){lazyLoadScripts()},n[t(187)]=function(){lazyLoadScripts()}}else w3_load_inline_js_single(e[0]),lazyLoadScripts()}function load_all_js(){var t=_0x318f;window[t(146)][t(191)][t(144)](t(176))>-1||window[t(146)].href[t(144)]("cart")>-1||window[t(146)][t(191)][t(144)](t(169))>-1?console[t(164)]("No-optimization"):(console[t(164)](t(203)),setTimeout(function(){var e=t,n=new Event(e(159));window[e(198)](n)},200),setTimeout(function(){var e=t,n=document.createEvent(e(154));n[e(177)](e(192),!0,!0),window.document[e(198)](n)},5e3)),lazyLoadScripts(),setTimeout(function(){var e=t;(critical2=document[e(153)](e(142))).forEach(function(t){t[e(171)]()})},8e3)}function _0x318f(t,e){var n=_0x21bd();return(_0x318f=function(t,e){return n[t-=138]})(t,e)}document[_0x27db89(141)](_0x27db89(167),function(){var t=_0x27db89;windowWidth=screen[t(197)],windowHeight=screen.height,window[t(141)](t(195),function(){wnw_init()}),window[t(141)](t(170),function(){wnw_init()}),t(143)!=navigator[t(201)]&&wnw_init(),window[t(141)](t(189),function(){wnw_init()})});
==========end of wnw-optimization.jsfile ========
___________________________________________________________________________________________________________________________________________________________
box-shadow: rgb(99 99 99 / 10%) 0px 0px 10px 2px;
_____________________________________________________________________________________________________________
Checkout.liquid file: We can modify the checkout.liquid file using jquery as follows. Reference https://shopify.dev/themes/architecture/layouts/checkout-liquid

<script>
(function($) {
  $(document).on("page:load page:change", function() {
    if (Shopify.Checkout.step === "contact_information" || Shopify.Checkout.step === "shipping_method") {
      $( ".customerinfo" ).addClass('active');
    }
    if (Shopify.Checkout.step === "payment_method") {
      $( ".progressbar li" ).addClass('active');
      $("[data-gateway-name=credit_card] .input-radio").prop("checked", true);
      $(".step__sections > .section").insertAfter(".section--payment-method");
      $(".section--payment-method").css("padding-top","0px");
    }
  });
})(Checkout.$);
</script>
_______________________________________________________________________________________________________________
Sticky header or div with scoll:
we can get the height of header using innerHeight(); function to fill the jumping gap when header becomes sticky header.

$(document).ready(function(){ 
var initTopPosition= $('.pricecalculatorwrapper').offset().top;   
$(window).scroll(function(){
 if($(window).scrollTop() > initTopPosition){
        $('body').addClass("stickyaddtocart");
        var divheight = $('.headerclass').innerHeight();
        $('body').css("margin-top",divheight+"px");
} else{
        $(body).removeClass("stickyaddtocart");
        $('body').css("margin-top",divheight+"0");
}

if($(window).scrollTop() > 75){
        $('.site-header').addClass("hideitnow");
} else{
        $('.site-header').removeClass("hideitnow");
}
});
  
});
</script>
---------------------------------------------------------
css with keyframes for smooth sticky header 

@-webkit-keyframes showCompactHeader {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(0);
  }
}
@keyframes showCompactHeader {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(0);
  }
}
@-webkit-keyframes hideCompactHeader {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(-100%);
  }
}
@keyframes hideCompactHeader {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(-100%);
  }
}

.fixedheaderclass {
    height: 60px!important;
    -webkit-animation: showCompactHeader .3s ease;
    animation: showCompactHeader .3s ease;
}
_______________________________________________________________________________________________________________
Side popup with overlay functionality:

<script>
$(document).ready(function(){
$(".openshippingslider").click(function(){ 
$('.slidingdiv').show().addClass("sliderisopened");
$('#slidingdivoverlay').show();
}); 
$(".closeit,#slidingdivoverlay").click(function(){ 
$('.slidingdiv').hide().removeClass("sliderisopened"); 
$('#slidingdivoverlay').hide();
});
}); 
</script>
<div id="slidingdivoverlay"></div>
<div class="slidingdiv" style="display:none;">
<div class="slidingdivinner">

<div class="slidingdivheader"><h3>Free Shipping Details</h3><span class="closeit"><svg class="icon-close " aria-hidden="true" focusable="false" role="presentation" xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18" fill="none">      <path d="M17 1L1 17" stroke="currentColor" stroke-width="1.75" stroke-linejoin="round"></path>      <path d="M1 1L17 17" stroke="currentColor" stroke-width="1.75" stroke-linejoin="round"></path>    </svg></span></div>
<ul>
<li><img src="https://cdn.shopify.com/s/files/1/2698/4416/files/411776_1.png?v=1659464251"><p>Free standard Shipping every day for everything</p></li>
<li><img src="https://cdn.shopify.com/s/files/1/2698/4416/files/3988259_1.png?v=1659464251"><p>White glove delivery and setup options in your room of choice available on select items</p></li>
<li><img src="https://cdn.shopify.com/s/files/1/2698/4416/files/600268_1.png?v=1659464252"><p>Free Shipping to the lower 48 states (excludes Alaska and Hawaii)</p></li>
</ul> 
<div class="learnmoretab"><a href="/policies/shipping-policy">Learn More</a></div> 
</div>

</div>
<style>
#slidingdivoverlay {position: fixed;display: none;width: 100%;height: 100%;top: 0;left: 0;right: 0;bottom: 0;background-color: #0000007a;z-index: 999;cursor: pointer;}.slidingdivinner ul {list-style: none;margin: 50px 0;float: left;width: 100%;padding-left: 90px;padding-right: 10px;}.slidingdivinner ul li p {margin: 0;font-size: 16px;line-height: 25px;}.slidingdivinner {justify-content: center;text-align: center;position: relative;}.slidingdiv {position: fixed;bottom: 0;right: 0;margin: 0 auto;width: 100%;float: left;top: 0;background: #ffffff!important;z-index: 31474836444;max-width: 400px;box-shadow: rgb(99 99 99 / 20%) 0px 1px 3px 3px;}.slidingdivheader {float: left;width: 100%;display: flex;background: #f8f8f8;padding: 25px;box-shadow: rgb(99 99 99 / 10%) 0px 1px 3px 1px;}.slidingdivheader h3 {margin: 0;width: 100%;text-align: left;font-size: 18px;font-weight: 600;}span.closeit {float: right;width: 30px;cursor: pointer;font-size: 20px;font-weight: 600;}.slidingdivinner ul li {position: relative;padding: 0;float: left;width: 100%;margin-bottom: 50px;text-align: left;line-height: 20px;}.slidingdivinner ul li img {width: 40px;position: absolute;left: -70px;top: 6px;}.learnmoretab a {text-underline-offset: 1px;font-size: 16px;color: #197bbd;}@media only screen and (max-width: 668px) {.slidingdiv {width: 100%;max-width: 100%;float: left;left: 0;margin: 0 auto;height: 380px;top: unset;}.slidingdivinner ul li {margin-bottom: 25px;}.slidingdivinner ul {margin: 25px 0;margin-bottom: 0;}.slidingdivheader {padding: 15px 25px;}}
</style>
________________________________________________________________________________________________________________________________
Close icon css:
.pswp .pswp__button--close {
    width: 2.5rem;
    height: 2.5rem;
    margin: 12px;
    color: #000;
    background: #fff;
    border-radius: 100%;
    box-shadow: 0 0 0 1px rgba(127, 127, 127, 0.03), 0 2px 5px rgba(127, 127, 127, 0.3);
    transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1), opacity 150ms cubic-bezier(0.4, 0, 0.2, 1), box-shadow 150ms cubic-bezier(0.4, 0, 0.2, 1);
    opacity: 1;
}

.pswp .pswp__button--close:hover {
    box-shadow: 0 0 0 1px rgb(127 127 127 / 4%), 0 3px 10px rgb(127 127 127 / 40%);
    transform: scale(1.125);
}
________________________________________________________________________________________________________________________________________

function continuerunner() {
.....line of codes......
setTimeout(continuerunner, 1000);
}
continuerunner();
________________________________________________________________________________________________________________________________________
Shopify Schema:
create a snippet such as "structured-data" and put following code in it. Then reder that snippet in theme.liquid file.
..............................
{% comment %}
  Article structured data
  https://developers.google.com/search/docs/data-types/articles
{% endcomment %}

{% if template contains 'article' %}
  {%- capture article_description  -%}
    {%- if article.excerpt != blank -%}
      {{ article.excerpt | strip_html }}
    {%- else -%}
      {{ article.content | truncatewords: 100 | strip_html }}
    {%- endif -%}
  {%- endcapture -%}

  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "BlogPosting",
      "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": "{{ shop.url }}{{ article.url }}"
      },
      "headline": {{ article.title | json }},
      {% if article.image %}
        "image": {
          "@type": "ImageObject",
          "url": {{ article.image | img_url: '800x800' | prepend: 'https:' | json }},
          "height": 800,
          "width": 800
        },
      {% endif %}
      "datePublished": {{ article.published_at | date: '%Y-%m-%dT%H:%M:%S%z' | json}},
      "dateModified": {{ article.published_at | date: '%Y-%m-%dT%H:%M:%S%z' | json}},
      "author": {
        "@type": "Person",
        "name": {{ article.author | json }}
      },
      "publisher": {
        "@type": "Organization",
        "name": {{ shop.name | json }},
        "logo": {
          "@type": "ImageObject",
          "url": {{ article.user.image | img_url: '200x200' | prepend: 'https:' | json }}
        }
      },
      "description": {{ article_description | json }}
    }
  </script>
{% endif %}

{% comment %}
  Breadcrumbs
  https://developers.google.com/search/docs/data-types/breadcrumbs
{% endcomment %}

{%- if current_tags -%}
  {%- assign tag_names = current_tags | join: ', ' %}
  {% comment %}Converting an array to a handle converts it to a string{% endcomment %}
  {%- capture tag_handles -%}
    {%- for tag in current_tags -%}
      {{- tag | handle | append: '|' -}}
    {%- endfor -%}
  {%- endcapture -%}
{%- endif -%}

{% if collection.url == blank %}
  {% assign collection_url = '/collections/all' %}
{% else %}
  {% assign collection_url = collection.url %}
{% endif %}

{% if template.name == 'product' 
    or template.name == 'list-collections' 
    or template.name == 'collection' 
    or template.name == 'blog' 
    or template.name == 'article' 
    or template.name == 'search' 
    or template.name == 'cart' 
    or template.name == 'page'
%}

  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "BreadcrumbList",
      "itemListElement": [
      {% case template.name %}
        {% when 'product' %}
          {% if product.collections.size >= 1 %}
            {
              "@type": "ListItem",
              "position": 1,
              "item": {
                "@id": "{{ shop.url }}/collections",
                "name": {{ 'structured_data.breadcrumbs.collections' | t | json }}
              }
            },
            {
              "@type": "ListItem",
              "position": 2,
              "item": {
                "@id": "{{ shop.url }}/collections/{{ product.collections.first.handle }}",
                "name": {{ product.collections.first.title | json }}
              }
            },
          {% else %}
            {
              "@type": "ListItem",
              "position": 1,
              "item": {
                "@id": "{{ shop.url }}/products",
                "name": {{ 'structured_data.breadcrumbs.products' | t | json }}
              }
            },
          {% endif %}
          {
            "@type": "ListItem",
            "position": {% if product.collections.size >= 1 %}3{% else %}2{% endif %},
            "item": {
              "@id": "{{ shop.url }}{{ product.url | within: collection }}",
              "name": {{ product.title | json }}
            }
          }
        {% when 'list-collections' %}
          {
            "@type": "ListItem",
            "position": 1,
            "item": {
              "@id": "{{ shop.url }}/collections",
              "name": {{ 'structured_data.breadcrumbs.collections' | t | json }}
            }
          }
          {% if current_page != 1 %}
            ,
            {
              "@type": "ListItem",
              "position": 2,
              "item": {
                "@id": "{{ shop.url }}/collections",
                "name": {{ 'structured_data.breadcrumbs.page' | t: page: current_page | json }}
              }
            }
          {% endif %}
        {% when 'collection' %}
          {
            "@type": "ListItem",
            "position": 1,
            "item": {
              "@id": "{{ shop.url }}/collections",
              "name": {{ 'structured_data.breadcrumbs.collections' | t | json }}
            }
          },
          {
            "@type": "ListItem",
            "position": 2,
            "item": {
              "@id": "{{ shop.url }}{{ collection_url }}",
              "name": {{ collection.title | json }}
            }
          }
          {% if current_tags %}
            ,
            {
              "@type": "ListItem",
              "position": 3,
              "item": {
                "@id": "{{ shop.url }}{{ collection_url }}/{{- tag_handles | split: '|' | join: '+' -}}",
                "name": {{ 'structured_data.breadcrumbs.tags_html' | t: tags: tag_names | json }}
              }
            }
          {% endif %}
          {% if current_page != 1 %}
            {% if current_tags %}
              {% assign position = 4 %}
            {% else %}
              {% assign position = 3 %}
            {% endif %}
            ,
            {
              "@type": "ListItem",
              "position": {{ position }},
              "item": {
                "@id": "{{ shop.url }}/collections?page={{ current_page }}",
                "name": {{ 'structured_data.breadcrumbs.page' | t: page: current_page | json }}
              }
            }
          {% endif %}
        {% when 'blog' or 'article' %}
          {
            "@type": "ListItem",
            "position": 1,
            "item": {
              "@id": "{{ shop.url }}{{ blog.url }}",
              "name": {{ blog.title | json }}
            }
          }
          {% if template.name == 'article' %}
            ,
            {
              "@type": "ListItem",
              "position": 2,
              "item": {
                "@id": "{{ shop.url }}{{ article.url }}",
                "name": {{ article.title | json }}
              }
            }
          {% elsif current_tags %}
            ,
            {
              "@type": "ListItem",
              "position": 2,
              "item": {
                "@id": "{{ shop.url }}{{ blog.url }}/tagged/{{- tag_handles | split: '|' | join: '+' -}}",
                "name": {{ 'structured_data.breadcrumbs.tags_html' | t: tags: tag_names | json }}
              }
            }
          {% endif %}
          {% if current_page != 1 %}
            {% if current_tags %}
              {% assign position = 3 %}
              {%- capture url -%}
                {{ shop.url }}{{ blog.url }}/tagged/{{ tag_handles | split: '|' | join: '+' }}?page={{ current_page }}
              {%- endcapture -%}
            {% else %}
              {% assign position = 2 %}
                {%- capture url -%}
                {{ shop.url }}{{ blog.url }}?page={{ current_page }}
              {%- endcapture -%}
            {% endif %}
            ,
            {
              "@type": "ListItem",
              "position": {{ position }},
              "item": {
                "@id": "{{ url }}",
                "name": {{ 'structured_data.breadcrumbs.page' | t: page: current_page | json }}
              }
            }
          {% endif %}
        {% when 'search' %}
          {
            "@type": "ListItem",
            "position": 1,
            "item": {
              "@id": "{{ shop.url }}/search",
              "name": {{ 'structured_data.breadcrumbs.search' | t | json }}
            }
          }
          {% if search.performed %}
            {
              "@type": "ListItem",
              "position": 2,
              "item": {
                "@id": "{{ shop.url }}/search?q={{ search.terms }}",
                "name": {{ search.terms | json }}
              }
            }
            {% if current_page != 1 %}
              {
                "@type": "ListItem",
                "position": 3,
                "item": {
                  "@id": "{{ shop.url }}/search?page={{ current_page }}&q={{ search.terms }}",
                  "name": {{ 'structured_data.breadcrumbs.page' | t: page: current_page | json }}
                }
              }
            {% endif %}
          {% endif %}
        {% when 'cart' %}
          {
            "@type": "ListItem",
            "position": 1,
            "item": {
              "@id": "{{ shop.url }}/cart",
              "name": {{ 'structured_data.breadcrumbs.cart' | t | json }}
            }
          }
        {% when 'page' %}
          {
            "@type": "ListItem",
            "position": 1,
            "item": {
              "@id": "{{ page.url }}",
              "name": {{ page.title | json }}
            }
          }
        {% else %}
        {% endcase %}
      ]
    }
  </script>
{% endif %}

{% comment %}
  Product structured data
  https://developers.google.com/search/docs/data-types/products
{% endcomment %}

{% if template contains 'product' %}
  {% assign selected_variant = product.selected_or_first_available_variant | default: product.variants.first %}
  {% assign product_image = selected_variant.featured_image | default: product.featured_image %}
  {%- capture product_name -%}
    {{ product.title }}
    {%- if selected_variant.title != 'Default Title' and selected_variant.option1 == 'Default Title' -%}
      - {{ selected_variant.title }}
    {%- endif -%}
  {%- endcapture -%}

  {%- assign now = 'now' | date: '%Y-%m-%d' | split: '-' -%}
  {% capture year_from_now %}{{ now[0] | plus: 1 }}-{{ now[1] }}-{{ now[2] | at_most: 28 }}{% endcapture %}

  <script type="application/ld+json">
  {
    "@context": "http://schema.org/",
    "@type": "Product",
    "name": {{ product_name | strip_newlines | json }},
    "image": {{ product_image | img_url: '1024x1024' | prepend: 'https:' | json }},
    {% if product.description != blank %}
      "description": {{ product.description | json }},
    {% endif %}
    {% if product.vendor %}
      "brand": {
        "@type": "Thing",
        "name": {{ product.vendor | json }}
      },
    {% endif %}
    {% if selected_variant.sku != blank %}
      "sku": {{ selected_variant.sku | json }},
    {% endif %}
    {% if selected_variant.barcode != blank %}
      "mpn": {{ selected_variant.barcode | json }},
    {% endif %}
    "offers": {
      "@type": "Offer",
      "priceCurrency": {{ cart.currency.iso_code | json }},
      "price": {{ selected_variant.price | divided_by: 100.0 | json }},
      "availability": "http://schema.org/{% if selected_variant.available %}InStock{% else %}OutOfStock{% endif %}",
      "url": "{{ shop.url }}{{ selected_variant.url }}",
      "seller": {
        "@type": "Organization",
        "name": {{ shop.name | json }}
      },
      "priceValidUntil": {{ year_from_now | json }}
    }
  }
  </script>
{% endif %}

{% comment %}
  Store information
  https://developers.google.com/search/docs/data-types/sitename
{% endcomment %}

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "WebSite",
    "name": "{{ shop.name }}",
    "url": "{{ shop.url }}"
  }
</script>
..........................................
___________________________________________________________________________________________________________________________________________________
Script to get all products data of website: Such as to create CSV file.
Note, The shopify pagination has a limit to show maximum 1000 products in one page, so if you have products more than 1000, then put the following condition in collection page section and change its line {% paginate collection.products by paginate_by %} to {% paginate collection.products by 1000 %}. Then copy the first 1000 product data in first page, then copy the rest of products data on second page such as https://sleepgalleria.com/collections/purecare?page=2&grid_list=grid-view 
Also note that, this function will only run with theme that has native theme pagination such as 1,2,3..links at bottom of collection pages. this does not work with load more button on collection pages such as load more button added by "Product filter and search" app. so if you want to use this on sleepgalleria, then create a duplicate theme and then go to "Poduct filter and Search" app and uninstall the App code from duplcated theme using App uninstall option. then use this function.

{% paginate collections["all-products"].products by 1000 %}
{% for product in collections["all-products"].products %}
{% if product.has_only_default_variant %}
<p>{{ product.id }},,https://sleepgalleria.com{{ product.url }},{{ product.title  | remove: '"' }},{{ product.featured_image | img_url: "medium" }},{{ product.title | remove: '"' }},All,{{ product.vendor }}</p>
{% else %}
<p>{{ product.id }},,https://sleepgalleria.com{{ product.url }},{{ product.title | remove: '"' }},{{ product.featured_image | img_url: "medium" }},{{ product.title | remove: '"' }},All,{{ product.vendor }}</p>
{% for variant in product.variants %}
<p>{{ product.id }},{{ variant.id }},https://sleepgalleria.com{{ product.url }},{{ product.title | remove: '"' }},{{ product.featured_image | img_url: "medium" }},{{ product.title | remove: '"' }},All,{{ product.vendor }}</p>
{% endfor %}
 {% endif %}

{% endfor %}
{% endpaginate %}

_______________________________________________________________________________________________________________________________________________________________

Power Reveiw code for collections pages, working with pagination.

<!-- start_collection_js_code -->
<script src="https://ui.powerreviews.com/stable/4.1/ui.js" async></script> 
<script>
  window.pwr = window.pwr || function () {
    (pwr.q = pwr.q || []).push(arguments); 
  };
  pwr('render', [
{% paginate collection.products by paginate_by %}
    {% for product in collection.products limit: product_limit %}
      {
        api_key: 'aced7a06-8d80-4c0b-a6b3-b4d70b22b5e6',
        locale: 'en_US',
        merchant_group_id: '1411484844',
        merchant_id: '152597421',
        page_id: '{{ product.id }}',
        components: {
          CategorySnippet: 'snippet-{{ product.id }}'
        }
      } {% if forloop.last == false %}, {% endif %}
    {% endfor %}
{% endpaginate %}
  ]);
</script>
<!-- end_collection_js_code -->

_______________________________________________________________________________________________________________________________________________________
Apply css to only iphone devices and other IOS devices.

@supports (-webkit-touch-callout: none) {
span.announcement-text,.mobileinfo span {
    letter-spacing: 0px!important;
}
}
------------------------------------------------
Apply css other than iphone devices and other IOS devices.

@supports not (-webkit-touch-callout: none) {
  /* CSS for other than iOS devices */ 
}
____________________________________________________________________________________________________________________________________________________________________
localization is an object to display different content respective to each country.
{% case localization.country_iso_code %}
 {% when "AU" %}
 <p>Thank you Australia</p>
 {% when "US" %}
 <p>Thank you America</p>
 {% when "NZ" %}
 <p>Thank you New Zealand</p>
 {% when "CA" %}
 <p>Thank you Canada</p>
{% endcase %}
____________________________________________________________________________________________________________________________________________________________________
CSS to make the long paragraph to cut in one line and add ... at end just like excerpt.

.paragraph {
    white-space: nowrap;
    text-overflow: ellipsis!important;
    width: 100%;
    display: inline-block!important;
}
______________________________________________________________________________________________________________________________________________________________________
Add asterisk sign (requried) to required fields on checkout form.

$("[aria-required=true]").each(function() {
    var placeholder = $(this).attr('placeholder')+'*';
    $(this).attr('placeholder',placeholder);
   var label = $(this).prev('.field__label').text()+'*';
   $(this).prev('.field__label').text(label);
});
_____________________________________________________________________________________________________
Javascript:

<script>
window.onload = function(){
function continuerunner() {
var econtent=document.getElementById("carttotalamount");
var allcontent=econtent.innerHTML; //get html of #carttotalamount div
var allcontent1=allcontent.substring(0, allcontent.indexOf('<')); // get part of string before "<"
var allcontent2=allcontent1.slice(allcontent1.indexOf('£') + 1);  // get part of string after "£"
var getminorderamount=document.getElementById("getminorderamount").innerHTML;
if(parseInt(allcontent2)<=parseInt(getminorderamount)){
alert("amount is less");
}else{
alert("amount is more");
}
setTimeout(continuerunner, 4000);
}
continuerunner();
}
</script>
________________________________________________________________________________________________________________
Flickity slider : Following is the code to fix the slide dragging issue (sometime gets stuck) on IOS devices
..................
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
<script>
jQuery(document).ready(function($) {

    /* fix iOS touchmove issue */
    ;
    (function() {
        let touchingCarousel = false
        let startXCoordinate

        document.body.addEventListener('touchstart', e => {
            if (e.target.closest('.flickity-slider')) {
                touchingCarousel = true
            } else {
                touchingCarousel = false
                return
            }
            startXCoordinate = e.touches[0].pageX
        })

        document.body.addEventListener('touchmove', e => {
            if (
                !touchingCarousel ||
                !e.cancelable ||
                Math.abs(e.touches[0].pageX - startXCoordinate) < 8
            ) return
            e.preventDefault()
            e.stopPropagation()
        }, {
            passive: false
        })
    }())

    /* prevent resize in flickity if still animating */
    var resize = Flickity.prototype.resize;
    Flickity.prototype.resize = function() {
        if (!this.isAnimating) {
            resize.call(this);
        }
    };

});
</script>
____________________________________________________________________________________________________________________________________________________
/* code for youtube video resizing */
<div class="iframe-container">
youtube embedded code
</div> */
.iframe-container{
position: relative;
width: 100%;
padding-bottom: 56.25%;
height: 0;
}
.iframe-container iframe{
position: absolute;
top:0;
left: 0;
width: 100%;
height: 100%;
}
______________________________________________________________________________________________________________________
Working code to add collection description or product description with "Read more" and "Read less" functionality.

{% if collection.description %}
  <div class="collection-hero__inner page-width" style="flex-direction: column; margin-top: -60px; width: 100%;">
    <div class="collection-hero__description rte">
      <div class="truncate-container">
        <div id="truncated-product-description">
          {{ collection.description | truncate: 400 }}
          {% if collection.description.size > 0 %}
            <span id="read-more" class="read-additional">Read more</span>
          {% endif %}
        </div>
        <div id="product-description" style="display:none;">
          {{ collection.description }} <span id="read-less" class="read-additional">Read less</span>
        </div>
      </div>
    </div>
  </div>
{% endif %}

<script>
let read_more = document.getElementById('read-more')
let read_less = document.getElementById('read-less');
let truncated_description = document.getElementById('truncated-product-description');
let full_description = document.getElementById('product-description');

read_more.addEventListener('click', showHideDescription)
read_less.addEventListener('click', showHideDescription)

function showHideDescription(){
  let ID = this.id
  if(ID === "read-more"){
    truncated_description.style.display = "none";
    full_description.style.display = "block";
  }else {
    truncated_description.style.display = "block";
    full_description.style.display = "none";    
  }
}
</script>

<style>
.read-additional {
  color: #1b191a;
  text-decoration: underline;
font-weight: bold;
}
.read-additional:hover {
  cursor: pointer;
}
#product-description {
  display: none;
}
#read-more {
  position: relative;
  z-index: 1;
}

#truncated-product-description a {
  position: relative;
  z-index: 0;
}
</style>
_________________________________________________________________________________________________________________________________________
Add infinite scrolling on collection pages: https://www.huratips.com/tech-tips/how-to-add-infinite-scroll-pagination-to-shopify-collection-pages.html

/* Add this link on theme.liquid file before </head> tag */
{% if template contains 'collection' %}{{ 'https://cdn.shopify.com/s/files/1/0382/4185/files/ajaxinate.js?937' | script_tag }}{% endif %}

<div id="Huratips-Loop" > /* Add this container div with "Huratips-Loop" id on loop of collecton page, if you have already ul as container then use copy id of ul tag and paste in inplace of "#Huratips-Loop" in bottom javscript and leave to add container div */
      {% for product in collection.products %}
        {% include 'product-grid-item' %}
      {% endfor %}
</div>

/* Repalce pagination code of collection page with this code */
<div id="Huratips-Pagination"> 
    {% if paginate.next %}
    <a href="{{ paginate.next.url }}">Loading More</a>
    {% endif %}  
</div>

/* Add this javascript at bottom of collection page */
<script>
  document.addEventListener("DOMContentLoaded", function() {
    var endlessScroll = new Ajaxinate({
      container: '#Huratips-Loop', /* repalce it with id of ul if available */
      pagination: '#Huratips-Pagination'
    });
  });
</script>
________________________________________________________________________________________________________________________________________________________________
Detect or track visitor location:

<script>
$(document).ready(function(){
$.get("https://ipinfo.io/json", function (response) { 
if(response.country == "US"){
$(".onlyforusa").show();
}
}, "jsonp");
});  
</script>
___________________________________________________________________________________________________________________________________________________________
Jquery to open close details tag on hover: Also add the css if sub menu gets hidden when we mouseout the detail tag.

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
<script>
$(document).ready(function(){
$('details').on('mouseover', function() {
    $(this).attr('open', true);
  }).on('mouseout', function() {
    $(this).attr('open', false);
  })
  });
</script>
<style>
header details[open] summary:before {
    content: "";
    height: 38px;
    width: 100%;
    position: absolute;
    top: 25px;
    right: 0;
    left: 0;
    margin: 0 auto;
}
</style>
__________________________________________________________________________________________________________
Following is a code to show custom related products for each product instead of dynamic recommended products using product list meta field in product recommendation section.
------------------------------------------------------------------------------------
{%assign related_products = product.metafields.custom.related_products.value %}
  <div class="related-products" data-related-products>
 {%- if recommendations.performed or related_products -%}
      {%- if recommendations.products_count > 0 or related_products != blank-%}
       <div class="wrapper">
            <div class="carousel__container">
              <div class="carousel" data-collection-slider>
            {%- if  related_products -%}
               {% for related_product in related_products %}
               {%- render 'product-grid-item', product: related_product, carousel: true -%}
               {% endfor %}
            {%- else -%}
                {%- for product in recommendations.products -%}
                  {%- render 'product-grid-item', product: product, carousel: true -%}
                {%- endfor -%}
            {%- endif -%}
              </div>
            </div>
          </div>
        </div>
      {%- endif -%}
    {%- else -%}
      <div class="related__placeholder"></div>
    {%- endif -%}
  </div>
______________________________________________________________________________________________________________________________________________________________
Custom Recommended products:
Here is the full code to display related products with priority as below:
1. If related products are set for particular product using prouct_list meta field, then show them
2. if related products are not set for product, then show default list of custom products that are set in theme settings using prouct_list schema type.
3. if both related products are not set for partiular product and theme settings, then show default recommended products.

--------------------------------------------------------------------
Add this code in theme schema and select products to show in theme customization settings
,
	 {
			"type": "product_list",
			"id": "productlist",
			"label": "Select Custom Related Products"
	}
--------------------------------------------------------------------
{%- liquid
  assign heading = section.settings.product_recommendations_heading
  assign limit = section.settings.limit
  assign bg_color = section.settings.bg_color
-%}

{%- style -%}
  {%- if bg_color != 'rgba(0,0,0,0)' and bg_color != '' -%}
		#RelatedProducts--{{ section.id }} { background-color: {{ bg_color }}; }
    #RelatedProducts--{{ section.id }} .product-grid-item {
      --bg: {{ bg_color }};
    }
  {%- endif -%}
{%- endstyle -%}
{%assign related_products = product.metafields.custom.related_products.value %}
<section
  id="RelatedProducts--{{ section.id }}"
  data-section-type="related-products"
  data-section-id="{{ section.id }}"
  data-product-id="{{ product.id }}"
  data-limit="{{ limit }}"
  data-show-section="{{ section.settings.show_section }}">

  <div class="related-products" data-related-products>
 {%- if recommendations.performed or related_products or settings.productlist -%}
      {%- if recommendations.products_count > 0 or related_products != blank or settings.productlist != blank -%}
        
          {%- if heading != blank -%}
            <div class="featured-collection__title">
              <div class="wrapper">
                <h2 class="featured-collection__heading section__heading h4">{{ heading }}</h2>

                {%- if settings.show_spacer_lines -%}
                  <hr>
                {%- endif -%}
              </div>
            </div>
          {%- endif -%}

          <div class="wrapper">
            <div class="carousel__container">
              <div class="carousel" data-collection-slider>
            {%- if  related_products -%}
               {% for related_product in related_products %}
               {%- render 'product-grid-item', product: related_product, carousel: true -%}
               {% endfor %}
            {%- elsif settings.productlist != blank -%}
            {% for productlist in settings.productlist %}
               {%- render 'product-grid-item', product: productlist, carousel: true -%}
               {% endfor %}
            {%- else -%}
                {%- for product in recommendations.products -%}
                  {%- render 'product-grid-item', product: product, carousel: true -%}
                {%- endfor -%}
            {%- endif -%}
              </div>
            </div>
          </div>
        </div>
      {%- endif -%}
    {%- else -%}
      <div class="related__placeholder"></div>
    {%- endif -%}
  </div>

</section>

{% schema %}
{
  "name": "Product recommendations",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_section",
      "label": "Show related products",
      "info": "Dynamic recommendations change and improve with time. [Learn more](https://help.shopify.com/en/themes/development/recommended-products)",
      "default": true
    },
    {
			"type":    "range",
			"id":      "limit",
			"min":     1,
			"max":     6,
			"step":    1,
			"label":   "Product limit",
			"default": 4
		},
    {
      "type": "text",
      "id": "product_recommendations_heading",
      "label": "Heading",
      "default": "You May Also Like"
    },
    {
			"type": "header",
			"content": "Colors"
		},
		{
			"type": "color",
			"id": "bg_color",
			"label": "Background"
        }
  ]
}
{% endschema %}
________________________________________________________________________________________________________________________________________________________
Custom Random Sort:

{% assign randomnizeumber =  product.id | modulo: 5  %}
             {%- if  randomnizeumber == 0 -%}
             {% assign selectedproducts = settings.productlist | sort: "title" | reverse %}
             {%- elsif randomnizeumber == 1 -%}
             {% assign selectedproducts = settings.productlist | sort: "title" %}
             {%- elsif randomnizeumber == 2 -%}
             {% assign selectedproducts = settings.productlist | sort: "price" | reverse %}
             {%- elsif randomnizeumber == 3 -%}
             {% assign selectedproducts = settings.productlist | sort: "price" %}
             {%- elsif randomnizeumber == 4 -%}
             {% assign selectedproducts = settings.productlist | sort: "price" | reverse %}
             {%- else -%}
             {% assign selectedproducts = settings.productlist | sort: "title" %}
             {%- endif -%}
_______________________________________________________________________________________________
Dynamic Schema with Blocks:

<section id="section-id-{{ section.id }}" class="customsection section section-text-columns-with-images {% if section.settings.alternate_bg_color %}use-alt-bg full-width-section{% endif %}" data-cc-animate>
  {% style %}
    {%- for block in section.blocks -%}
    #section-id-{{ section.id }} #block-id-{{ block.id }} .text-column__image {
      max-width: {{ block.settings.image_width }}px;
    }
    {%- endfor -%}
.customcommon {
    width: 50%;
    float: left;
    padding: 50px 40px;
}
.customsection-left {
    background: yellow;
}
.customcommon h2 {
    font-size: 35px;
    margin-bottom: 10px;
}
.customcommon ul {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-wrap: wrap;
}
.customcommon ul li {
    flex: 0 0 25%;
    margin-bottom: 25px;
    cursor: pointer;
}
.customcommon h3 {
    font-size: 15px;
    text-align: center;
    margin-top: 8px;
}
a.btn.btncustom {
    margin-top: 20px;
    border-radius: 20px;
}
.customsection-right.customcommon {
    padding-top: 25px;
}
.addspace {
    float: left;
    width: 100%;
    padding: 30px 0px;
}
@media (max-width: 1200px) {
.customcommon {
    width: 100%;
}
.customcommon {
    padding: 50px 20px 20px;
}
.customsection-right.customcommon {
    padding-bottom: 50px;
}
.addspace {
    display: none;
}
}
@media (max-width: 500px) {
.customcommon ul li {
    flex: 0 0 50%;
}
.customcommon {
    padding: 50px 10px 20px;
}
}
  {% endstyle %}

<div class="container">

<div class="customsection-container">
<div class="customsection-left customcommon">
<ul>
{% for block in section.blocks %}
<li title="{{ block.settings.text | strip_html }}">
{%- if block.settings.image != blank -%}
<div class="imgclass" style="text-align:center;"><img src="{{ block.settings.image | image_url: width: 50 }}"/></div>
{%- endif -%} 
{% if block.settings.title != blank %}
<h3 class="text-column__title">{{ block.settings.title }}</h3>
{% endif %}
</li>     
{% endfor %}
</ul>
</div>
<div class="customsection-right customcommon">
<h2>{{ section.settings.title | escape }}</h2>
<div class="textclass">{{ section.settings.descriptiontext | escape }}</div>
<a class="btn btncustom" href="{{ block.settings.link }}">Learn More</a>
</div>
      
    </div>
  </div>
<div class="addspace"></div>

</section>

{% schema %}
{
  "name": "Custom Section",
  "max_blocks": 8,
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "Custom Section"
    },
    {
      "type": "text",
      "id": "descriptiontext",
      "label": "Description"
    },
        {
          "type": "url",
          "id": "link",
          "label": "Link"
        }
  ],
  "blocks": [
    {
      "type": "text_block",
      "name": "icon",
      "settings": [
        {
          "id": "image",
          "type": "image_picker",
          "label": "Image",
          "info": "Select Icon"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Heading"
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "Hover text"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Custom Section",
      "settings": {
      },
      "blocks": [
        {
          "type": "text_block"
        },
        {
          "type": "text_block"
        },
        {
          "type": "text_block"
        }
      ]
    }
  ]
}
{% endschema %}
_______________________________________________________________________________________________________________________________________________
